%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: A9aytw67_d8aqsm_of4.tmp.pdf
%%Creator: Adobe Acrobat 24.1.0
%%For: yy010
%%CreationDate: 2024/9/23, 15:58:13
%%BoundingBox: 0 0 364 279
%%HiResBoundingBox: 0 0 363.1200 279
%%CropBox: 0 0 363.1200 279
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1224 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c001 79.675d0f7, 2023/06/11-19:21:16        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2024-09-23T15:57:13+02:00"
   xmp:CreateDate="2024-09-23T15:57:13+02:00"
   xmp:MetadataDate="2024-09-23T15:57:13+02:00"
   xmp:CreatorTool="ACM"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:a03f9be9-dc9c-491b-9618-3aa6d8a8b54f"
   xmpMM:InstanceID="uuid:7c5c58a9-8cb6-455c-8b68-5908cfcd6bc2"
   pdf:Producer="Sony Electronic Publishing Services">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Scheduler activations</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">(0734-2071) 10:1 0053-0079 (Feb. 1992)</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Anderson</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -279 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 279 li
363.12 279 li
363.12 0 li
cp
clp
9.60001 271.32 mo
330.96 271.32 li
330.96 -15.2401 li
9.60001 -15.2401 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
gsave
clp
[1 0 0 -1 126 279 ]ct
[321.36 0 0 286.56 -116.4 7.67999 ]ct
snap_to_device
<<
/T 1
/W 1339 
/H 1194 
/M[1339 0 0 -1194 0 1194 ]
/BC 8 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
sepimg
JcLB&JcLB&JcLB&JcLB&JcLB&cN*qD\,_*\JcLB&JcLB&JcLB&JcLB&MZEYSrW%NMJcLB&JcLB&JcLB&
JcLB&JcNdjq>^'eJcLB&JcLB&JcLB&JcLB&JcLB&d/a"B\c@<^JcLB&JcLB&JcLB&JcLB&Mu`\Rrr@WN
JcLB&JcLB&JcLB&JcLB&JcNaiqZ$0fJcLB&JcLB&JcLB&JcLB&JcLB&ciEtC\H%3]JcLB&JcLB&JcLB&
JcLB&M#dSUquD<KJcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
bQ.YB\c@<^JcLB&JcLB&JcLB&JcLB&L]IDRrr@WNJcLB&JcN%UJcLB&JcLB&JcLu7rVuKiJcLB&JcLB&
JcLB&JcLB&JcLB&bQ.YB\c@<^JcLB&JcLB&JcLB&JcLB&LB.ASrW%NMJcLB&JcN%UJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&blI_B\c@<^JcLB&JcLB&JcLB&JcLB&L]IDRrr@WNJcLB&JcN%UJcLB&
JcLB&JcLr6rr;TjJcLB&JcLB&JcLB&JcLB&JcLB&blI_B\c@<^JcLB&JcLB&JcLB&JcLB&LB.>Rrr@WN
JcLB&JcN%UJcLB&JcLB&JcLB&lN$k_SH+6AJcLB&JcLB&JcLB&JcLB&U]CDoiW+Q1JcLB&JcLB&JcLB&
JcLB&JcOX-s8StsJcLB&JcN%UJcLB&JcLB&JcLB&lN$k_SH+6AJcLB&JcLB&JcLB&JcLB&b5_PBh#RBQ
iW+Q1JcLB&JcLB&JcLB&JcLB&L]IDRrrCsWrVrbqJcLB&JcN%UJcLB&JcLB&JcLu7rVuKilN$n`S,e-@
JcLB&JcLB&JcLB&JcLB&blI_Bh>mKRiW+Q1JcLB&JcLB&JcLB&JcLB&L]IDRrrCmUrr8nsJcLB&JcN%U
JcLB&JcLB&JcLo5!<;WjlN$n`S,e-@JcLB&JcLB&JcLB&JcLB&V?$PoiW+Q1JcLB&JcLB&JcLB&JcLB&
JcO^/r;W\qJcLB&JcN%UJcLB&JcLB&JcLB&lN$k_SH+6AJcLB&JcLB&JcLB&JcLB&b5_PBgAq6QiW+Q1
JcLB&JcLB&JcLB&JcLB&LB.>RrrCmUrr8nsJcLB&JcN%UJcLB&JcLB&JcLu7rVuKiklC__SH+6AJcLB&
JcLB&JcLB&JcLB&bQ.YBh>mKRiW+Q1JcLB&JcLB&JcLB&JcLB&LB.>RrrCsWr;W\qJcLB&JcN%UJcLB&
JcLB&JcLr6rr;TjklC__SH+6AJcLB&JcLB&JcLB&JcLB&U]CDoiW+Q1JcLB&JcLB&JcLB&JcLB&JcO^/
r;W\qJcLB&JcN%UJcLB&JcLB&JcLB&klC__SH+6AJcLB&JcLB&JcLB&JcLB&U]CDoiW+Q1JcLB&JcLB&
JcLB&JcLB&LB.>RrrCsWr;W\qJcLB&JcN%UJcLB&JcLB&JcLr6rr;TjlN$k_SH+6AJcLB&JcLB&JcLB&
JcLB&bQ.YBh>mKRiW+Q1JcLB&JcLB&JcLB&JcLB&LB.>RrrCsWr;W\qJcLB&JcN%UJcLB&JcLB&JcLr6
rr;TjklC__SH+6AJcLB&JcLB&JcLB&JcLB&bQ.YBh>mKRiW+Q1JcLB&JcLB&JcLB&JcLB&L&_5RrW(dT
rr8nsJcLB&JcN%UJcLB&JcLB&JcLB&klC__SH+6AJcLB&JcLB&JcLB&JcLB&U]CDoiW+Q1JcLB&JcLB&
JcLB&JcLB&JcOX-rr8nsJcLB&JcN%UJcLB&JcLB&JcLr6rr;TjklC__SH+6AJcLB&JcLB&JcLB&JcLB&
bQ.YBh>mKRiW+Q1JcLB&JcLB&JcLB&JcLB&LB.>RrrCmUrr8nsJcLB&JcN%UJcLB&JcLB&JcLr6rr;Tj
klC__SH+6AJcLB&JcLB&JcLB&JcLB&bQ.YBg]7?RiW+Q1JcLB&JcLB&JcLB&JcLB&JcOX-rr8nsJcLB&
JcN%UJcLB&JcLB&JcLB&lN$k_SH+6AJcLB&JcLB&JcLB&JcLB&U]CDoiW+Q1JcLB&JcLB&JcLB&JcLB&
JcOX-rr8nsJcLB&JcN%UJcLB&JcLB&JcLB&klC__SH+6AJcLB&JcLB&JcLB&JcLB&bQ.YBg]7?RiW+Q1
JcLB&JcLB&JcLB&JcLB&LB.>RrrCmUrr8nsJcLB&JcN%UJcLB&JcLB&JcLr6rr;TjklC__SH+6AJcLB&
JcLB&JcLB&JcLB&bQ.YBg]7?RiW+Q1JcLB&JcLB&JcLB&JcLB&LB.>RrrCmUrr8nsJcLB&JcN%UJcLB&
JcLB&JcLB&klC__SH+6AJcLB&JcLB&JcLB&JcLB&U]CDoiW+Q1JcLB&JcLB&JcLB&JcLB&JcOX-rr8ns
JcLB&JcN%UJcLB&JcLB&JcLB&klC__SH+6AJcLB&JcLB&JcLB&JcLB&bQ.YBg]7?RiW+Q1JcLB&JcLB&
JcLB&JcLB&LB.>RrrCmUrr8nsJcLB&JcN%UJcLB&JcLB&JcLr6rr;TjklC__SH+6AJcLB&JcLB&JcLB&
JcLB&bQ.YBg]7?RiW+Q1JcLB&JcLB&JcLB&JcLB&LB.>RrrCmUrr8nsJcLB&JcN%UJcLB&JcLB&JcLr6
rr;TjklC__SH+6AJcLB&JcLB&JcLB&JcLB&U]CDoiW+Q1JcLB&JcLB&JcLB&JcLB&JcOX-rr9;)!<;cn
JcLB&JcN%UJcN[g!<9k8JcLB&JcN(V!<:IIklCPZquHZpr;c`prW)iqrW)iqr;c`pr;ccqr;ccqquH]q
qZ-Zrq>gKo!!)rtrVu`prVucqrVu`prVucqrr3!!s82lqs82lps8;rqs82lqs82lps82lps8;rqs82lp
s8;rqs82lps8;ots-<Z[!<3#q!!*&o!<3#r!<)rp!<)rr!;lf1!:g*is7u]qs7cQrs8N*!quH]qquH]q
\H%3]r;ZitLB)o+JcLB&li7%c\cDO*rW)iqr;c`prW)rtrr;osqu?Wqqu?Wqqu?Tpqu?Tpr;Z]qqu?Wq
qu?Tpr;Z]qqu?Wqqu?Tpqu?Wqqu?Tpqu6WrrrDrrr;c`pr;ccqr;c`pr;ccqr;c`prW)iqr;ccqr;c`p
r;ccqquHZpr;c`pr;ccqr;Zitr;Z]qr;ZZpr;Z]qqu?Tpr;Z]qqu?Tpr;ZZprVucqqu?Wqqu?Tpqu?Wq
qu?Tpr;Z]qrVuotr;ccqquH]qquHZpquHZpr;ccqr;c`pr;ccqquHZpr;ccqr;c`pr;ccqr;c`prW)iq
rr@WN\,ZO/bQ*4pJcLB&VZ6_siW/uXrrCmUq#C9mr;Z]qqu?Tpr;Z]qr;Z]qqu?Tpr;Z]qr;ZZpr;Z]q
rVuotrW)iqr;ccqr;c`prW)iqr;c`prW)iqr;c`prW)fprW)iqr;ccqr;c`pr;ccqr;c`prr<$!qu?Tp
r;Z]qqu?Tpqu?Tpqu?Wqqu?Tpr;Z]qqu?Tpqu?Tpr;Z]qqu?Tpr;Z]qqu?Wqs8W#sr;ccqr;c`prW)iq
r;c`prW)iqr;ccqr;c`prW)iqr;c`prW)fpr;ccqr;c`prW)lr!<;utqu?Wqqu?WqqZ$Kor;Z]qr;Z]q
qu?Wqqu?9gJcN[g!<9k8JcLB&JcLr6rr;TjklC\^p&G*m^&S05r;ccqr;c`pr;ccqr;ccqquHZpquH]q
qu?m"rrE*!quH]qqu?m"rrE*!qZ-Wqqu?j!!<<)r!!E6$!<;ip!<;9`m/[(ar;ccqr;c`pr;ccqr;c`p
r;ccqquHZpr;c`pr;ccqr;c`pr;ccqquHcsrr;osr;ZZprVucqr;ZZprVu]os8Vio!<;utqu?Tpqu?Tp
r;ZZpr;Z]qr;Z]qqu?QorVlitr;ccqr;[!#rrE*!quHZpr;ccqquH]qqu?j!rrE)0!.k3&!.k3&!.k3p
!<3#R!<3#X!.k3&!.k3&!.k3&!.k3&!.k3+!<3#u!8[_Ts/5pL!.k3&!3lNU!.k3&!.k3&!0R?]s7?<U
!<3"h!.k3&!.k3&!.k3&!.k3&!.k3H!<3#X!7UuKs0)KT!.k3&!.k3&!.k3&!.k3&!8[_Ts0i"-s7HAD
!.k3&!3lNU!.k3&!.k3&!.k48!<3#.!<3#_!.k3&!.k3&!.k3&!.k3&!.k3H!<3#X!8.AMs/uES!.k3&
!.k3&!.k3&!.k3+!<3#u!8[_Ts18:/s765B!.k3&!3lNU!.k3&!.k3&!0R?\s7HBV!<3#3!;lfZ!.k3&
!.k3&!.k3&!.k3&!.k3p!<)rR!<3#X!8RYOs/c9Q!.k3&!.k3&!.k3&!.k3+!<)ot!8[_Ts1\R1s7$)@
!.k3&!3lNU!.k3&!.k3&!0R?]s7?<U!<3#7!;QTV!/LXSs8E"M!.k3&!.k3&!.k3&!.k3p!<3#R!<3#X
!9!qQs/Q.;!<3#9!.k3&!.k3&!.k3&!.k3&!8[_Ts24p2s6p#?!<)uss+p`-!3lNU!.k3&!.k3&!.k48
!<3#;!;lcr!<)rY!/gjUs82kK!.k3&!.k3&!.k3&!.k3H!<3#X!9O:Ys8E#ss/H(=!;ul6!.k3&!.k3&
!.k3&!.k3*!<<*!!8[_Ts2b9<s8;rrs6]l>!!*&ss+^T+!3lNU!.k3&!.k3&!0R?]s7?<U!<3#@!;lfo
!<)rX!07-Ws7u_I!.k3&!.k3&!.k3&!.k3p!<)rS!<3#W!9jL]s8;rrs/,kA!;QT/!.k3&!.k3&!.k3&
!.k3+!<)ot!8deUs2Y3=s8;rss6BZA!;c`qs+CB(!3lNU!.k3&!.k3&!0R?\s7HBW!<3#=!;uis!<)rU
!1!W_s8N)ts7cSG!.k3&!.k3&!.k3&!.k3p!<3#S!<3#W!9O:Vs/#eD!;ulr!<3#3!.k3,!!*&s!.k3&
!.k3&!.k3&!8deUs2P-7s69TE!;lfq!<3"M!.k3f!!*&h!.k3&!.k3&!.k3&!9sR`s2Y38s5!aE!;ulq
!<)rk!.k3&!6kKDs0hu[!.k3&!.k3&!2T\ps5<tA!<3#u!<)qn!7h/Is82lqs1A>`!/LUTs82kK!.k3&
!.k3&!.k4.!<3#?!<)rs!<<)_!0I9Zs8)fqrr<%N!.k3f!<<)i!.k3&!.k3&!.k36!<3#j!9sR`s2k??
s6Tgds6TfU!;ulq!<)rj!.k3&!6kNDs0r&\!.k3&!.k3&!6bHAs5!bTs5<tD!;ulj!<3#q!<<)*!7V#H
s8N)ts1/2^!/LXTs8;qL!.k3&!.k3&!/CRQrr<&V!<3#A!<)rm!;lfm!<<)p!0.'Rs8N(N!.k3f!<<)i
!.k3&!.k3&!.k36!<)rj!9sR`s2tEArrN3#s7lZms7lZps6frU!;QTc!.k3&!6kKDs0hu[!.k3&!.k3&
!6bHAs5!bTs5<tE!<)p!!<<)n!<3#o!<3#,!7V#Ds0r&\!/LUTs82kK!.k3&!.k3&!/:LRs8N)V!<3#C
!<)p!!<<)m!<3#n!<<)r!07-Yrr<&ts8;qL!.k3f!!*&h!.k3&!.k3&!.k3&!9sR`s31QCs8N*!s7QHl
s7ZNns7$)Y!<)rs!<<)h!.k3&!6kKDs0hu[!.k3&!.k3&!2T\ps5<tF!<2uu!<3#l!<3#m!<3#.!7h/K
s02QU!.k3&!.k3&!.k3&!.k4.!<3#D!<)p!!<<)l!<3#m!<3#s!0R?\s7HAD!.k3U!.k3&!.k3&!.k35
!<<)k!9sR`s3:WDs8N*!s7HBks7ZNms7-/\!<3#d!!*&t!.k3&!.k3&!.k3&!.k3&!6bHAs5!bTs5<tH
!<)rt!<<)l!<3#l!<<)/!7q5Ms7cTos8;ros82lss3(Ip!.k3&!.k3&!.k3&!/CRQrr<&V!<3#E!<3#t
!<<)l!<3#l!<3#t!0[E^s7cTos8Duu!;QTm!<3"^!.k3U!.k3&!.k3&!.k36!<)rj!9sR`s3C]Es8E#u
s7HBks7QHls765^!<3#o!<<)s!<<)u!;ulq!<3"T!.k3&!.k3&!.k3&!.k3p!<)rS!<3#W!:Kpes8E#u
s7HBks7QHls1&-_!<)rn!!*&s!<<)s!<)rq!<<)E!.k3&!.k3&!.k3&!.k3+!<)ot!8deUs3C]Es8E#u
s7HBks7QHls8E"_!<3#o!<<)s!<<)r!<3#q!<<(a!.k3U!.k3&!.k3&!.k3&!9sR`s3C]Es8E#us7HBk
s7QHls765`!<)ro!<<)j!<3#q!<<(V!.k3&!.k3&!.k3&!.k3I!<3#W!:Kpes8E#ts7QHls7QHms0r'_
!<3#o!<<)j!<3#q!<3#F!.k3&!.k3&!.k3&!.k3&!8deUs3C]Es8E#ts7QHls7ZNms8;q_!<3#p!<3#q
!;QWos7u`qs-<Y:!3lNU!.k3&!.k3&!.k49!<3#E!<)rs!<<)n!;ull!<3#h!20Dls7lZps7--ks8N)q
!<<(W!.k3&!.k3&!.k3&!.k3p!<3#S!<3#W!:Kpds8;rts7cTks7lZos0r'`!<3#o!<<)j!<3#o!<3#G
!.k3,!<<)t!.k3&!.k3&!.k3+!<)ot!8deUs3:WDs8;rss6Kabs82k_!<3#o!<<)q!;Z]qs7cTns-E_;
!5\^9s7$)@!.k3&!.k3&!0R?\s7HBW!<3#D!<3#r!<<)c!<<)g!20Dls7lZps7?<ks8E#o!<<(X!.k3&
!.k3&!.k3&!.k3p!<)rS!<3#W!:Bjcs82lss6fses0Vj]!<3#o!<<)l!<<)l!<<)H!.k3&!.k3&!.k3&
!.k3+!<)ot!8deUs31QCs8)frs7$*fs7u_]!<3#o!<3#q!;lfss7HBks-E_;!3lNU!.k3&!.k3&!.k49
!<3#C!<)rp!!*&h!<3#d!20Dls7lZps7QEms8)fl!<<(X!.k3&!.k3&!.k3&!.k3I!<3#W!:0^bs-`rB
!<3#o!<3#n!<<)k!<3#G!.k3&!.k3&!.k3&!.k3&!8[_Us3(KBs5*gB!<3#o!<3#q!<3&us8)crs8)fq
s-E_;!3lNU!.k3&!.k3&!.k49!<3#B!<)rJ!20Dls7cTos7u`irrE)r!<<(W!.k3&!.k3&!.k3&!.k3o
!<<)T!<3#W!:'X`s-s)C!<3#o!<<)r!;6Bi!<3#F!.k3&!.k3&!.k3&!.k3+!<)ot!8deUs2tE@s5<sC
!<3#n!<<)s!!30#s8E#rs8)frs-3S9!3lNU!.k3&!.k3&!0R?\s7HBW!<3#@!<)rL!2'>js7lZos7-0e
!<<(V!.k3&!.k3&!.k3&!.k3p!<)rS!<3#W!9sR^s.05E!<)rm!<<)d!<<)E!.k3&!.k3&!.k3&!.k3+
!<)ot!8deUs2b9>s5O*D!<)rm!<<)u!:p3is-!G7!3lNU!.k3&!.k3&!0I9]s7?<V!<3#>!<3#N!1j2i
s7ZNns7?<j!<<(S!.k3&!.k3&!.k3&!.k3I!<3#W!9aF]s.9;D!<)r$!.k3&!.k3&!.k3&!.k3&!8deU
s2P-=s5X0C!<3#j!.k3&!3lNU!.k3&!.k3&!.k49!<3#=!<3#O!1a,gs69T9!.k3&!.k3&!.k3&!.k3I
!<3#W!9O:\s.BAD!<)r%!.k3&!.k3&!.k3&!.k3*!<<*!!8deTs2P-=s5a6C!<3#k!.k3&!3lNU!.k3&
!.k3&!0I9\s7HBW!<)r<!<3#P!1X&fs6BZ:!.k3&!.k3&!.k3&!.k3p!<)rS!<)rW!9O:[s.KGC!<3#'
!.k3&!.k3&!.k3&!.k3+!<)ot!8deTs7?<9rr<&ss6frL!<)rl!.k3&!3lNU!.k3&!.k3&!0R?\s7HBW
!<3#j!5SX"!1Eoes6K`;!.k3&!.k3&!.k3&!.k3o!<<)S!<3#j!:Ts7s0D^T!<)r(!.k3&!.k3&!.k3&
!.k3&!8[_Us7$*(s7lYT!<)rn!.k3&!3lNU!.k3&!.k3&!.k49!<3#d!5SX(!1<ics6]l=!.k3&!.k3&
!.k3&!.k3I!<)rb!;?HZs8)fps8E#cs0r'W!<3#*!.k3&!.k3&!.k3&!.k3)!!<0#!8deTs6B[Gs7lZo
s82las8N(Y!<)ro!.k3&!3lNU!.k3&!.k3&!0I9\s7HBW!<)r`!9O7V!<)ro!:Km[!1*]bs6fr>!.k3&
!.k3&!.k3&!.k3p!<)rS!<)r_!;ZZ_s7lZns7lZ_s1A?Z!<3#+!.k3&!.k3&!.k3&!.k3+!<)ot!8deT
s60OIs7cTns7cT^rrE(Y!<3#p!.k3&!3lNU!.k3&!.k3&!0R?\s7HBW!<)r^!9jIY!<)rl!:Bg]!1*]b
s6fr>!.k3&!.k3&!.k3&!.k3o!<3#T!<3#^!;c`as7lZos7QHZs1\Q]!<3#+!.k3&!.k3&!.k3&!.k3&
!8deTs6'IIs7u`os7QH_rrE-"rVqrZrr;fpJcLB&YlK@UJcLB&JcLB&JcP$8rr;0^l2US[rVuNjm/Qn^
QN7$bmf7q>JcLB&JcLB&JcLB&JcMVIrVu']qu?-bqZ-TpoDn4W_#Vm`rVs8*JcLB&JcLB&JcLB&JcLB&
hZ3WTkQ'lIquHZpoDnC\qu;i[rr;coJcLB&YlK@UJcLB&JcLB&OT>C\o`47WrVu']l2UY]rVuHhlMpb^
QiR-cmJqh=JcLB&JcLB&JcLB&JcNsorr:gTrVu']qu?-br;ccqo)S(U_>r!arr9>*JcLB&JcLB&JcLB&
JcLQ+rVlithZ3WTkQ'lIr;cfrnc81ZqYuf\rr;`nJcLB&YlK@UJcLB&JcLB&OT>C\o`47WrVu']l2U__
rVuBfl2U\^R/m6dm/V_<JcLB&JcLB&JcLB&JcNsorr:dSrr;0^qu?Ej!!)lqrrDusquHZpqZ,j[_uS9e
rVs2(JcLB&JcLB&JcLB&JcLN*rr2ruhZ3WTkQ'ZCqZ-NnquH6dq>Zc]qZ$EmJcLB&YlK@UJcLB&JcLB&
JcP$8rr;-]jo>/Wqu?Nnl2U__RfN6`nGn.@JcLB&JcLB&JcLB&JcMSHrr;-]r;Z*_q#L<lqZ,m\_uS?g
p]%]&JcLB&JcLB&JcLB&JcLB&h>mQTk5aZEq#L?mq>g'cq>Zi_p](-kJcLB&YlK@UJcLB&JcLB&JcP$8
rr;0^kPt8Vr;ZTnl2U__SH/Wg!!)ornGn.@JcLB&JcLB&JcLB&JcNsorr:gTrVu']qu?*ao`4sjq>fd[
_uSEirVuisrVs;+JcLB&JcLB&JcLB&JcLN*rr2ruhZ3WTkQ'iHl2^ASq>Zoarr;QiJcLB&YlK@UJcLB&
JcLB&OT>C\o`47WrVu']l2TuJkl:Y_T)eiikQ$27JcLB&JcLB&JcLB&JcNsorr:gTrVu$\r;Z3bl2^)K
_uSKkrVru"JcLB&JcLB&JcLB&JcLN*rr2ruh>mQTk5acHp&P$jq>g'cq>[#drVuBfJcLB&YlK@UJcLB&
JcLB&JcP$8rr;0^kl:>Vr;ZTnl2U__U&b/lqZ-NnnGn.@JcLB&JcLB&JcLB&JcMSHrr;0^qu?*ap&P!i
qZ,j[`;n]orVu]oqu=,*JcLB&JcLB&JcLB&JcLB&hZ3WTkQ'iHp&P!iqZ-0dq>[,grVuZnqu?QoJcLB&
YlK@UJcLB&JcLB&JcP$8rr;-]l2UGWr;ZTnl2U__V#^Jop]13knGn.@JcLB&JcLB&JcLB&JcNsorr:gT
rVu']qu?*ao`4sjq>fd[_uS]qr;ZKkrVs;+JcLB&JcLB&JcLB&JcLN*rr2ruh>mQTkQ'iHl2^ASq>[5j
r;Z*`JcLB&YlK@UJcLB&JcLB&OT>C\o`44Vrr;0^kl9oJlMpe_VZ?\qhuJ?/JcLB&JcLB&JcLB&JcNso
rr:gTrVu']qu?*al2^,L_Z8ZrrVr\oJcLB&JcLB&JcLB&JcLN*rr2ruh>mQTkQ'iHo`5!kq#KsbqZ!Al
rVu*^JcLB&YlK@UJcLB&JcLB&OT>C\o`44Vrr;0^kl:>Vr;ZTnli6k_VuZktnc8Xgn,S%?JcLB&JcLB&
JcLB&JcMSHrr;-]r;Z3bp&P!iqZ-!__#Vm`qu=,*JcLB&JcLB&JcLB&JcLB&h>mQTk5acHp&P!iqZ-0d
r;Vo[qu?QoJcLB&YlK@UJcLB&JcLB&JcP$8rr;0^kl:>Vr;ZWoli6h^QN6s`nGn.@JcLB&JcLB&JcLB&
JcMSHrr;0^qu?*ap&P$jqZ-!_^];d_qu=,*JcLB&JcLB&JcLB&JcLN*rr2ruh>mQTk5acHo`4sjquH3c
rr8#ZrVu`pJcLB&YlK@UJcLB&JcLB&OT>C\o`44Vrr;-]l2U)Mm/Qk]JcLB&JcLB&JcLB&JcLB&JcNso
rr:dSrr;-]r;Z3bli?GQ^&W`bJcLB&JcLB&JcLB&JcLN*rr2ruh>mQTk5acHm/ZSS!<7ZOJcLB&YlK@U
JcLB&JcLB&OT>C\o`44Vrr;-]l2UDVs8Vusmf2q[JcLB&JcLB&JcLB&JcLB&JcNpn!<:jTrVu$\r;Z3b
p&P!i!!)He\cC.Yqu=,*JcLB&JcLB&JcLB&JcLB&h>mQTk5acHp&O@Wr;_fWqu?QoJcLB&YlK@UJcLB&
JcLB&JcP$8rr;-]lMpMWli6GSQiR$`nGn.@JcLB&JcLB&JcLB&JcMSHrr;-]r;Z3bpAj[^!WW6#ZiJMS
qu=,*JcLB&JcLB&JcLB&JcLN*rr2ruh>mQTk5`g-o`0pNr;ZZpJcLB&YlK@UJcLB&JcLB&OT>C\o`44V
rr;-]c2[)0JcLB&p]13kOT9t5JcLB&JcLB&JcNsorr:dSrr;-]r;Y.DZN,RWZN0n&ec::%JcLB&JcLB&
JcLN*rr2ruh>mQTk5`[)q#H!HJcP0<qu</dYlK@UJcLB&JcLB&OT>C\o`44Vrr;-]a8bZ0JcLB&p]13k
OT9t5JcLB&JcLB&JcNsorr:dSrr;-]r;Xt?\,_*\ZN0n&ec::%JcLB&JcLB&JcLB&h>mQTk5`I#rrAAc
"9/B$!;HKn!;lfjrrE-"NW=Y2YlK@UJcLB&JcLB&JcP$8rr;-]l2U8Rli6VXW;tZPs8R`PJcLB&JcLB&
JcLB&JcMSHrr;-]r;Z3bmf;_S]E$slf`0%nScAcjjoBu5JcLB&JcLB&JcLB&h>mQTk5acHm/ZSSs8S_l
q>UEpmf2qZNr]+Yr;Q`si;]nZYlK@UJcLB&JcLB&OT>C\o`44Vrr;-]l2U)Mm/Qk]W;uqthZ3]Vs8S&Y
q#B=QU&]cFJcLB&JcLB&JcNsorr:dSrr;-]r;Z3blN$8N_#WKqrr:gTrr:(?`;nQjk5^)6JcLB&JcLB&
JcLN*rr2ruh>mQTk5acHlN$GSqu<Gls8V6^pAk3mNr]1[r;Qfus8V-[rVru"YlK@UJcLB&JcLB&OT>C\
o`44Vrr;-]l2U#KlMpe_WW<"th>dQUs8S&Yrr;iqj8f2ZU&]cFJcLB&JcLB&JcNsorr:dSrr;-]r;Z3b
klC#K_uSftrr:gTrr:(?`;oo;h>mQTk5^)6JcLB&JcLB&JcLB&h>mQTk5acHklC;Sq#@5lrr;0^pAk3m
Nr]1[rr:gTrr9)#YlK@UJcLB&JcLB&JcP$8rr;-]l2TrIlMpkaW;uqth>dQUs8S&Yrr;iqj8f2ZU&]cF
JcLB&JcLB&JcMSHrr;-]r;Z3bkQ'lI`W5$!rr:gTrr:(?`;oo;h>mQTk5^)6JcLB&JcLB&JcLB&h>mQT
k5acHkQ(5Sp]%/lrr;0^pAk3mNr]1[rr:gTrr9)#YlK@UJcLB&JcLB&JcP$8rr;-]l2ToHl2R^_rr:gT
!<<*!N<&tXqZ,[Wrr8\mJcLB&JcLB&JcLB&aoMJAh#RHSk5bG[mf2GMl2Sd(irK)Yh>mQTaT09[rr:gT
rr;-]JcLB&JcLB&JcLB&L&h5Q!!(jUrr;-]l2ToHo`+XbWW<"tkQ(>Wrr8#ZrrE&uh>mQTXT5U+JcLB&
JcLB&JcLo5rr;WkklC__k5acHjoF]H!<9&!rr:gT!<<*!N<&tXqZ,[Wrr9#!s8VoqJcLB&JcLB&JcLB&
b5hPAh#RHSk5bG[mf2DLl2Sg)irK)Yh>mQTaT09[rr:gTrr;-]JcLB&JcLB&JcLB&L&h2Ph>mQTk5acH
k5b/So`(rlrr;0^pAk3mNr]1[rr:gTrr9)#YlK@UJcLB&JcLB&JcP$8rr;-]\,ZL.WrW/!h>dQUs8S&Y
rr;iqj8f2ZU&]cFJcLB&JcLB&JcMSHrr;-]r;XS4!!)rsaT1B%rVt^Srr:(?`;oo;h>mQTk5^)6JcLB&
JcLB&JcLB&h>mQTk5`C!oDbllrr;0^q#L?mNr]1[rr:gTrr9)#YlK@UJcLB&JcLB&JcP$8rr;-]l2UJX
rr;QilMpk`X8puSs8S&Yrr;iqirK,ZU&]cFJcLB&JcLB&JcNsorr:dSrr;-]r;Z3bp&P-mo)RtRaoLK&
fDiqm`;oo;h>mQTk5^)6JcLB&JcLB&JcLN*rVt^Srr;-]l2UJXrr;Qip&FX`X8r1u#QXl)s8N*!rrDZj
o`'sPrrE#tpAb3nr;cisr;cEgXT5U+JcLB&JcLB&JcLo5rVuQkklC__k5acHpAk3mo)S(Urr8Ads8VNf
MZEPPiW#VPJcLB&JcLB&JcLB&b5hPAh#RHSk5bG[mf3"]rr;QikPr[)ciF+G[/e,Fg&L48JcLB&JcLB&
JcLB&L&h5Q!!(jUrr;-]l2UJXrVuKip&F[aQiR0dq>c*IrW(jU!!)rsXT5U+JcLB&JcLB&JcLl4s8V`l
klC__k5acHp]16loDn1Vs8SGdrr;HfJcPNFrr8#ZJcLB&JcLB&JcLB&U]CDok5bG[mf3%^r;ZBhkl8a)
ciF(F[K*T5rr:IJJcLB&JcP]KrVqcUJcLB&JcOX-rr;-]l2UMYr;ZBhp&F[aQiR-cqZ)3Jli@%bRK0Sm
JcLT,rVultJcLB&JcLB&klC\^klBrIq#L9kp&O@Ws8SJerVu?eJcPNFrVqrZJcLB&_Z9T6`W1SjJcLB&
b5hPAh#Q@4\c;X/s8W&u!rr9#ec2TJgAnP[qu7')!<<'!s8N'!s8N*!rW)0^!<E0"s+CB(!.k4L!;leT
!.k3&!/:LQrr<&U!2]^Is+:9&s1JC*!.k3-!;lcr!.k4?!!*&p!!*&n!!*%t!/(=Qrr<$!rr2rurVlit
qYpNq_>iNqrVuQkklAR"!!(dRK)^i1!!)cnK)`mkk5bM]!!(aQL]@8P_uTT4pAb<q!<<)h!!E6$!<<#u
"oeT&!<<)u!;?Hlrr<%fs6Tfi!!*&q!<3#s!;uls!:Tpf!<)qLs69RD!<)rS!8mh:s8N(ns+:9&s+::6
!1a)*s7cT;s+:9ts7lWps8E#5s+:9Hs5O+Xs5!als8N)^s+:9&s+:9`s7QH`!0R<*s7cT5s8N)us+::B
rr<&as7lZ!s+:9Ss5O+Ys7HBV!;HNm!<<*!!<)p%!<<'!rr<&^s82lqs8E#ss7cTYs/,er!;uls!;QQo
!<)p&!!*$!s8N'!qu6WrrVm-'rr<'!rr<'!r;Zlu!1*Z*rr<&4s2Y0&!7q1*s82lq!9jF_!8mhV!6"o'
s7lZfs+:9&s69Qr!<3#]!;ulbs7u`ps8E#ts7QHWs2Y2h!<3#u!<3#R!!*&u!!*&s!!<3#!<)rr!!E6$
!<;`m!<E/N!!*&Z!<)rt!<)rM!!3-#s8E!"rr<&ss8N)us-3TI!1a)*s7cT;s82iq!/pm(s7lZ,s+:9H
s5*h5!<3#]!9sO[!<3#s!<3#m!;6Bcs-Wlds8E#ts8E"M!:Bjds8N)us.'.p!.k3g!65';!<<)krr<&b
rs/W)!<<'!s8N)nrs/W)!<3$!rrE)u!!*&=!8IPSs7lZ!s2=p>!!*$!rr2ruqZ"h@JcP$8rr;-]l2US[
rr;osrr;]mlMm7Prr;rtrr;QiJcPTHs8W&urr8,]JcLB&`;oo;r;cfraT.Y-!<;iprr2rurVlitrr;fo
#6=f(!<3$!s82iss-Ne<!2KVos5sC[s6fpa!<3#r!<3#m!:0[)!7LrIs8E#ts1&-:!<<)u!<3#M!.k3&
!.k4N!<3#r!<<(Z!7:cHs7lWps1A>`!/1CSs8N)U!<3#]!9sO\!<)rr!<)rm!;6Bds-Wlds8;rss8E"M
!:Kpes8;rss.04q!.k3/!<3#r!!*'!s+CC.!<<)p!<<))!.k35!<)rk!9jL_s5sCHs8)fhs7lZ\s8N(f
!<3#r!<3#j!.k4I!<3#s!<3"^!.k3&!6,$;s8;rrs2b8.!<<)p!<<)n!.k3&!6YB@s5!bTs5sC[s6fpb
!;-<e!:9a(!7V#Js82lrs1/3=!<3#r!<3#N!.k3&!.k1N!;6AQ!7ClIs7lZps1JDa!/:LPs5!bTs5sCH
s82lhs7lZes7u\^!<)rq!<3#u!.k4?!<3#r!<3"i!3lNU!/ppPs8N%P!7LrJs0;WV!0@3\s7HBV!<3#^
!9jIW!<3#k!:9aa!1Nu\s7HAD!;ccps8E#rs-*M8!.k3j!;?En!<:1ANWB(Yp],mGJcMSHrr;0^qu?*a
pAk3mp&Opg!!)]l_>r*do`)N'[fH(#p]1?opAk'iq#CEprW%NMJcLB&qZ-WqMZA>/JcLB&h>mQTkQ'iH
p&P-mp&O[`r;W#^o`"mkirK)YrVuruqZ-Tpp&P-m^&[X&p&Fgfrr;cooDedis8U%<YlK@ULB.>Rrr@WN
JcLB&JcP$8rr;3_k5Y/Us8VfnmJm"_QN7!an,VnWrr;osoDeRcs8TG+p]16lrrE*!q#CEpp]19mquHWo
r;clt])[E_JcNUerr9q;JcLB&JcMSHrr;3_qZ#s_pAk6np]0^]^AuU\rr:jUs8Voqr;Z]qr;ZQmrr;fp
Z2jk'p&P-mq#LBnq#LBnquHcsJcLB&JcPZJrr7lVJcLB&L&h5Q!!(jUrr;6`jT"uTs8Voqmf3=eN<&tX
qZ,^Xs8Vlprr;fprVuZns8Tk7lN$tbp&P-mq#LBnpAk3mquH`ra8iIFJcLQ+rr;uuJcLB&JcLo5rVuQk
klC__lN#rEq#LHpquH*`p&LBYrr;HfnGrUhp]1<nq#LBnq#LHp[K-"$s8Vfns8VlprVuNjs8Vrrs8Tb4
JcLB&_#XK7`;kJiJcLB&b5hM@h>mQTli?e[lMp_]rVlitlMnHrciF(Fi;ioXpAk3mq#LBnq#LEoquF#&
rr;]ms8Vlprr;Tjs8Vrr!<<*!KE-T(JcPZJrr7lVJcLB&L&h2Ph>mQTmJss#rr@rWrr;iqk5bP^pAk3m
q#LBnp]1<n_Z9!&s8Vios8VlprVuHh!<;lqs8U1@YlK@ULB.>Rrr@WNJcLB&OT>@[p&O=Wrr;Qi])V=$
Q2ppan,W%[rr;]mrr;corVuWmrr9J.pAk3mq#LEoq#LBnlN$tb^&W`bJcNUerr9q;JcLB&JcNpns8UmT
rr;QinGgf6[/ePRrr:sXrr;]mrr;corVuTls8W#tYlOh(q#LEoq>gKol2^h`K`H])JcPZJrr7lVJcLB&
JcOX-rr;Qi_uK?/MZEbVqZ,g[s8Vcmrr;iqr;ZHjrr9n:li@%bq#LHpq#LBnklCb`aoJ[HJcLQ+rr;uu
JcLB&JcLB&l2^h`o)RhN!!)forrDfn!!)rsj8bMHrr;Eeo`5!kp&Oabo`5!k\,c:(rr;fprr;corVu*^
rr9_5JcLB&_#XK7`;kJiJcLB&V#^Mpi;hp=s8Sbmd/a1GirK&XpAjjco`5!kr;a/(rr;fprr;corVu*^
rr7ZPJcLB&qZ-WqMZA>/JcLN*rVtaTrr9n:s8V3]Mu`kWq>fd\rr;Zlrr;fpr;ZKkrVse9li@(cq>gNp
q#LBnklC__aoJ[HJcLQ+rr;uuJcLB&JcLo5rVuQkl2^h`_uTi;gAmQ?rr;Eeo`5!kp&P*lq#L?mp]19m
\H)@(rr;iqrr;cor;Z$^rr9_5JcLB&_#XK7`;kJiJcLB&b5hM@hZ3ZUi;hp=s8Sbmd/a1GirK&XpAk3m
p]19mp]19mrW'5(s8Voqrr;cor;Z$^rr7ZPJcLB&qZ-WqMZA>/JcLN*rVtaTrr9n:s8V3]Mu`kWq>fd\
rVuTlrr;`nrVuWmrVse9m/[.cq>gNpp]19ml2^h`aoJ[HJcLQ+rr;uuJcLB&JcLo5rVuQkl2^h`_uTi;
gAmQ?rr;EeoDnmjpAk3mp]19mp]19m\H)C)rr;fprr;`nr;Z'_rr9_5JcLB&_#XK7`;kJiJcLB&aoMG@
hZ3ZUi;hp=s8Sbmd/a1GiW/uXpAk3mp]19mp]1<nr;a/(rVu]orr;`nrVu0`rr7ZPJcLB&qZ-WqMZA>/
JcLB&hZ3ZU_uTi;joC>?rr;fpklC__pAk3mp]19mp]1<n_Z9$'rr;fprr;`nrVuNjs8VoqrVt"?YlK@U
LB.>Rrr@WNJcLB&JcP'9rr9n:s8UgRQN7$bmf;qZs8Vfnrr;corVuTlrr9J.p]19mq>gNppAk-kp]1<n
q>gKo^AricJcNUerr9q;JcLB&JcMVIrr:pWjT,;[T`EI?rr:pWrr;cor;ZZpqu?Bjs8VusZ2jq)p]1?o
p&P$jqZ-Tpq#CEps8R`PJcLB&qZ-WqMZA>/JcLB&hZ3ZU_uTi;joC>?rr;fpk5bP^q>g*dp&P*l_>rp&
s8Viorr;WkpAajes8U.?YlK@ULB.>Rrr@WNJcLB&OT>@[p&O@Xrr9q;rr:^QQN7$bmf;nYrr;lroDeF_
s8TM-pAk6npAk3mo)SahoDnpk]E!N`JcNUerr9q;JcLB&JcNsorVtaTrr:pWj8f5[T`EI?rr:jUrr;!Y
rr;iqZN0t(pAk6nirK)YJcLB&JcPZJrr7lVJcLB&L&h2PhZ3ZU_uTi;joC>?rr;fpjT,;[j8f5[^]<^$
s8V`ls8V0\rr9t<YlK@ULB.>Rrr@WNJcLB&OT>@[p&O@Xrr9n:s8UgRQN7$bmf;eVs8V0\s8TG+p]1<n
oDnpkk5bP^\H%3]JcNUerr9q;JcLB&JcNpns8UpUrr:pWj8f5[T`EI?rr:aRs8V6^s8VioZN1")o)Sgj
kQ(Y_rW%NMJcLB&qZ-WqMZA>/JcLB&hZ3ZU_uTi;joC>?rr;fpiW&uYkQ(Y_]`@C!rr8DeYlK@ULB.>R
rr@WNJcLB&JcP'9rVsh:s8UgRQN7$bmf7q>p]1<nNW=Y2JcNUerr9q;JcLB&JcMVIrr:pWj8f5[T`EI?
rr9A+ZN1")df=t"JcLB&qZ-WqMZA>/JcLB&hZ3ZU_uTi;joC>?rr;fpJcP0<rr8AdYlK@ULB.>Rrr@WN
JcLB&O9#:[p&O@Xrr9n:s8UgRQN7$bmf7q>pAk6nNW=Y2JcNUerr9q;JcLB&JcNsorVtaTrVtjWj8f5[
T`EI?rr9A+Z2jq)df=t"JcLB&qZ-WqMZA>/JcLN*rVtaTrVsh:s8V3]Mu`kWq>c*Ili@%bRK0SmJcLQ+
rr;uuJcLB&JcLl4rr;Zll2^e_`;or<gAmQ?rr;EeJcPQGrVqoYJcLB&_#XK7`;kJiJcLB&b5hM@hZ3WT
iW/$>s8Sbmd/a1G[/dN5rr:FIJcLB&JcPZJrr7lVJcLB&K`D2SrrCpVrVsh:s8V3]Mu`kWq>c*Im/[.c
R/jJlJcLQ+rr;uuJcLB&JcLB&l2^h`_uTi;gAmQ?rr;EeJcPQGrr7uYJcLB&_#XK7`;kJiJcLB&V#^Jo
iW/$>rr8\md/a1G[/dK4rr:IJJcLB&JcPZJrr7lVJcLB&JcO[.rVsh:s8V3]Mu`kWq>c*Im/[+bRK0Sm
JcLQ+rr;uuJcLB&JcLB&l2^h`_uTi;gAmQ?rr;EeJcPNFrr8#ZJcLB&_#XK7`;kJiJcLB&aoMJAh>mQT
i;hp=s8Sbmd/a1G[/dK4rr:IJJcLB&JcPZJrr7lVJcLB&L&h2PhZ3WT`;or<joC>?rr;fpJcP0<rr8Ad
YlK@ULB.>Rrr@WNJcLB&OT>@[p&O@XrVsh:s8UgRQN7$bmf7q>pAk6nNW=Y2JcNUerr9q;JcLB&JcNso
rVtaTrr:pWj8f5[T`EI?rr9A+Z2jn(e,Y(#JcLB&q>gQqMZA>/JcLK)!rr9#hZ3WT`;or<joC>?rr;fp
JcP-;rr8DeYlK@UL&h8Rrr@WNJcLB&JcP'9rr9n:s8UgRQN7$bmf7q>pAk3mNrXb3JcNUerr9q;JcLB&
JcMVIrVtjWj8f5[T`EI?rr9A+Z2jq)df=t"JcLB&qZ-WqMZA>/JcLB&hZ3WT`;or<joC>?rr;fpJcP-;
s8SJeYlK@ULB.>Rrr@WNJcLB&JcP'9rVsh:rr:aRQN7$bmf7q>p]1<nNW=Y2JcNUerr9q;JcLB&JcNpn
rr:jUrVtjWj8f5[T`EI?rr9A+Z2jq)df=t"JcLB&qZ-WqMZA>/JcLN*rVtaTrVsh:s8V3]Mu`kWq>c*I
m/[+bRK0SmJcLQ+rr;uuJcLB&JcLl4rr;Zll2^e_`;or<gAmQ?rr;EeJcPNFrr8#ZJcLB&_#XK7`;kJi
JcLB&aoMG@hZ3WTiW/$>s8Sbmd/a1G[/dK4rr:IJJcLB&JcPZJrr7lVJcLB&K`M,PhZ3WT`;or<joC>?
rr;fpJcP0<rVr;dYlK@ULB.>Rrr@WNJcLB&O9#=\o`47WrVsh:s8UgRQN7$bmf7q>pAk6nNW=Y2JcNUe
rr9q;JcLB&JcMSHrr:sXj8f5[T`EI?rr9A+ZN1")df=t"JcLB&qZ-WqMZA>/JcLB&hZ3WT`;or<joC>?
rr;fpJcP-;s8SJeYlK@ULB.>Rrr@WNJcLB&JcP'9rVsh:s8UgRQN7$bmf7q>pAk6nNW=Y2JcNUerr9q;
JcLB&JcNpnrr:gTrr:sXj8f5[T`EI?rr9A+Z2jq)df=t"JcLB&qZ-WqMZA>/JcLK)rr:jUrVsh:s8V3]
Mu`kWq>c*Ili@%bRK0SmJcLQ+rr;uuJcLB&JcLl4rr;Zll2^e_`;or<gAmQ?rr;EeJcPNFs8S)ZJcLB&
_#XK7`;kJiJcLB&aoMG@h>mQTiW/$>s8Sbmd/a1G[/dK4s8UOJJcLB&JcPZJrr7lVJcLB&K`M,Ph>mQT
`;or<joC>?rr;fpJcP-;rr8DeYlK@ULB.;Q!!%TNJcLB&O9#:[p&O=Wrr9q;rr:aRQN7$bmf7q>pAk3m
NrXb3JcNUerVsk;JcLB&JcMSHrr:sXj8f5[T`EI?rr9A+Z2jn(e,Y(#JcLB&qZ-TpMu\G0JcLB&h>mTU
_uTf:k5^G@rr;fpJcP-;rr8DeYlK@ULB.>Rrr@WNJcLB&JcP'9rVsh:rr:aRQN7$bmf7q>pAk3mNrXb3
JcNUerVsk;JcLB&JcMSHrr:sXj8f2ZU&`R@rr9A+Z2jn(e,Y(#JcLB&qZ-WqMZA>/JcLK)rr:gTrr9q;
s8V3]Mu`kWq>c*Ili@%bRK0SmJcLQ+rr;uuJcLB&JcLo5rVuQkl2^e_`;or<gAmQ?rr;EeJcPNFs8S)Z
JcLB&_#XK7`;kJiJcLB&aoMG@hZ3WTiW/$>rr8\md/a1G[/dK4s8UOJJcLB&JcPZJrVqfVJcLB&K`M,P
h>mQT`;oo;k5^G@rr;fpJcP-;rr8DeYlK@ULB.>Rrr@WNJcLB&O9#:[p&O@XrVsh:rr:aRQN7$bmf7q>
pAk3mNrXb3JcNRds8U%<JcLB&JcMSHrr:sXj8f2ZU&`R@rr9A+Z2jn(e,Y(#JcLB&qZ-TpMu\G0JcLB&
h>mQT`;oo;k5^G@rr;fpJcP-;rr8DeYlK@ULB.;Q!!%TNJcLB&JcP$8rr9q;s8UgRQN7$bmf7q>pAk3m
NrXb3JcNUerVsk;JcLB&JcMSHrr:sXj8f2ZU&`R@rr9A+Z2jq)df=t"JcLB&qZ-WqMZA>/JcLK)!rr9#
hZ3WT`;oo;k5^G@rr;fpJcP-;rr8DeYlK@ULB.;Q!!%TNJcLB&O9#:[p&O@XrVsh:rr:aRQN7$bmf7q>
p]19mNrXb3JcNRds8U%<JcLB&JcNpnrr:gTrr:sXj8f5[T`EI?rr9A+Z2jn(e,Y(#JcLB&qZ-WqMZA>/
JcLK)rr:gTrr9q;rr;-]Mu`kWq>c*Ili@%bRK0SmJcLQ+rr;uuJcLB&JcLl4rr;ZlklC__`;oo;g]3Z@
rr;EeJcPQGrVqoYJcLB&^]=B6`W1SjJcLB&aoMG@h>mQTiW/$>rr8\mciF+G[/dK4rr:IJJcLB&JcPWI
rr7oWJcLB&JcOX-rr9q;s8V3]Mu`kWq>c*Ili@%bRK0SmJcLN*rr2ruJcLB&JcLB&l2^e_`;or<gAmQ?
rr;EeJcPNFrr8#ZJcLB&^]=E7`;kJiJcLB&U]CDoiW/$>s8Sbmd/a1G[/dK4rr:IJJcLB&JcPWIrr7oW
JcLB&K`M,PhZ3WT`;or<joC>?rr;fpJcP-;s8SJeYlK@UL&h5Q!!%TNJcLB&O9#:[p&O=Wrr9q;rr:aR
QN7$bmf7q>p]1<nNW=Y2JcNUerVsk;JcLB&JcNpnrr:gTrr:sXj8f2ZU&`R@rr9A+ZN1")df=t"JcLB&
q>gNpMu\G0JcLK)rr:gTrr9q;rr;-]Mu`kWq>c*Ili@%bRK0SmJcLN*rr2ruJcLB&JcLl4rr;ZlklC__
`;oo;g]3W?s8VNfJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&aoMG@h>mQTiW/$>rr8\md/a1G[/dN5rVt@I
JcLB&JcPWIrr7oWJcLB&KE)&Q!8[_Ts2>!;s5sB?!<<)q!.k4<!<3"d!3lNU!/:LQrr<%N!.k3&!.k48
!<3#;!<3#R!1*]bs6fr>!;HQms,R/3!.k3d!<3#<!.k3&!.k3H!<3#X!9=.Zs.TM@!<3#+!4)\)s3gt"
!.k3&!;Z]ps,6r0!.k3&!8[_Ts2>!;s5sB@!<3#p!.k4;!<<(e!3lNU!/:LQrr<%N!.k3&!0@3[s7QHW
!<3#;!<3#R!1!Wbs6fr>!;HQms,R/3!.k3d!<3#<!.k3&!.k3n!<3#T!<3#X!9=.Zs.TM?!<<),!4)\(
s3q%#!.k3&!;Z]ps,6r0!.k3)!<3#T!<3#;!<3#]!/gjWs7u_I!:0^cs-Wkl!.k3*!<2uu!.k3&!.k34
!<3#l!9jL_s2>!;s4dU@!<3#e!.k4F!<3"Z!.k3&!5JU6s2G%j!.k3&!6P<@s5!bTs5F%>!<3"m!71`G
s0Vj4!<3#J!.k3&!.k4I!<3"W!.k3&!/(=QrrCmUrr9q;rr;-]MZEeWq>c*Ili@%bRK0SmJcLN*rr2ru
JcLB&JcLB&klC__`;oo;g]3W?s8VNfJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&U]CDoiW/$>rr8\mciF+G
[/dK4rr:IJJcLB&JcPWIrr7oWJcLB&JcOX-rr9q;rr;-]MZEbVqZ)3Jli@%bRK0SmJcLN*rr2ruJcLB&
JcLl4s8V`lklC__`;oo;g]3Z@rr;EeJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&aoMG@h>mQTiW/$>rr8\m
ciF+G[/dK4rr:IJJcLB&JcPWIrr7oWJcLB&K`M,Ph>mQT`;oo;k5^D?s8VoqJcP-;s8SJeYlK@UL&h5Q
!!%TNJcLB&O9#:[p&O=Wrr9q;rr:aRQN7$bmf7q>pAk6nNW=Y2JcNRdrr9t<JcLB&JcNpnrr:gTrr:sX
j8f2ZU&`R@rr9A+Z2jn(e,Y(#JcLB&q>gNpMu\G0JcLH(s8UpUrr9q;rr;-]Mu`kWq>c*Ili@(cR/jJl
JcLN*rr2ruJcLB&JcLB&klC__`;oo;g]3Z@rr;EeJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&U]CDoiW/$>
rr8\mciF+G[/dK4rr:IJJcLB&JcPWIrr7oWJcLB&JcOX-rr9q;rr;-]Mu`kWq>c*Ili@%bRK0SmJcLN*
rr2ruJcLB&JcLB&klC__`;oo;g]3W?s8VNfJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&aT2A@h>mQTiW/$>
rr8\mciF+G[/dK4rr:IJJcLB&JcPWIrr7oWJcLB&K`M,Ph>mQT`;oo;k5^G@rr;fpJcP-;rr8DeYlK@U
L&h5Q!!%TNJcLB&O9#:[p&O=Wrr9q;rr:aRQN7!an,S%?pAk3mNrXb3JcNRdrr9t<JcLB&JcNpnrr:gT
rr:sXj8f2ZU&`R@rr9A+Z2jn(e,Y(#JcLB&q>gNpMu\G0JcLK)rr:gTrr9q;rr;-]MZEbVqZ)3Jli@%b
RK0SmJcLN*rr2ruJcLB&JcLB&klC__`;oo;g]3W?s8VNfJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&U]CDo
iW/$>rr8\mciF+G[/dK4rr:IJJcLB&JcPWIrr7oWJcLB&JcOX-rr9q;rr;-]MZEbVqZ)3Jli@(cR/jJl
JcLN*rr2ruJcLB&JcLB&klC__`;oo;g]3Z@rVu?eJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&aT)>@h#RHS
iW/$>rr8\mciF+G[/dK4rr:IJJcLB&JcPWIrr7oWJcLB&K`M,Ph>mQT`;oo;k5^G@rr;fpJcP-;rr8De
YlK@UL&h5Q!!%TNJcLB&O9#7ZpAjFXrr9q;rr:aRQ2ppan,S%?pAk3mNrXb3JcNRdrr9t<JcLB&JcNpn
rr:gTrr:sXj8f2ZU&`R@rr9A+ZN0t(e,Y(#JcLB&q>gNpMu\G0JcLK)rr:gTrr9q;rr;-]MZEeWq>c*I
li@%bRK0SmJcLN*rr2ruJcLB&JcLl4rr;ZlklC__`;oo;g]3W?rr;HfJcPNFrr8#ZJcLB&^]=B6`W1Sj
JcLB&U]CDoiW/$>rr8\mciF(F[K*T5rr:IJJcLB&JcPWIrr7oWJcLB&JcOX-rr9q;rr;-]MZEbVqZ)3J
li@%bRK0SmJcLN*rr2ruJcLB&JcLB&klC__SH+oT!<;KfJcPNFrr8#ZJcLB&^]=B6`W1SjJcLB&U]CDo
iW+Q1JcLB&JcLB&JcPWIrr7oWJcLB&K`M,Ph>mQTVuVDLJcLB&YlK@UL&h5Q!!%TNJcLB&O9#:[p&O=W
rr8MhJcLB&JcLB&JcNRdrr9t<JcLB&JcNpnrr:gTrr:sXJcLB&JcLB&JcLB&q>gNpMu\G0JcLK)rr:gT
rr8nsJcLB&JcN%UJcLN*rr2ruJcLB&JcLl4rr;ZlklC__SH+6AJcLB&JcLB&^]=B6`W1SjJcLB&aoMG@
h>mQTiW+Q1JcLB&JcLB&JcPZJrVqfVJcLB&JcOX-rr8nsJcLB&JcN%UJcLN*rr2ruJcLB&JcLB&klC__
SH+6AJcLB&JcLB&^]=B6`W1SjJcLB&U]CDoiW+Q1JcLB&JcLB&JcLB&JcLB&JcOX-rr8nsJcLB&JcN%U
JcLB&JcLB&JcLl4rr;ZlklC__SH+6AJcLB&JcLB&JcLB&JcLB&aoMG@]E!N`JcLB&JcLB&JcLB&JcLB&
K`M,PJcLB&JcLB&YlK@UJcLB&JcLB&O9#:[p&K[EJcLB&JcLB&JcLB&JcLB&JcNmm!<9Y2JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcM\Ks8W&u"9/?$s8E#mrr<&js5O'P!.k3&!.k3&!.k3&!.k3&
!;unPs.02P!.k3&!.k3&!.k3&!.k3&!4W$Ps+::&s/Z3P!.k3&!.k3&!.k3U!.k3g!5SX,s8N)lrr<&u
rrN3#!<)ot!;uls!<3!!!<9G,JcLB&O9#:[p&K[EJcLB&JcLB&JcLB&JcLB&JcNpnrr9V2JcLB&JcLB&
JcLB&JcLB&JcLK)rr7QMJcLB&JcN%UJcLB&JcLB&JcLl4rr;ZlJcLB&JcLB&JcLB&JcLB&JcLB&aoMG@
]E!N`JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
aoMG@]E!N`JcLB&JcLB&JcLB&JcLB&K`M,P!<7ZOJcLB&JcN%UJcLB&JcLB&JcLl4rr;ZlJcLB&JcLB&
JcLB&JcLB&JcLB&aoMD?]`<WaJcLB&JcLB&JcLB&JcLB&KE2&PJcLB&JcLB&YlK@UJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcNmms8T_3JcLB&JcLB&JcLB&JcLB&JcLK)rr2uuK)gK'JcLB&YlK@UJcLB&
JcLB&O9#7ZpAfdFJcLB&JcLB&JcLB&JcLB&JcNpnrVsP2JcLB&JcLB&JcLB&JcLB&JcLK)rr2uuK)gK'
JcLB&YlK@UJcLB&JcLB&Nr]4[p&K[EJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNmms8T_3JcLB&JcLB&JcLB&JcLB&
JcLK)rr2uuK)gK'JcLB&YlK@UJcLB&JcLB&O9#7ZpAfdFJcLB&JcLB&JcLB&JcLB&JcNpnrVsP2JcLB&
JcLB&JcLB&JcLB&JcLH(s8N*!K)gK'JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLH(s8RZNJcLB&JcN%UJcLB&JcLB&JcLl4rVuTlJcLB&JcLB&JcLB&JcLB&
JcLB&aoMD?]`<WaJcLB&JcLB&JcLB&JcLB&K`M,P!<7ZOJcLB&JcN%UJcLB&JcLB&JcLi3s8VcmJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&KE2&P!<7ZOJcLB&JcN%UJcLB&JcLB&JcLl4
rVuTlJcLB&JcLB&JcLB&JcLB&JcLB&aT2>?]`<WaJcLB&JcLB&JcLB&JcLB&K`M,P!<7ZOJcLB&JcN%U
JcLB&JcLB&JcLl4rr;ZlJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&KE2&P!<7ZO
JcLB&JcN%UJcLB&JcLB&JcLi3rr;]mJcLB&JcLB&JcLB&JcLB&JcLB&aT2>?]`>SCs8U:CJcOC&ZN'e%
JcLB&JcLB&JcLB&K`M,P!<7ZOJcLr6nc-K+_#U_?JcLB&JcLB&JcLi3rr;]mJcLB&SH.gPc2Y3PJcLB&
JcLB&JcLB&a8c5?]E!N`JcO@%[/]t&JcLB&JcLB&JcLB&JcLB&p&G*mNW>1Ao)HW-^]:V>JcLB&JcLB&
JcLB&K)boOrr7ZPS,haPci:?PJcLB&JcLB&JcLB&JcNIarVt"?JcO=$nG`IgaT)&9JcLB&JcLB&JcLB&
JcLB&p]19mNrY4@o`)l0^AtM=JcLB&JcLB&JcLi3rr;]mKE2&P!<7ZORK2UPd/UEPJcLB&JcLB&JcLB&
aT2>?]`>_G!<:(>JcO7"])VL)JcLB&JcLB&JcLB&K`M,P!<7ZOJcLf2p&FU_!!(UM]`>;;JcLB&JcLB&
JcLl4rVuTlJcLB&QiQIPdf6QPJcLB&JcLB&JcLB&aT2>?]`<WaJcO0uqu6Wr`W,T2JcLB&JcLB&JcLB&
JcLB&JcL`0p]'%K!!)He])])9JcLB&JcLB&JcLB&JcLB&Q2p=PeGl]PJcLB&JcLB&JcLB&JcLB&JcO*s
o`"mkd/W\;JcLB&JcLB&JcLB&JcLB&JcLW-qu6WrbQ#'PYlK@UJcLB&JcLB&Nr]1ZpAfdF!W`9#K`I;:
nGh)>XT3qQJcLB&JcLB&JcNmmrr9Y3]E%j/blE=qbQ,`an,S%?JcLB&JcLB&JcLH(s8N*!K)kQEqYuf\
L&h2PcMt9PYlK@UJcLB&JcLB&Nr]1ZpAfdFrW)coN<#">o`*YFW;qMMJcLB&JcLB&JcNmmrr9Y3[fH7(
e,Y(#aT0Wdm/V_<JcLB&JcLB&JcLB&JcP6>q>ZrbK`M,Pdf6QPYlK@UJcLB&JcLB&JcLB&p]1*hPQ6jH
nc.MHU]>uHJcLB&JcLB&JcLB&YlOV"g&Q^)c2dbA!!(RLkQ$27JcLB&JcLB&JcLB&JcP!7q>[2iMZEPP
f`.uPYlK@UJcLB&JcLB&JcLB&nGrFcR/iNQoDedirr;*[ScF?BJcLB&JcLB&JcLB&WW;kpi;eH0ciE\;
quGmZi;eH0JcLB&JcLB&JcLB&JcOd1q>[DoM?*JPrVuTlmf0$^YlK@UJcLB&JcLB&JcLB&lN$b\TE(5W
qYpNqrVu]opAk-kOT9t5JcLB&JcLB&JcLB&U]C5jk5^)6cN*\=^AricJcLB&JcLB&JcLB&JcOR+q#@Pu
Mu`VPrr7ZPYlK@UJcLB&JcLB&JcLB&j8f#UVZ<+bqu?Zrrr3$"s8VioJcLB&JcLB&JcLB&JcLB&SH/Hb
mf7q>eH#IGr;cfr]`<WaJcLB&JcLB&JcLB&JcO:#q#@i(OoY@Yq>gQq!<7ZOYlK@UJcLB&JcLB&JcLB&
g]7*KYlLBrqZ$9i!<;`mJcLB&JcLB&JcLB&JcLB&PQ:FWq>c*Ig]70MY5j.SJcLB&JcLB&JcLB&JcNpn
p]&,2RK3-_nc47AYlK@UJcLB&JcLB&JcLB&dK'"@]E"l1q#BCTJcLB&JcLB&JcLB&JcLB&M#dDPr;VNP
jT,&TVuVDLJcLB&JcLB&JcLB&JcNRdo`*8<UB(#flMuM:YlK@UJcLB&JcLB&JcLB&`rP`2aoJaJp&EeI
JcLB&JcLB&JcLB&JcLB&JcP`Lnc+mTn,W+\TE'QDJcLB&JcLB&JcLB&JcN+Wmf2;IZN0Lpi;eH0YlK@U
JcLB&JcLB&JcLB&[fGjr!W`9#iW-sumJkQ6JcLB&JcLB&JcLB&JcLB&JcP-;k5PPas8N*!^]=00nc+aP
JcLB&JcLB&JcLB&JcLB&T)dsPq>^?m!<;rs!<;ut!<;or!WN/srr`?%rr<&Us3Ugu!3lNU!.k3&!.k3&
!.k3&!20DPs2P)P!.k3&!.k3&!.k3&!.k3&!.k3q!!3*"eGfLKoDeF_JcLB&JcLB&JcLB&JcLB&JcLB&
pAk!g!!)]l!!)cnXT3qQYlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNjls8Tb4JcLB&JcLB&
JcLB&JcLB&JcLK)rr<#uKE-T(JcLB&YlK@UJcLB&JcLB&O9#4Yp],mGJcLB&JcLB&JcLB&JcLB&JcNso
qu=A1JcLB&JcLB&JcLB&JcLB&JcLK)rr<#uKE-T(JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&MuWkXq>gQqrr3'#!<3&ds.'.A!.k3&!.k3&!.k3&!.k4$!!*&u!!*&s!!N<%s8N)rrr<&qs2tD^
!!*&q!;uj!!!*$!mJl/GJcLB&JcLB&YlK@UYQ+h+!<3'!r;cis!!*#urVuruquH]qrVuruqu?fu!!)rs
rr2ruq>UEpgAeS]rVuruquHcsr;[9+!<3$!rr<'!!!*'!q#CKrrrD$X!!*#u!!(=E[/U++d/U3If)UC&
JcLB&JcLB&N<&\PK)^H&K)^H&k5UtPJcLB&JcLB&JcNjl]DmK_K)`gi!!'e6U&X*PJcLB&JcLB&YlK@U
df?WPK)_A@!rr?$!;lcr!;lcr!;ZZo!!N<%rr<&us3:W!s8N)orr<&us8)crs82j!!<3'!q>^NqNW=Y2
JcLB&JcLB&NWB%Xq#H3Nqu6]s!;uj!!<<'!pAb-mr;Qj!rrE)p!!*&#!.k3&!.k3&!.k3&!.k3&!6>0>
s1SJb!.k3&!.k3&!.k3&!.k3U!.k4"!<3#)!.k3&!.k3&!.k3&!.k3&!.k32!<3#n!.k3&!.k3&!.k3&
!.k3&!.k3&!6>0>s1SJb!.k3&!.k3&!.k3&!.k3U!.k4!!<<)*!.k3&!.k3&!.k3&!.k3&!.k32!<3#n
!.k3&!.k3&!.k3&!.k3&!.k3&!6>0>s1SJb!.k3&!.k3&!.k3&!.k3U!.k4!!<<)*!.k3&!.k3&!.k3&
!.k3&!.k31!<<)o!.k3&!.k3&!.k3&!.k3&!.k3&!6>0>s1SJb!.k3&!.k3&!.k3&!.k3U!.k4"!<3#)
!.k3&!.k3&!.k3&!.k3&!.k32!<3#n!.k3&!.k3&!.k3&!.k3&!.k3&!65*>s1SJb!.k3&!.k3&!.k3&
!.k3U!.k4"!<)r)!.k3&!.k3&!.k3&!.k3&!.k31!<<)o!.k3&!.k3&!.k3&!.k3&!.k3&!6>0=s1\Pc
!.k3&!.k3&!.k3&!.k3U!.k4"!<3#)!.k3&!.k3&!.k3&!.k3&!.k31!<<)o!.k3&!.k3&!.k3&!.k3&
!.k3&!65*>s1SJb!.k3&!.k3&!.k3&!.k3U!.k4!!<3#*!.k3&!.k3&!.k3&!.k3&!.k32!<3#n!.k3&
!.k3&!.k3&!.k3&!.k3&!6>0>s1SJb!.k3&!.k3&!.k3&!.k3U!.k4"!<)r)!.k3&!.k3&!.k3&!.k3&
!.k32!<)rn!.k3&!.k3&!.k3&!.k3&!.k3&!6>0=s1\Pc!.k3&!.k3&!.k3&!.k3U!.k4"!<)r)!.k3&
!.k3&!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!.k3&!.k3&!.k3&!6>0=s1\Pc!.k3&!.k3&!.k3&!.k3U
!.k4"!<)r)!.k3&!.k3&!.k3&!.k3&!.k32!<)rn!.k3&!.k3&!.k3&!.k3&!.k3&!6>0=s1\Pc!.k3&
!.k3&!.k3&!.k3U!.k4"!<)r)!.k3&!.k3&!.k3&!.k3&!.k32!<)rn!.k3&!.k3&!.k3&!.k3&!.k3&
!6>0=s1\Pc!.k3&!.k3&!.k3&!.k3U!.k4"!<)r)!.k3&!.k3&!.k3&!.k3&!.k32!<)rn!.k3&!.k3&
!.k3&!.k3&!.k3&!65*=s1\Pc!.k3&!.k3&!.k3&!.k3U!.k4!!<3#*!.k3&!.k3&!.k3&!.k3&!.k31
!<<)o!.k3&!.k3&!.k3&!.k3&!.k3&!65*=s1\Pc!.k3&!.k3&!.k3&!.k3U!.k4!!<3#*!.k3&!.k3&
!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!.k3&!.k3&!.k3&!65*>s1SJb!.k3&!.k3&!.k3&!.k3U!.k4!
!<3#*!.k3&!.k3&!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!.k3&!.k3&!.k3&!65*=s1\Pc!.k3&!.k3&
!.k3&!.k3U!.k4!!<3#*!.k3&!.k3&!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!.k3&!.k3&!.k3&!65*=
s1\Pc!.k3&!.k3&!.k3&!.k3U!.k4!!<3#*!.k3&!.k3&!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!6G6?
s1JDa!.k3&!.k3&!65*=s1\Pc!.k3&!/(@PrrE(O!.k3&!.k3U!.k4"!<)r)!.k3&!.k33!<)rm!.k3&
!.k3&!.k31!<3#o!.k3&!.k3&!6G6?s1JDa!.k3&!.k3&!65*=s1\Pc!.k3&!/(@PrrE(O!.k3&!.k3U
!.k4!!<3#*!.k3&!.k3&!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!.k3&!.k3&!.k3&!65*=s1\Pc!.k3&
!.k3&!.k3&!.k3U!.k4!!<3#*!.k3&!.k3&!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!6G6?s1JDa!.k3&
!.k3&!65*=s1\Pc!.k3&!/(@PrrE(O!.k3&!.k3U!.k4!!<3#*!.k3&!.k33!<)rm!.k3&!.k3&!.k31
!<3#o!.k3&!.k3&!6G6>s1SJb!.k3&!.k3&!.k3&!.k3&!/(@Ps8W+P!.k3&!.k3U!.k3&!.k3&!.k32
!<<)n!.k3&!.k3&!6>0>s1SJb!.k3&!.k3&!.k3&!.k3&!.t7Os8W+P!.k3&!.k3&!.k4-!!*%r!.k3&
!.k3a!<3#n!.k3&!.k3&!.k3&!9jI`s-j"?!.k3&!6>0>s1SJb!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!/(@Ps8W+P!.k3&!.k3U!.k3&!.k3&!.k33!<)rm!.k3&!.k3&!.k3&!.k3&!.k3&!6G6>s1SJb
!.k3&!.k3&!.k3&!.k3&!/(@Ps8W+P!.k3&!.k3U!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3U!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.t7OrrE(O!.k3&!.k3U!.k3&!.k3&!.k33!<)rm!.k3&!.k3&!.k3&
!.k3&!.k3&!6G6>s1SJb!.k3&!.k3&!.k3&!.k3&!/(@Ps8W+P!.k3&!.k3U!.k3&!.k3&!.k33!<)rm
!.k3&!.k3&!.k3&!.k3&!.k3&!6>-?s1A>`!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3U!.k3&!.k4(
!!*&u!!3*"iW%7)JcLB&JcLB&JcLB&JcLB&JcMhOf`1%4!!)lqVZ;;KJcLB&JcLB&JcLB&JcLB&n,T-]
oDjICK)boO!<7ZOJcLB&JcN%UJcLB&LB.8PeGoOKrr;uus8Vusc2[;6JcLi3rVuWmJcLB&JcLB&JcLB&
JcNpnh>c:2kPtV_rW(pW^AricaT2;>^&W`bJcLB&JcLB&JcLc1pAa^`T)eK_p]$0PKE2&Ps8R`PJcLB&
JcN%UJcLB&T)e'SrW&/_n,N:bL]EG8rr;`nJcLB&JcLB&JcLB&JcO[.m/OTraoDPD!<3&bs3gt"!6>0?
s1JDa!.k3&!.k3&!.k3C!:Ts]!/CRPs5j9P!.k3&!.k3&!.k3U!.k3&!3Q=ls5a6Q!9F1Vrr<&js-Ne<
!.k3&!.k3&!.k3&!.k4;!;$5e!8[^ks5j<5!.k3&!.k3&!.k3&!.k3O!;$6Q!2'>Ts8;re!!3*"jo;Rc
K)boO!<7ZOJcLB&JcN%UJcLB&\cD@%f)VuSnG`Igrr;3_mJuVRWW8([rVuWmJcLB&JcLB&JcLB&JcPNF
o`(<ZmJueWa8ku7!!)`moDjICaT2;>^&W`bJcLB&JcLB&JcN1YpA`eGX8qhkjoF-9li4[!KE2&Ps8R`P
JcLB&JcN%UJcLB&_Z9E1b5f-So`*GAiW/?F[K)?grVuWmJcLB&JcLB&JcLB&JcGcNpA^-Qp]0sdYlO+i
rW%NMa8l5>^&W`bJcLB&JcLB&JcNIaq#AY?[fH+$fDs>"li5!*JcLB&JcLB&JcN%UJcLB&bQ.D;_#VFS
p]&;7g&UmIrW)]m^]8rdJcLB&JcLB&JcLB&M#dDPs8RcQ!<;ioRK33ar;cfrqu<u&s8U^OJcLB&JcLB&
JcLB&JcPWIs8UCFq#A>6^B"'/blGldq#C6lq#A\@n,WIfqZ-WqT)aHCJcLB&JcN%UJcLQ+rr;uudfB4D
\,a_QqZ"80dK'+CqZ-EkbQ.\CrrDutr;ZQms8Vfn!<;orr;ZZps8VZjs8Vios8W#ts8UsVs8VfnJcLB&
JcLB&JcLB&_Z9Z8dK'+CqZ+_<s8U";q>Z<PqYpNqquHNlc2[kEq>^Qr!<3#n!<<)p!<<)t!;ZZn!<3#n
!<3&us7cTns8;rss5<tVs1SJb!.k3&!.k3&!.k4M!<)rI!;ZZ3!<)r<!;QTY!<<)V!5S[4s7u`ks478J
!<<)n!<<)o!<<)q!<<)t!;HNl!<3#m!<<)o!<)rp!<<)Y!<<*!s+CB(!.k3&!3lNU!/ppTs8;rP!;QT1
!<)rj!7V#Es6'I]s3q%l!;ZZk!;c`F!<<)t!;Z]qs7ZNns82lss82lss8;rrs82lss7cTos7cTls7u`q
s5F%Xs7cSG!.k3&!.k3&!.k3l!;c`I!;c`e!6tTBs2k?;s7lZ_!<)qd!!*&ss7lZjs478Ns7QHms7ZNn
s8;rts82lss8)fps82lss7u`qs7ZNks7u`qs5F%Xs1SJb!.k3&!.k3&!/(@Ps8;oL!;c`1!;lfr!6kN?
s5a7Zs4m[e!;lfk!;lfP!;uoss7QHms7ZNms8E#us82iss7u`ps8)frs7u`qs7cTks7lZps5F$1!.k3&
!.k3U!.k35!;QTk!8mkRs1\R1s766E!;c`V!;ulF!6"s7s7lZks4[PRs82ln!<<)m!<<*!!<<)i!<3#q
!<<)s!<3#o!<<*!!<3#o!<<)N!.k3&!.k3&!.k3&!6bH<s4[PMs6Tg7!;c`?!;c`e!:g-es-E`a!;lfk
!;c`O!<<)l!<<)m!<<*!!<<)i!<<)q!<<)s!!*$!s7cTos8N)us7lZps.'.A!.k3&!.k3&!/U^Ps8DuR
!;ZZ0!;QTm!7LrEs5O+Us4dU_!;lfk!;c`U!;uots7HBls7QHlrrN3#s766is7u`ps8;rts7lZps8E#t
s7cQos5F$1!.k3&!.k3U!.k39!;uls!<)rn!9F4Ws1\R.s7$*I!;c`U!;ZZA!5AO2s7cTjs5<tXs82ln
!<<)m!;lff!<<)p!<3#t!<3#o!!*&t!<3#n!!*&N!.k3&!.k3&!.k3&!7:fEs8;rrs5*hQs6'I7!;uis
!;ulF!;c`_!;6Egs-3TZ!;lfk!;c`T!<<)l!<<)m!;lfg!<3#o!<3#t!<<'!s7u]qs82lrs7cQos5O+Y
s1SJb!.k3&!.k3&!0.'Vs8;rts8W,W!;c`0!;lfr!<)rp!8%;Ks5F%Qs4RIX!;lfj!;lf[!;uots7HBl
s7QHis7?<ks7cTns8E#ts8)frs82lrs7cQos5X1[s8W+P!.k3&!.k3U!.k3>!;ulo!<3#m!9sR]s1SL1
s8;rss6fsL!;lfT!;uis!<)rC!4r7.s7ZNjs5j=\s82lo!<3#l!;lfh!<<)m!<<)u!<3#r!<3#s!;ulm
!!*&[!<)rm!.k3&!.k3&!.k3&!7LrHs82lqs5F%Us5F%6!;ulp!<)rJ!;c`Z!;ccns8N)ts-*NT!;lfj
!;lf[!<3#l!<3#l!;lfi!<<)l!<<)u!<<'!s82lgs8)crs5X1Ys1SJb!.k3&!.k3&!0%!Ws8;rss5O+U
s1JF1s8)fqs7lZN!;ulT!;ulq!<3#N!3?1us7ZNjs6Kaa!<3#m!<3#l!;lfi!!*&k!<<)u!<3#q!;-<g
!!*&Z!!*$!s+:<'!.k3&!3lNU!1*]as8N)ts7QH]!;lf-!<)rq!<)rc!9sR]s5<tTs8;rrs31PP!;lfj
!;lf]!<3#s!;ccps7cTnrr<&us7ZNns7?<ks8E#ts7?<js7cQos477&!.k3&!.k3&!.k3t!;ZZU!;lfQ
!8ISPs8E#ss4@>Js5O+Z!;lfo!<3"]!:Kpbs7ZNjs69Uas7cTls7cTos8N)us7lZos8)frs82lrs8;ot
rrE)k!<3#o!<<(i!.k3&!.k3&!.k3.!;c]q!9X@Ys0i"%s7cTR!;lfR!;ulp!<)rL!2onqs7QHis7$*e
!<3#o!;lfl!<<)u!<<)p!;?Hj!<3#s!<3#k!<3#o!<<)Y!.k3&!.k3&!3lNU!13cds8N)ss7?<_!;lf(
!;HN[!:Kpbs4dVPs8E#ss2tDJ!;ulj!;lf_!<<)u!:Kpfs8;rss8)fis8)frs82lrs7HBks7lZps477&
!.k3&!.k3&!.k4"!<3#t!<)r]!;lfL!8@MKs4RJMs5!bS!;uls!<)q[!:'X^s7QHis6]mds6Tgds82ls
s8)fis82lrs8)frs7HBks7lZps5O+Ys1SJb!.k3&!.k3&!07-Ys8;rts8E#a!;lf&!;HNe!9X@Zs478G
s4%+F!;ulj!;lfh!;Z]qs6]mes8)frs6B[bs7u`ps6Kacs5F"Ys8W+P!.k3&!.k3U!.k3?!;ula!;?Kj
s0;Y(s8N)ts69UU!;lfI!;ZZ:!3Q>"s7QHis6]mds7-0hs7lZps6Tgds7cTos6Tgds5F%Ws7cSG!.k3&
!.k3&!.k4#!<3#Y!;ulI!8@JRs82iss4m\Ps4IDN!;QST!9X@[s7HBhs6fsfs7-0is7ZNns6]jes7cTo
!<<)f!<<)X!<)r3!.k3&!.k3&!.k3&!:Kpbs-`rR!;lfH!<)rt!<3#I!2'>is7HBis7lZK!<<)g!!*&k
!<3#h!<<)V!!*'!s+CB(!.k3&!3lNU!.k4J!;ukV!;HQks3q&Is8;rts2Y2?!;uli!;lfc!9=+[s7$*g
s7?9ks7-0is5!bUs7ZMF!.k3&!.k3&!.k3[!;ulE!9!qWs478Js4%,L!<)qR!94(Xs8)frs82lps53nW
s5a7[s7cT^!<3"c!.k3&!.k3&!.k37!<3#i!:g-fs02S&s69UR!;lfE!<)rA!1a,gs8;rss8)fns8;r\
!<3#\!<3#[!<3#R!.k3&!.k3&!3lNU!1s8is6'I_!;lf#!<)rT!;ccos3UiGs1eW3!<)ot!;uln!;ulg
!:p3hs5sC\s5sC\s3Lat!.k3&!.k3&!.k4)!<)r[!;ulA!94(Xs4RJMs3UiGs+LI1!;QTi!;ul\!;ul[
!<)rk!:g-fs4dVSs1JDa!.k3&!.k3&!0mQ_s7-0`!;ul!!<<)_!:p3gs3LcEs2k>0!;QTi!;uis!:'X^
s6'I\s6'I\s4[MRs8W+P!.k3&!.k3U!.k3D!<3#\!<)qP!<3&ss3C]Ds1\Q0!;QTh!;ulj!;?Kjs60O\
s6'I[s4[PQs7cSG!.k3&!.k3&!.k3b!;ul>!4r7/s3:TEs8W+P!8[_Ms7cTls6fsas60O[s7HBc!;c`L
!<3#4!.k3&!.k3&!.k3&!;QWms,R0R!;ulB!<)rb!<<)V!1Eo]s7ZNms8W,h!;ZZ\!;ZZ\!;QTJ!!*'!
s+CB(!.k3&!3lNU!/:LPrrE)$!<3#R!<<)us3(KBs6fsbs82lss4dUO!;-<c!;lfm!;lils6Ka[s6Ka\
s4IDOs7cSG!.k3&!.k3&!.k4+!<<)`!;lf:!9X@\s4m\Qs3(KBrrE)g!<2uu!<)rq!<<(o!8mkKs7QHj
s7cTfs6Tg\s766f!;?GV!.k3&!.k3&!.k3<!<)rd!;uoqs/Z5!s5X1W!;lf>!<3#f!<<)t!<)rq!<<)`
!1EoZs7ZKn!;uln!;lcr!<)rc!;lcr!;ulb!;uls!<)rL!.k3&!.k3&!3lNU!2BPms6Ka`s8E#$!<)rT
!;uis!6P<@s7ZKns8)crs8)fqs8)frs5*gO!;6Bb!;ulq!;lfq!<)rd!;ulr!<)rd!;lfq!<)rA!.k3&
!.k3&!.k3&!8RYSs6Ka`s2+j!!!*&V!;ul<!!<3#!;HQos763js7lZps/#eN!;?Hc!;uls!;lfq!<)re
!;lfp!<)rg!!!#rs8;rrs,d;5!.k3&!.k3&!13ccs6]je!;ukQ!<)urs2Y3>s7ZNns7?<ks7lZps6BZL
!;HNh!;uoks8;rrs7$*es82lqs7$*ds82lqs475Ns8W+P!.k3&!.k3U!.k3F!!*&d!;ulo!/ppTs8;r?
!<<)o!<<)j!<<)p!<3#W!1j2cs7?<gs8W,s!<)rf!;lfo!<3#f!;ulp!<)rK!<3#n!.k3&!.k3&!.k3&
!6,$<s1eWT!;ul8!!<3#!;QWps7?<ks7cTns/,kI!;c`f!;c`n!<3#e!;ulq!<)re!!!#ss8;rss4%,K
s1SJb!.k3&!.k3&!.k3I!<3#X!!*&ts2+j:s7cTos7QHjs7cTos6K`H!;c`m!;QWls8E#ss6]mbs8N)t
s6Tgas8N)ts4%)Ls8W+P!.k3&!.k3U!.k3&!3lP&s5O+Ws7lZ;!<<)p!<3#l!;lfl!<3#X!13cas7-0i
s8Dut!<3#b!;HN[!;QTD!<3#n!.k3&!.k3&!.k3&!.k4:!<3#Z!;lf4!<3#p!<3#j!;uln!<3"s!7:fE
s7-0as6Ka\s6]md!;QSS!.k3&!.k3&!.k3<!<3#d!2]bqs5X1Ys1eX6s7lZos766hs7u`ps6TfE!;ulq
!;?Kes6Tg]s6Ka\s3^n!!.k3&!.k3U!.k3G!<3#Y!3lP's5a7Ys7QH8!<3#p!<3#h!<3#p!<3#X!0dK_
s763js7cQ]!;QT[!;QT7!.k3&!.k3&!.k3&!8RYSs/?"`!!*&]!;lf1!<3#o!<<)i!<3#p!<3"s!6bHC
s7?<as6p$drr<&ts6Tdd!<)rt!<3"W!.k3&!.k3&!.k3<!<)rd!/^dSs8E#5!<)ro!<<)h!<<)q!<<)c
!.k4G!;$6]!;ulr!<<)c!<)rr!!*&G!.k3&!.k3&!3lNU!2BPms5X0G!;ulf!6G6?s7u`qs7-0hs7u`q
s5<s3!<3#ks7-0gs5sC[s3(KBs7cSG!.k3&!.k3&!.k3&!7(ZFs0r(/rrE)q!<3#i!<<)q!<3"r!5JU(
s7?<is5j:]s8N&A!<3#4!.k3&!.k3&!.k3&!2]brs5*gi!<3#p!<<)r!<<)s!<3#p!<3#b!.k4J!:Km\
!;ul[!<)r?!!*'!s+CB(!.k3&!3lNU!.k3U!<3#K!6>0=s8)frs8)fks7lZps53m4!<3#u!!!#ks7QHk
s5j=[s2k?@s7cSG!.k3&!.k3&!.k4(!<<)#!:'Xas-j#fs7u`qs8)fns7cTns/#e4!<3#s!;-<c!<3#\
!<2uus2b9?s1SJb!.k3&!.k3&!0mQ_s7-/e!<)rV!5&=1s8)fqs6Tgds69T9!;lirs7u`hs7cTms5j=\
s2P+k!.k3&!.k3U!.k3D!<)r\!3lP's4%+h!<3#p!<<)e!<<)U!/LXSs8E#q!;HNh!<)r[!<3#2!.k3&
!.k3&!.k3&!8.ANs/l@e!<<(g!<3&us7u`qs6p$gs.]S3!<3#l!;HNj!<)r[!<2uu!.k3&!.k3&!.k3&
!0dK_s7-/A!4i10s7lZps7-0is5sB6!;uoss7?<es8)fqs5a7[s2G%j!.k3&!.k3U!.k3B!!*&]!.k3i
!<)r7!/^dTs8;rk!;c`n!<3#\!<)r<!<3#n!.k3&!.k3&!.k3&!.k3&!<)uts+gZn!<3#f!;lfp!<)r[
!<)ot!6>0>s1SJb!.k3&!.k3&!.k3G!<3#Y!4`+.s3:Ur!<)uts6]mbs8E#ts5a7[s2G$=s8W+P!.k3&
!.k3U!.k3?!<<)a!3Q>#s4ICi!<3#9!/^dUs82le!<)rt!<3#[!<3#<!<3#n!.k3&!.k3&!.k3&!7h/K
s02Rf!<)qi!;uors,$fp!<3#a!<)ot!<3#\!<)rt!6>0>s1SJb!.k3&!.k3&!0I9[s7QGe!<)rZ!4Mt-
s3C[s!<3&us6'I[s5j=\s24m;s+:<'!.k3&!3lNU!1Nues6K`e!<<)P!5\a7s2=tr!<3#q!:0^as5j=\
s1&,]!.k3&!.k3&!.k4$!<)r'!.k4J!<3"V!6"s;s5a7[s5a7[s8N(N!.k3&!.k3&!.k33!<<)m!.k3Z
!<3#F!.k4N!<)r[!<3#[!<3#;!.k3&!.k3&!3lNU!.k3&!5S[7s2=tq!<3#r!:'Xas5a7[s1/2^!.k3&
!.k3&!.k3&!94(Zs.TMj!<3"V!5nm:s5j=[s5j=\s8N)?!<3#4!.k3&!.k3&!.k3&!1s8is6'Hk!<3#F
!.k4M!<3#\!<)r[!<)r<!!*'!s+CB(!.k3&!3lNU!.k3M!<3#S!5S[7s2=tq!<3#r!9sR`s5j=[s2P-=
s7cSG!.k3&!.k3&!.k4"!<<))!94(Ys.]Sk!<3"V!5nm9s5j=[s5j=\rr<&?!<3#4!.k3&!.k3&!.k33
!<)rm!1a,hs60Nl!<)rF!.k4L!<3#[!<3#\!<)r=!!*'!s+CB(!.k3&!3lNU!1Eods6Tfb!<<)T!5S[7
s2=tp!<)rs!9jL^s5sC\s2P*>s7ZMF!.k3&!.k3&!.k4#!<)r(!.k4J!<3"V!5\a8s5j=[s5j=\rrE(O
!.k3&!.k3&!.k33!<3#m!.k3Z!<3#F!.k4K!<)r[!<)r\!<)r=!.k3&!.k3&!3lNU!.k3&!5\a8s24nm
!<3#u!9aF]s5j=[s1SJb!.k3&!.k3&!.k3&!8mhWs.fYm!<3"U!5S[6s5j=[s5j:]s8W,A!<3#4!.k3&
!.k3&!.k3&!1X&gs69To!<)rD!.k4I!<3#\!<)r[!<)r@!!*'!s+CB(!.k3&!3lNU!1Nrgs60N]!<3#U
!5eg9s2+hk!<)r[!<)r[!<)rA!<3#n!.k3&!.k3&!.k3&!7h/Ls0)L_!<3"o!<)uss+p`j!<3#\!<)r[
!<)rA!<3#4!.k3&!.k3&!.k36!<)rj!1a,hs60No!<3#C!.k4G!<3#\!<)r[!<3#B!!*'!s+CB(!.k3&
!3lNU!1a,gs69T^!<<)U!6"s:s2"bh!<<'!s5j=[s5j=[s31QCs7cSG!.k3&!.k3&!.k4'!<)r$!.k4N
!<3"R!58I3s5j=[s6'I_!<3"R!.k3&!.k3&!.k36!<3#j!.k3_!<)rA!.k4F!<)r[!<3#\!<)rB!.k3&
!.k3&!3lNU!.k3&!65*<s1eVe!!*&us5j=[s5j=[s2+hg!.k3&!.k3&!.k3&!9=.Zs.]Pos8N%P!5&=2
s5a7[s60O_!<)rC!!*&4!.k3&!.k3&!.k3:!<<)f!2'>js5sBr!;ulr!;ulF!.k4E!<)r[!<3#[!<3#E
!!*'!s+CB(!.k3&!3lNU!29Jls5a6]!<)rQ!6G6?s82los2Y1l!!!#us5j=[s5j=[s3LcFs7cSG!.k3&
!.k3&!.k4,!;ukt!9O:[s.fYorrE)s!;leV!4r71s5a7[s69U_!<)rE!<)r4!.k3&!.k3&!.k3<!<)rd
!2'>ls5a6s!;ulo!;lfF!.k4D!<3#[!<3#[!<3#F!!*'!s+CB(!.k3&!3lNU!2BPns5O*2!6bHAs7u`m
s2Y1l!<3&us5j=\s5a7[s3CZFs7ZMF!.k3&!.k3&!.k3&!/LXRs8N)r!<)qV!4i10s5j=\s69U^!<3"U
!.k3&!.k3&!.k3&!.k3g!<)r9!.k4C!<3#\!<3#[!<3#E!.k3&!.k3&!3lNU!2fhss5!aZ!<<)M!6tTC
s1&,]!<3&us5j=\s5a7[s24nh!.k3&!.k3&!.k40!<3"p!9sR_s.o_os8;qL!4r71s5a7[s69U^!<3"U
!.k3&!.k3&!.k3A!<)r_!2]bos5F$t!<)r7!.k4D!<3#[!<3#\!<3#D!<<(P!.k3&!.k3U!.k3M!<)rS
!3lP&s4.1t!<)rj!;lf;!.k1N!<3#\!<)r[!<3#E!<)rn!.k3&!.k3&!.k3&!94(Xs.fY[!<<(r!<)ro
!;ccns,I)k!<3#\!<)r_!;uoss3C]Ds1\Pc!.k3&!.k3&!1a)is5sB6!65*=s766fs3gt"!;6Eks5j=\
s5j=[s3CZFs8N%P!.k3&!.k3U!.k3&!.k3e!;lf;!.k4Ms5j=[s5j=\s3:WCs7lYH!.k3&!.k3&!.k3&
!:Kpfs-<Z^!;ukV!5/C2s5j=\s6'I_!<)rB!<<)5!.k3&!.k3&!.k3&!36+us4dU+!.k4F!<3#\!<)r[
!<)rB!.k3&!.k3&!3lNU!.k3[!<)rE!.k3(!<<*!s5sC\s5j=[s1n\e!.k3&!.k3&!.k3&!:^'fs-<Y:
!58I4s5j=[s5sC\s+UN*!.k3&!.k3&!.k3P!<<)P!.k3&!;QWns5j=\s5j=[s2tEBs+CB(!.k3&!3lNU
!.k3&!5JU6s2G%n!<)r[!<)r\!<)r@!<3#n!.k3&!.k3&!.k3&!.k3&!;ccns,I)p!<)r\!<)r[!!*&u
s2tE@s1\Pc!.k3&!.k3&!.k3&!4Dn)s3gt"!;ccps5j=[s5sC\s2k<As8N%P!.k3&!.k3U!.k3&!.k3e
!;lf;!/CRRs8N)_!<)r\!;ul>!<)rn!.k3&!.k3&!.k3&!.k3&!;ccns,I)r!<)r\!<)r\!<)ots2b9>
s1\Pc!.k3&!.k3&!.k3&!4;e/rrE*!dK"k!r;cfrk5bG[k5bJ\`rL\kJcLB&JcN%UJcLB&JcLB&M?*VT
r;c-`r;Yp[rVsJ0JcLB&JcLB&JcLB&JcLB&JcNairVu$\r;Yp[rVultJcLB&JcLB&JcLB&JcLB&JcLB&
!!)utk5bG[kQ(P\_uPAhJcLB&JcN%UJcLB&JcLB&N<&qWq>fp`r;Yp[rVsb8s8VioJcLB&JcLB&JcLB&
JcLB&qZ-NnNW@-#r;Ys\r;Yp[r;Z]qa8l2=^AricJcLB&JcLB&JcLB&[K-4)df>%$s8W)uk5bJ\k5bG[
_Z0]:rr7ZPJcLB&JcN%UJcLB&JcNUequ=_;Nr].Yp]0d`rVu$\r;XV6rVuZnJcLB&JcLB&JcLB&JcLB&
q>gHnNW@3%rVu$\r;Ys\r;ZTna8l2=^AricJcLB&JcLB&JcLB&[/g.)df>+&rVlltkQ(P\k5bJ\^An96
K)gK'JcLB&YlK@UJcLB&^]=E7`;l&$r;ZHjnc8Xgk5bG[ZiG[XJcLB&JcLB&JcLB&jo>Pa!!*$!rr2ru
rr3!!s82lss0;WV!6bHAs5j=\s5a7[s7cSG!.k3&!.k3&!.k3H!8mhSs0r']s7lYH!/:IRs8E#\!!*%j
!.k3&!.k3&!3lNU!3cIUs82l2!8.>>!7Cl#s4IC(!.k3&!.k3&!.k3&!.k49!<)p!!!*&u!!WB&!<3$!
r;R''rrE*!!!*$!!;HN1!;HQns5*hTs1\R-s5X-P!.k3l!<)r4!.k3&!.k3&!.k3I!<3#W!<3&ts1&./
s5!bTs7lZ9!8.>4!.k3'!!*&us+LH)!.k3&!3lNU!3cJ&s5!bTs82l2!<3#T!<3#d!7ClHs5*hTs4RI)
!0.'Xs7lYH!.k3&!.k3&!.k49!<3#U!<)r7!;HQns5!bTs1\R6s7cTW!<3"j!.k3l!<)r4!.k3&!.k3&
!.k3I!<3#W!<)uts1&./s5!bTs7lZ8!<<)T!<<)[!.k3&!<3"P!.k3&!.k3U!.k3T!<3#U!<)rq!58I4
s5!bTs6]m8!<<)T!<<)P!.k3&!.k3&!.k3&!.k3&!9sR`s5*hTs2"d2!<3#T!<3#5!<3#o!9O:]s.9:C
!.k3&!.k3&!.k3&!2T\ps5<tX!<)r.!<3#T!<3#o!65*=s5*hTs5a64!.k3&!.k3&!.k3U!.k3T!<3#T
!<3#r!58I4s5!bTs6]m8!<3#U!<)rO!.k3&!.k3&!.k3&!.k3&!9sR`s5*hTs2"d2!<3#T!<3#5!<3#o
!9O:\s.B@D!.k3&!.k3&!.k3&!2T\ps5<tW!<3#/!<3#T!<3#o!65*=s5!bTs5a64!.k4Ms+LH)!.k3&
!3lNU!3cJ&s5!bTs82l2!<3#T!<3#d!7ClHs5!bTs4RI)!0%!Xs7lYH!.k3&!.k3&!.k49!<3#T!<3#8
!;HQns5!bTs1\R5s7lZX!<)qj!.k3l!<)r4!.k3&!.k3&!.k3I!<3#W!<3&ts1&./s5!bTs7lZ8!<3#U
!<)rZ!.k3'!!*&us+LH)!.k3&!3lNU!3cJ&s5!bTs82l2!<3#T!<3#d!7ClHs5!bTs4RI)!0%!Ys7cSG
!.k3&!.k3&!.k49!<3#T!<3#8!;HQns5!bTs1\R5s7lZW!<3"k!.k3&!.k3&!.k3&!.k3I!<3#W!<)ut
s1&./s5!bTs7lZ8!<3#T!<3#[!.k3&!.k3&!.k3&!3lNU!3cJ&s5*hTs82l2!<3#U!<)rc!7ClHs5!bT
s4RI)!.k3&!.k3&!.k3&!.k49!<)rU!<)r7!;HQmrr`?%!!*&u!<<*!!<)p%!<3$!rr<&js1\R5s7lZW
!<3"k!.k3j!!*&5!.k3&!.k3&!.k3I!8dbQs1&-^s7lZ8!<3#T!<3#[!.k3&!<3"P!.k3&!.k3U!.k3T
!8.>L!58Hbs6fs9!<3#V!;ulN!9!nXs.]RR!<3#o!.k3&!.k3&!.k3&!9sR:s2"d1!87Ce!;?HQs18:2
s6'H7!65*=s1\Pc!.k3&!.k3&!2KVkrr<&hrs8Z*rr<'!!!*'!rVrSlrr;0^`rOcljT*m4s8T5%JcPfM
K`H])JcLB&YlK@URK3BflN!j`s8UmTdK%r"g&U+4rr8boN<&tXq#H!HJcLB&JcLB&JcO:#s8T>(iW0#Y
UB(,jrr8krrr;3_JcNdj!<9b5JcLB&JcLB&JcLi3s8VcmScJ`hklA'js8UIHfDtmMY5j.SJcLB&JcLB&
YlK@URK3BflN!marVt^S^B"<6`W5$!rVrYnJcLB&JcLB&JcLB&JcO:#s8T>(irK&XU]C5krVrhsrVu*^
JcLB&JcLB&JcLB&JcLl4rVuTlScJ`hklA*krVt:GfDtjLYQ07Trr7ZPT`>)mirFc5!ri6#JcN%UJcM8?
rVu3aW;unsh>k=krVsn<irK#WV#ZJTrr;coJcMkP!<:[OiW&uYl2Uhaq#Jb@oDjICrVururW)uurW!<*
!<<'!s8N*!!!)lq#6=c(s8N*!s8E!"s8N)hs1SJb!7_)Js0;Xc!;lem!;Z]ns/Q.rs6B[J!!*&`!!*&t
!!3*"rVuis%0$>-!<3'!rrE'!rrCFGkl9Q@rr:CHrr2ruo)F=Ajo>,VVZ4d<p]/53K)blNq#CEpN<&qX
!<;uts8W*!rr;uur;Q`sq>^Hpqu6WrqZ$Qqq>\S;r;ZKk[K$=-p&G*mqZ$]t!!)ipqZ$WrqZ-ZrrW)rt
!!!*$s8N)qrr<&krr<&_rr<&-s4RGJ!4)X"s5<qXs8N&M!3cEqs7lZ\s+LFP!;Z\Ps187+!!*&orr<%X
s3q#D!4`&\s5X+Z!29Ghrr<&cs7lYms/uC[!<3#o!8de=rr<&7s/Z1q!9!m<s7cTms5!\T!;ZWp!3lLB
s7lZ7s,R-T!<)qLs5O%Y!7LlI!7Lnsrr<&Zrr<&cs7lZ]s472M!3Z@hrr<&ts53nVs4788s+::4s7lZk
rr<&%s2k<9!5nhgs8W,p!0$s!s7lZ4s.02i!9jHnrr<&Bs4RGJ!4)X"s53n,!3cEqs7cT\s+LFP!;Z\P
s187*!.t7"s7lZCs7u``s3UcG!;$3j!9sO`!8[[is8N)=s5a4U!2ok2rrE-"r;[-'!<3'!!!*'!e,\A+
_#FK:s8N)grrW9$!<<#u!WW6#rW!$"!<<#u"9/?$s7HBls82lrs7ZNns60L`s7lZos7lZps6fpfs7lWp
s8E"]!<3#n!<)rLrrN3#!<3!!!<;utrVults8Vus!<;]l!<<#u"9/?$s7cQqrrE)]!5&<Ps,R-T!<)rK
s7u`&s5X.Y!2KSis8N)qrrN3#!8d_W!<<)u!!E6$s8W#tqYpNqqYpNqrVlp!s8W&urr;cos8Vrr!ri9#
pAfdFJcLB&kQ(V^q#LHpVuY$Arr;`ns8U%<JcP!7!<8Ph^]4H9rrCULq>^d#rrE'!rr<&srsJi,!<<'!
s8N'!rrE&u[K-:+r;cisli=Kprr;rtrr:LKgAq9RWW7VNJcMMFs8Vlps8VHdL&_5RrW)cps8RuWYlK@U
ScJfjk5_R`rr;osrr:pW_>sT8rW)uuaT1H's8S\kN<&tXq#H!HJcLN*s8W*!JcLB&JcOF's8T2$joGG]
quH`rVZ?Vps8W#trr9/%s8Vlp!<;EdJcNgkrr9_5JcLB&JcLB&JcLu7s8Voq!<;lqT`G)lr;cfrm/XWr
rr;lrs8UULgAq9Rq#CEpZN,RWrr7ZPJcLB&JcN%UJcMABs8Voq!<;KfXT8%oiW/fT!<:4Brr;lrrr:.A
k5bM]q#CEpVuVeWrr;coJcLB&JcLB&JcLB&fDtsOq>^Nq[/f@ip&F^cs8W&uo`+[ds8UFGr;cisquH`r
YlOe'q#LHpmJqh=`rQ/>^&W`bJcLB&JcLB&PQ:^_q>gQqqZ*>jp&F^cs8W#trr;]lq#LHpc2dbArrE#t
ec=G)s8Vlp!<9A*JcLB&JcLB&JcN%UJcMDCrr;fps8VQgW;unso)SgjqZ-TpquH]q!<;ips8UCFp&E28
JcLB&JcLB&JcLB&JcLB&f`;$OXT7>\rr;Tjs8VoqrVu]orVu]orr:FIrW)TjOoU(6JcLB&JcLB&JcLB&
PQ:^_nc4[Ms8Vio!<<*!q>gKoq#LHpciEh?!<E/N!.k3&!.k3&!.k3&!3lNU!1s8js5sBN!<3#o!<)rn
!!*&us7u`ps3(KBs2P+k!/pmXs7cSG!.k3&!.k3&!.k3&!7V#Ks7ZNms7lZos7cTns4%,F!<3"X!.k3k
!<3#5!.k3&!.k3&!.k3&!0@3[s7ZKns8W,p!<3#n!<3#C!<3#H!.k3&!<3"P!.k3&!.k3U!.k3&!1Nuf
s7ZNms7u`qs8W,o!<)rC!<3#=!.k31!<3#o!.k3&!.k3&!.k3&!.k4$!<<)m!<3#q!<)rk!<3#L!;QWo
s,@#1!65*=s1\Pc!.k3&!.k3&!.k35!<3#l!!*&ms7HBks3:WDs3^n!!.k4Ms+LH)!.k3&!3lNU!.k3@
!<3#l!;6?ls7QHls3:WDs2P+k!.k3&!.k3&!.k3&!.k3&!7h/Ls7QHls8)fos7ZNms4.2G!<3"X!.k3&
!.k3&!.k3&!.k3&!0I9\s7QEms8W,q!;ull!<)rD!<3#H!.k3&!.k3&!.k3&!3lNU!.k3@!<3#l!<3#o
!!*&us7cTms3C]Es2P+k!0%!Xs7lYH!.k3&!.k3&!.k3&!7h/Ls7QHls7cTms7lZns478H!<3"X!.k3k
!<3#5!.k3&!.k3&!.k3&!0I9\s7QEms8W,o!<)rn!<)rD!<3#H!.k3&!<3"P!.k3&!.k3U!.k3&!1X&g
s7QHls7cTms7lZos3:WDs2P+k!0%!Xs7lYH!.k3&!.k3&!.k3&!7_)Ls7QHls7lZms7lZos4.2G!<3"X
!.k3k!<3#5!.k3&!.k3&!.k3&!0@3[s7ZKns8W,p!<)rm!<3#D!<3#H!.k3&!<3"P!.k3&!.k3U!.k3&
!1Eofs7cTls82lrs8W,o!<)rC!<3#=!.k3&!.k3&!.k3&!.k3&!.k4#!<<)p!:p0a!<3#K!.k3&!.k3&
!.k3&!.k3&!.k32!<<)q!<3#ns7?<ks-`q>!.k3&!.k3&!.k3U!.k3&!1<ies6Ka[!<3"Z!.k3&!.k3&
!.k3&!.k3&!.k4!!<<)Z!<<)J!.k3&!65*=s1\Pc!.k3&!.k3&!.k30!<<)p!:9dds-Ne<!.k4Ms+LH)
!.k3&!3lNU!.k3:!<<)f!;QWps,6r0!0%!Xs7lYH!.k3&!.k3&!.k3&!7(WFs6'I_s3Lat!.k3k!<3#5
!.k3&!.k3&!;ccqs,-l/!.k3&!.k3&!<3"P!.k3&!.k3Z!<3#u!.k3&!.k3&!.k31!<3#o!.k3&!.k3&
!5S[7s2=ti!.k3&!.k3&!.k3&!.k3&!.k4J!<3"V!.k3&!.k3&!.k3&!.k3&!.k3Y!<<*!!.k3&!.k3&
!.k3&!.k3&!.k3&!5S[7s2=ti!.k3&!.k3&!6,!=s1SJb!.k3&!.k4J!<3"V!.k3&!.k3&!.k4Ms+LH)
!.k3&!4Dn,s8N(N!.k3&!.k3&!0%!Xs7lYH!.k3&!.k3e!<3#;!.k3&!.k3&!.k3k!<3#5!.k3&!.k3&
!;Z]qs,-l/!.k3&!.k3&!<3"P!.k3&!.k3Y!<<*!!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!5JU7s2=ti
!.k3&!.k3&!.k3&!.k3&!.k4I!<<(W!.k3&!.k3&!.k3&!.k3&!.k3Z!<3#u!.k3&!.k3&!.k3&!.k3&
!.k3&!5JU7s2=ti!.k3&!.k3&!.k3&!.k3&!.k4I!<<(W!.k3&!.k3&!.k1O!<7]PJcLB&JcN1Ys8W*!
JcLB&JcLB&JcLc1rr;coJcLB&JcLB&^]=E7`;kJiJcLB&JcLB&`rQ,=^AricJcLB&JcPWIs8RuWJcLB&
JcLB&JcPfMK`H])JcLB&[/g7,rr@WNJcLB&JcLB&N<&tXq#H!HJcLB&JcNRds8U%<JcLB&JcLB&JcLB&
JcLB&JcLB&q>gQqMZA>/JcLB&JcLB&JcLB&JcLB&[/g7,rr@WNJcLB&JcLB&JcLB&JcLB&JcNRdrr9t<
JcLB&JcLB&JcLB&JcLB&JcLB&q>gQqMZA>/JcLB&JcLB&!<E.Q!.k3&!.k3Y!<2uu!.k3&!.k3&!.k31
!<3#o!.k3&!.k3&!5JU7s2=ti!.k3&!.k3&!65*=s1\Pc!.k3&!.k4I!<3"W!.k3&!.k3&!.k4Ms+LH)
!.k3&!4;h,s8N(N!.k3&!.k3&!0%!Ws7u_I!.k3&!.k3d!<3#<!.k3&!.k3&!.k3k!<3#5!.k3&!.k3&
!;Z]qs,-l/!.k3&!.k3&!.k3&!.k3&!4;h+rr<%N!.k3&!.k3&!.k3&!.k3&!.k3d!<3#<!.k3&!.k3&
!.k3&!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!.k3&!.k3&!4;h+rr<%N!.k3&!.k3&!0%!Xs7lYH!.k3&
!.k3d!<3#<!.k3&!.k3&!.k3k!<)r5!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!<)qP!.k3&!.k3Y!<2uu
!.k3&!.k3&!.k31!<3#o!.k3&!.k3&!5JU7s2=ti!.k3&!.k3&!65*=s1\Pc!.k3&!.k4I!<3"W!.k3&
!.k3&!.k1P!<<(Q!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!.k3&
!.k3&!.k4I!<<(W!.k3&!.k3&!.k3&!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j
!.k3&!.k3&!65*=s1\Pc!.k3&!.k4I!<3"W!.k3&!.k3&!.k4Ls+UN*!.k3&!4;h+rr<%N!.k3&!.k3&
!0%!Ws7u_I!.k3&!.k3d!<3#<!.k3&!.k3&!.k3k!<)r5!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!<3"P
!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!.k3&!.k3&!.k4I!<3"W
!.k3&!.k3&!.k3&!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!6,$=
s1\Pc!.k3&!.k4I!<3"W!.k3&!.k3&!.k4Ls+UN*!.k3&!4;h+rr<%N!.k3&!.k3&!0%!Ws7u_I!.k3&
!.k3d!<3#<!.k3&!.k3&!.k3k!<)r5!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!<3"P!.k3&!.k3Y!<2uu
!.k3&!.k3&!.k30!!*&o!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!.k3&!.k3&!.k4I!<3"W!.k3&!.k3&
!.k3&!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!6,$=s1\Pc!.k3&
!.k4I!<3"W!.k3&!.k3&!.k4Ls+UN*!.k3&!4;h+rr<%N!.k3&!.k3&!0%!Ws7u_I!.k3&!.k3d!<3#<
!.k3&!.k3&!.k3k!<)r5!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!<)qP!.k3&!.k3Y!<2uu!.k3&!.k3&
!.k31!<)ro!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!.k3&!.k3&!.k4I!<3"W!.k3&!.k3&!.k3&!.k3&
!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!.k3&!.k3&!.k4I!<3"W!.k3&
!.k3&!.k4Ls+UN*!.k3&!4;h+rr<%N!.k3&!.k3&!0%!Ws7u_I!.k3&!.k3d!<3#<!.k3&!.k3&!.k3k
!<)r5!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!<)qP!.k3&!.k3Y!<2uu!.k3&!.k3&!.k31!<)ro!.k3&
!.k3&!5JU6s2G%j!.k3&!.k3&!6,$<s1eVd!.k3&!.k4I!<3"W!.k3&!.k3&!.k3&!.k3&!.k3Y!<2uu
!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!.k3&!.k3&!.k4I!<3"W!.k3&!.k3&!.k1P
!<<(Q!.k3&!.k3Y!<2uu!.k3&!.k3&!.k31!<)ro!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!65*<s1eVd
!.k3&!.k4I!<3"W!.k3&!.k3&!.k4Ls+UN*!.k3&!4;h+rr<%N!.k3&!.k3&!0%!Ws7u_I!.k3&!.k3d
!<3#<!.k3&!.k3&!.k3j!<<)6!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!.k3&!.k3&!4;h+rr<%N!.k3&
!.k3&!.k3&!.k3&!.k3d!<3#<!.k3&!.k3&!.k3&!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!.k3&!.k3&
!4;h+rr<%N!.k3&!.k3&!/ppXs7lYH!.k3&!.k3d!<3#<!.k3&!.k3&!.k3k!<)r5!.k3&!.k3&!;Z]p
s,6r0!.k3&!.k3&!<)qP!.k3&!.k3Y!<2uu!.k3&!.k3&!.k31!<)ro!.k3&!.k3&!5JU6s2G%j!.k3&
!.k3&!6,$<s1eVd!.k3&!.k4I!<3"W!.k3&!.k3&!.k3&!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&
!.k3&!5JU6s2G%j!.k3&!.k3&!.k3&!.k3&!.k4I!<3"W!.k3&!.k3&!.k3&!.k3&!.k3Y!<2uu!.k3&
!.k3&!.k30!<3#p!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!6,$<s1eVd!.k3&!.k4I!<3"W!.k3&!.k3&
!.k4Ls+UN*!.k3&!4;h+rr<%N!.k3&!.k3&!0%!Ws7u_I!.k3&!.k3d!<3#<!.k3&!.k3&!.k3k!<)r5
!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!!!#us+UN*!.k3&!4;h+rr<%N!.k3&!.k3&!.k3&!.k3&!.k3d
!<3#<!.k3&!.k3&!.k3&!.k3&!.k3&!;QWps,6r0!.k3&!.k3&!.k3&!.k3&!4;h+rr<%N!.k3&!.k3&
!/ppXs7lYH!.k3&!.k3d!<3#<!.k3&!.k3&!.k3j!<3#6!.k3&!.k3&!;Z]ps,6r0!.k3&!.k3&!<)qP
!.k3&!.k3Y!<2uu!.k3&!.k3&!.k30!<3#p!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!6,$<s1eVd!.k3&
!.k4I!<3"W!.k3&!.k3&!.k1N!<3"Q!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&!5JU6s2G%j
!.k3&!.k3&!.k3&!.k3&!.k4H!<<(X!.k3&!.k3&!.k3&!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&
!.k3&!5AO6s2G%j!.k3&!.k3&!6,$=s1\Pc!.k3&!.k4H!<<(X!.k3&!.k3&!.k1N!<3"Q!.k3&!.k3X
!!<3#!.k3&!.k3&!.k30!<3#p!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!6,$<s1eVd!.k3&!.k4I!<3"W
!.k3&!.k3&!.k1N!<3"Q!.k3&!.k3Y!<2uu!.k3&!.k3&!.k30!<<)p!.k3&!.k3&!5JU6s2G%j!.k3&
!.k3&!.k3&!.k3&!.k4I!<3"W!.k3&!.k3&!.k3&!.k3&!.k3Y!<2uu!.k3&!.k3&!.k3&!.k3&!.k3&
!5JU6s2G%j!.k3&!.k3&!6"p<s1\Pc!.k3&!.k4I!<3"W!.k3&!.k3&!.k1N!<3"Q!.k3&!.k3Y!<2uu
!.k3&!.k3&!.k30!<3#p!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&!6,$<s1eVd!.k3&!.k4H!<<(X!.k3&
!.k3&!.k1N!<3"Q!.k3&!.k3X!!<3#!.k3&!.k3&!.k30!<3#p!.k3&!.k3&!5JU6s2G%j!.k3&!.k3&
!.k3&!.k3&!.k4I!<3"W!.k3&!.k3&!.k3&!.k3&!.k3X!!<3#!.k3&!.k3&!.k3&!.k3&!.k3&!5AO6
s2G%j!.k3&!.k3&!.k3&!.k3&!.k4H!<<(X!.k3&!.k3&!.k1N!<3"Q!.k3&!.k3X!!<3#!.k3&!.k3&
!.k30!<3#p!.k3&!.k3&!5AO6s2G%j!.k3&!.k3&!6,$<s1eVd!.k3&!.k4H!<<(X!.k3&!.k3&!.k1N
!<3"Q!.k3&!.k3X!!<3#!.k3&!.k3&!.k30!<3#p!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3U!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k1N!<3"Q!.k3&!.k3U!.k3&!.k3&!.k30!<3#p!.k3&!.k3&!.k3&!.k3&!.k3&!6,$<
s1eVd!.k3&!.k3&!.k3&!.k3&!.k1N!<3"Q!.k3&!.k3U!.k3&!.k3&!.k30!<3#p!.k3&!.k3&!.k3&
!.k3&!.k3&!6,$<s1eVd!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3U!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k1P!!*%Q!.k3&!.k3U!.k3&!.k3&!.k30!<3#p
!.k3&!.k3&!.k3&!.k3&!.k3&!6,$<s1eVd!9aFMs/uFH!:9a0!.k3&!.k3&!.k3&!.k1N!<3"Q!2fhY
s7cSO!;ZZ^s-<Yi!.k3&!.k3&!.k30!<3#p!.k3X!:'Ra!;ZZ`!13cPs7QDP!.k3&!.k3&!.k3&!6"s<
s1eVd!:U!Ds0r'Y!8RV(!.k3&!.k3&!.k3&!.k3&!3H7Ss8E"\!:p0Qs-s(o!.k3&!.k3&!.k3&!.k3^
!7h,B!1j2Ps7$&P!.k3&!.k3&!.k3&!.k3&!;-?@s1A?b!;HKn!8[\.!.k3&!.k3&!.k3&!.k3&!3lOP
s8W+d!:BgGs.KFt!.k3&!.k3&!.k30!<<)p!.k3b!6tQ>!29JPs6TcP!.k3&!.k3&!.k3&!6,$<s1eVd
!;QW;s1n]k!6Y>t!.k3&!.k3&!.k3&!.k1N!<3"Q!4DmPs82hg!:'UAs.fY"!.k3&!.k3&!.k30!<3#p
!.k3f!6,!:!2]bPs69QP!.k3&!.k3&!.k3&!6,$<s1eVd!;li8s24or!5nip!.k3&!.k3&!.k3&!.k3&
!4W$Ps7lVk!9X=:s/,k%!.k3&!.k3&!.k3&!.k3h!5\^8!3#tPs5s?P!.k3&!.k3&!.k3&!.k3&!<3&6
s2G'"!58Em!.k3&!.k3&!.k3&!.k3&!4r7'rr<&Ms7ZJm!;uis!:'U<s/?"'!.k3&!.k3&!.k30!<3#p
!.k3k!5/=3s/Z4Qs5a3P!.k3&!.k3&!.k3&!6,$<s1eVd!5&9P!9F3ls5a64!.k3&!.k3&!.k3&!!!#u
s+UNe!65'2s/l@]s4I@P!3lNU!.k3&!.k3&!/ppWs7u_I!6>0'rr<&Ms8N&%!8%81s.KFE!.k3&!.k3&
!.k3j!<3#6!/(@Ps1/0P!9X?js5sB6!.k3&!.k3&!.k3&!!!#us+UNf!8@GQ!:BgWs02R_s474P!3lNU
!.k3&!.k3&!.k3&!6P;crr<&fs8Du'!7h,-s.]RG!.k3&!.k3&!.k3&!/1FPs0r$P!9aEis6'H7!.k3&
!.k3&!.k3&!.k3d!5nj,s0Md`s4%(P!3lNU!.k3&!.k3&!.k3&!6YAPs8;o(!7_&+s.fXH!.k3&!.k3&
!.k3j!<3#6!/CRPs0hsP!9sQhs60N8!.k3&!.k3&!.k3&!!!#us+UNi!5ed*s0_pas3q"P!3lNU!.k3&
!.k3&!/ppWs7u_I!6bGPs82i)!7Uu)s.o^I!.k3&!.k3&!.k3j!<3#6!/CRPs6BUa!6tPh!:'Wgs69T9
!.k3&!.k3&!.k3&!<3'!s+UNj!5\^(s0r'bs3q"P!3lNU!.k3&!.k3&!.k3&!6kMPs8)c*!7Lo(s.o^I
!.k3&!.k3&!.k3&!/LXPs2b3?!:Ts5!:'Wfs6BZ:!.k3&!.k3&!.k3&!.k3f!5\^(s1&-bs3gqP!3lNU
!.k3&!.k3&!.k3&!6kMPs8)c+!7Ci&s/#dJ!.k3&!.k3&!.k3j!<3#6!/LXPs0_mP!:0]fs6BZ:!.k3&
!.k3&!.k3&!!!#us+UNj!5\^(s1&-bs3gqP!3lNU!.k3&!.k3&!/ppWs7u_I!6tT!rr<&Ss7u]*!7Lo'
s/#dJ!.k3&!.k3&!.k3j!<3#6!/U^Ps0_mP!:'Wfs6BZ:!.k3&!.k3&!.k3&!!!#us+UNj!5\^(s0r'g
rr<&ts4@8N!<)r&!3lNU!.k3&!.k3&!.k3&!6kMPs8)c*!9O4\!:TsDs/#dJ!.k3&!.k3&!.k3&!/LXP
s0_mP!:0]fs6BZ:!.k3&!.k3&!.k3&!.k3f!5\^(s1&-bs3gqP!3lNU!.k3&!.k3&!.k3&!6kMPs7u]+
!7Ci&s/#dJ!.k3&!.k3&!.k3i!<<)7!/LXPs0VgP!:'Wfs6BZ:!.k3&!.k3&!.k3&!!!#us+UNj!5\^'
s1&-cs3gqP!3lNU!.k3&!.k3&!/ppWs7u_I!6kMPs8)c*!7Lo9rr<&orr<&qs/#dJ!.k3&!.k3&!.k3j
!<3#6!/LXPs0_mP!:'Wgs69T9!.k3&!.k3&!.k3&!!!#us+UNi!5ed)s0i!bs3q"P!3lNU!.k3&!.k3&
!/ggWs7lYH!6bGPs8)c)!7Uu)s.o^I!.k3&!.k3&!.k3&!/CRPs0hsP!9sR`rr<&+s69T9!.k3&!.k3&
!.k3&!.k3d!5nj+s0Vjas4%(P!3lNU!.k3&!.k3&!.k3&!6YAPs82i(!7_&+s.fXH!.k3&!.k3&!.k3i
!!*&6!/:LPs0r$P!9jKhs60N8!.k3&!.k3&!.k3&!!!#us+UNg!6"p-s0Md`s4..P!3lNU!.k3&!.k3&
!/ppWs7u_I!6P;Ps8;o'!7h,-s.]RG!.k3&!.k3&!.k3j!<3#6!/1FPs1&*P!9aEis6'H7!.k3&!.k3&
!.k3&!!!#us+UNf!6,!/s02R_s474P!3lNU!.k3&!.k3&!/gjWs7u_I!6G5Ps8N&&!7q2/s.TLF!.k3&
!.k3&!.k3&!.t7Os1/0P!9O:Rrr<&=s5j<5!.k3&!.k3&!.k3&!.k3`!7UrJ!;?Hbs/c:]s4I@P!3lNU
!.k3&!.k3&!.k3&!65)PrrE)#!8.>3s.B@D!.k3&!.k3&!.k3h!!*&7!.k1N!;6?l!6P8^!9=-ms5X03
!.k3&!.k3&!.k3&!!!#us+UNb!6P97s/?"[s4[LP!3lNU!.k3&!.k3&!/ppWs7u_I!5nlQrr<%t!8IP9
s.'.A!.k3&!.k3&!.k3j!<3#6!.k4L!5ecT!9+!ps5<s0!.k3&!.k3&!.k3&!!!#us+UN_!6kK=s.]SX
s4mXP!3lNU!.k3&!.k3&!/ppWs7u_I!5\`nrr<&^s8E"q!8[\Hrr<&ns-j"?!.k3&!.k3&!.k3&!.k4J
!65&V!8ddrs5*g.!.k3&!.k3&!.k3&!.k3Y!7(WAs.9;Vs53jP!3lNU!.k3&!.k3&!.k3&!5ANVs8)ek
!9!nCs-Ne<!.k3&!.k3&!.k3&!.k4G!6kJY!8ISBrr<&Ws4dU+!.k3&!.k3&!.k3&!<3'!s+UNY!7LoI
s-E`Rs5X-P!3lNU!.k3&!.k3&!/ppWs7u_I!4i0[s7QGa!;lcr!:9aTs-!G7!.k3&!.k3&!.k3j!<)r6
!.k4A!8%7_!7h/%s477&!.k3&!.k3&!.k3&!!!#ts+^TU!8IPP!07-Ps8;ls!:TrV!3lNU!.k3&!.k3&
!/ppWs7u_I!42aas6p#T!:9aZs,@#1!.k3&!.k3&!.k3&!.k4:!9O6f!7(Z-s3C[s!.k3&!.k3&!.k3&
!.k3G!:9aY!/1FPs762P!3lNU!.k3&!.k3&!.k3&!20Ams5O*2!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!<3'!s+UN*!.k3&!3lNU!.k3&!.k3&!/ppVs8)eJ!.k3&!.k3&!.k3&!.k3&!.k3j
!<)r6!.k3&!.k3&!.k3&!.k3&!.k3&!!!#ts+^T+!.k3&!3lNU!.k3&!.k3&!/ppVs8)eJ!.k3&!.k3&
!.k3&!.k3&!.k3i!<<)7!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!3lNU!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!!!#us+UN*!.k3&!3lNU!.k3&!.k3&!/ppV
s8)eJ!.k3&!.k3&!.k3&!.k3&!.k3j!<)r6!.k3&!.k3&!.k3&!.k3&!.k3&!!!#ts+^T+!.k3&!3lNU
!.k3&!.k3&!/ppVs8)eJ!.k3&!.k3&!.k3&!.k3&!.k3i!<3#7!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!3lNU!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!3lNU!.k3&!.k3&!/gjWs7u_I!.k3&!.k3&!.k3&!.k3&!.k3j!<)r6!.k3&!.k3&!.k3&!.k3&
!.k3&!!!#ts+^T+!.k3&!3lNU!.k3&!.k3&!/ppVs8)eJ!.k3&!.k3&!.k3&!.k3&!.k3i!<<)7!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!3lNU!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!3lNU!.k3&!.k3&!/gjWs7u_I!.k3&!.k3&!.k3&!.k3&!.k3j
!<)r6!.k3&!.k3&!.k3&!.k3&!.k3&!!!#ts+^T+!.k3&!3lNU!.k3&!.k3&!/ppVs8)eJ!.k3&!.k3&
!.k3&!.k3&!.k3i!<3#7!.k3&!.k3&!.k3&!.k3&!.k3&!!3-#s+LH)!.k3&!3lNS~>

%%EndBinary
grestore
np
.72 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
52.08 240.6 mo
52.08 149.64 li
1 /0 /CSD get_res sepcs
1 sep
@
65.16 238.44 mo
65.16 197.64 li
@
92.4 240.6 mo
92.4 200.28 li
@
117.36 240.36 mo
117.36 204.36 li
@
139.44 240.36 mo
139.44 196.68 li
@
183.36 240.12 mo
183.36 132.12 li
@
329.04 99.72 mo
329.04 3.71997 li
@
197.52 4.67999 mo
329.04 4.67999 li
@
198.24 99.6 mo
329.52 99.6 li
@
51.84 240.12 mo
184.08 240.12 li
@
53.88 101.4 mo
53.88 5.40002 li
@
53.28 5.64001 mo
182.64 5.64001 li
@
182.16 51 mo
182.16 4.68005 li
@
182.64 100.44 mo
182.64 42.36 li
@
111.12 97.8 mo
111.12 59.16 li
@
108.96 100.44 mo
183.12 100.44 li
@
.48 lw
198.96 133.92 mo
329.76 133.92 li
@
.72 lw
199.44 240.36 mo
199.44 134.04 li
@
329.52 204.36 mo
329.52 133.32 li
@
199.8 240.6 mo
199.8 180.6 li
@
199.68 240.12 mo
330.72 240.12 li
@
244.56 237.24 mo
244.56 193.56 li
@
281.76 237.24 mo
281.76 191.64 li
@
%ADOBeginSubsetFont: FAAAAA+*Times#20New#20Roman-Bold-9420-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (FAAAAA+*Times#20New#20Roman-Bold-9420)
%%Title: (FAAAAA+*Times#20New#20Roman-Bold-9420 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /FAAAAA+*Times#20New#20Roman-Bold-9420 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 14 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 14 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
4 <001C60D8A8C9B6557A3F5951042464B1D246E30FBDA051ACB98B469EBA5D4
8661B15A7C5025D0BB25C220213A9864F59C742124172ECDB9E806D2BE67D230
22935262BC50477489657C9C9B1A21CE97DFD08B9F6D6F5C86ADA0970C34EAEF
480FD21FEC3D061D95E8A60B820C57FEC5B904CB2381EB5289EF7AC4169443BD
E09391C2298775F6864BFDB56875DF4DE591278750BD3DBD554ED8957A1C625D
C0125AEFD175EFDDD6A131FCA9DA81A0B548658A0B7268C6E> |
8 <001C60D8A8C9B84AC0E3581CBC199972E2AD8EDA14C4BC6E89B14207598DB
9D6FEF7B4CF8CD71CBD236967E667E1C2648A5EC6C3F64A69ACC5B377B3EC022
ADD0ECC859143607F79A60B3447A0A4CC0F687322D5F1D5F5D31486FE113A4DB
638C34BAC0CC38BB39ACE0D88C080CA09E316388A673D245012D2878C71240FE
13AE7ACFB15C53394738F025CC8AA967DCC12435735D98347EDF956D8DBF1EC7
2E2776606153957415572EB7C59BA> |
12 <001C60D8A8C9B6B0D5DAE526074F5BD6CBDAE66756BD53CB8074362D2756
7FCE457430761F5DA752AA6F5B209BD2E9B07DAAD1EBD4101B7132918BD66774
0DB0747AF6371A367F171BCA1FF64D761B8221649B778E1CC34480F666013054
1FC29661B3CB770E667FFF810E8FEA96034A0F2A276A0A67402B28C9AF4AA806
490F5591318B063902C89459577DD2EB9813BE16BDB3B21C86C3E865DAC41F03
FD98DD54604B623D0DB3B2DA9775BBF5F0E4794BAB86B2CFF6A79CEADBFBE5D4
880B7DBA58903F57D2252CD88292469A3FDEBA8A729009893CB5B0C1EE53123B
EB281ADD255FE7635716DA80B0E00FE5660FDBFA59099F6A964439A8B308CDFB
37253CB8E25BAA3275D4E76C629903F65849DBF55E452FA5654CCDBA07FB0C31
412915126317FF2124D0534694375C831CEB2C54B44D65E4270AD55E4B8B7EB9
EA6D2725335CB0353B6E61E72C399ED22C56419E08EADD4DCFAF8107EF06C317
F59C391984CEBA9F4126AED1B15EE2620629D700F6E73DB402950CFD9A831EA7
62CE37D3377215> |
5 <001C60D8A8C9B77D5F9B8BE974C65808693DCEF8E645FC7948FF2F8630898
F5FA98CA00A8E47593D7AFB1836FD830DB90B0D69CC83A26CD19CF5A084D0771
B57DCC317A6CBC40370A4F9A4F5848760341F4691B51AE8B19D1177E97C004C0
A93A4E8329D3F003371651198D8B7DCE5E15227B9D66D9D7DA7F7B16DCE07159
C92CEF1C636A2FB52D2B660A40BD60DC8492A0D348E9E4852E6573DFD7AAB547
DA38ADF24081467AA468EBCC7F1CBCF4EFAD26A2EE6A3820D965EDB0578AFBD2
7271AA9F1F93B3E36E680BDE861D147E43EED8D> |
13 <001C60D8A8C9B8707C25> |
11 <001C60D8A8C9B74E61510CC193566CB567C797E366803EF5A71A543815CC
FCC3F0A096E18A1183C8525B2E5C53BDA4DB180FE8EC80353E6A215EE354F366
158CF7CE6EA532073B12D421D7CC74BD0ABEAFDD73AF266280F99F835EF73BC3
884BBD6B12E760A24AF5CD08D73D3E7A60A59478FA0A2AE7DB3C2AF3F2A9A55A
23> |
10 <001C60D8A8C9B864C9F3FACCEAB4A023256A4C3F6C3D4E8183BE79E3558C
8429DC3041C898E66A68F3D3E4656614D5D18549FE7C76345750F502C87A4848
1310FCA1278E126B5B26F04DD1F3F29B94AC53A16B83941188891D4B6EA19BE2
50EE26BF6EED1C16E36C5B764DC3118A74C7042FDC63954D5DA25DB458AC0AB0
B0248D2C29D0544ABBD611B7F20888ECEF879028615CA021893787F3E3E492C0
40BFA68A55AF9CEDA241C5ED2031D42EA6B5614BDDADC219DBAAFC> |
7 <001C60D8A8C9B7635685F8440748B93B9067098B46B0E6A797CA1E9959EEC
001DFC71A539AC8466DD7AB47BEB107C806CCDEDE1417A2E5F7B1E5B48EB9D3F
BA8599862DDD4B5FCDA669DAFE5AF2DDD12F7172AFAD7A02E1348C7DAE934C62
DFD066F06399DA26245C3248CC514426A12FDCCCCC74F0644316B2AF969E806B
6D8FD8F2EC1CD1AE76C5F878E1B1AF0B74DA4E5FCCD2B931BC0E32285249D675
DC2C38BFB0ACC98FAD8A818C4EF2519E6624C0D9EE034C8E13F5FB023A0ABEF6
99C65C8913DAB03E87B6A63DFA4129A45CCE10EE572E4876B8F34661E937B25C
3FDA0FC75FEB1859E452EE054F05E5CF567C638377E5D0836F932D88EF52109B
936C265CD84FC11641191A52BBBCB86E5FB69DF509B1CBB28975ADD959C> |
1 <001C60D8A8C9B75D88D21E2BC41326482632C91A46F98984B199784E02EB3
9A35B536C499EF05C3BB05F76B729FE371077171A4158E3F6A3FAAFF1B6AA2BF
23570DC3BE133DE3ADE1D1684732E87CB75623326CB35BE8EC33247F7F6F9B1C
B56390E14A0B6AD12248D5D08C13A1008D69DAEAD83400BB222A554FB> |
9 <001C60D8A8C9B85D12CBFBFD31CCC86CADC2E3261362D9754492DE98B6705
5EE5C557469DA0E0FD922CCD86DCA5DA05AF78D5546A3D52D5143A3094269E70
B88AB58BF35B23404C77C4D4E8E354A272425CD4DA3F42F496AEBCE9A8B0440A
1903BE65E9E7A8C1A6DF9AC94916713988E709B48C013A68A2C2BE0021C1A67B
BF110> |
6 <001C60D8A8C9B7402F214119160289586C35C295483D32B9248F1981939D4
635BB69A1636E09401FA1E376ABAB7B6ABD635B6D6D7F343EA45A71D456AB94A
EA0C933414AC90049D873C56025F99617808429B8CD4B1A7805E1647A98BB93D
3E312E7A3C4E849E8F85E944C685668A8DEDED4095DB14ECA8A4A2954EACB578
F93C8E76259E976DB650D376F512C1E17D767FF928A3841EB627436A91885D07
15883A332BBD36667FB58D758884DAECC1E3D42F81173CC2459BC2AE5BA80F5E
ABEF0ED3BD65A6CE0683884B79D239EC6D2C2B25C4E6F9AB6249D8050BD02ED5
64F1E49C0C74F8941F2E9818198C690256EBAE5AA9242465BD4B629CB38E85E6
1D9D866DD4B71B0CA0FF89B4ED9E68B18C46CEC526AF11CA2D753C79ADA42B28
8C551A64DCFC61499928DEFF70409DB3FA2E0> |
3 <001C60D8A8C9B7A3FABD1EAE17872F3EE028CB721D4161E5B5334DC234CB0
BD69F8AB84DA6698E822D8281D5CA986311DBE559A8BEE5F015143AFE1437F59
9E37113CC71DB667A861C857424F1197BD45027A5400E190FCDF0B1C3EF576A9
DEA4B674BEB026C3FBB777E253AA86CAE2A4DD44A341189F6D843347C65FD633
E673323498F4A8102A8993DE4AA558195E035E0FC24321EF0A0560169AB8CE62
D29D20E39BFC44689EA4A3B3FB383B20EA838C6E8F9BD413A7C2CEA6413DAB77
E0177075B96F1ACE00DCDE4F2F9DD5D67F0798A072D224CCD25A9245A5205742
521C0E9B432CBF72D> |
2 <001C60D8A8C9B7A8F22C84D4E0548CBEA23BCC679A4BF92287068ECF6AC34
9F2B1D64A8A867DC9CCA7A5494999145C13D033AEF37B04656B22EB41EB2EF41
F51B49E383B61EFB4ECAEE2CAF0A01778821E8B0A5D2ABD568600D38D82DCCE6
03C514DDCD990C9F58351E12FC94227D0E94D18AF7F0E572BCF8E9A9374BA856
F73B7BDBCD58453688DFEAB> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /FAAAAA+*Times#20New#20Roman-Bold-9420-Identity-H /Identity-H 0 [/FAAAAA+*Times#20New#20Roman-Bold-9420] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMH+*Times#20New#20Roman-Bold-9420 /FAAAAA+*Times#20New#20Roman-Bold-9420-Identity-H findfont ct_VMDictPut
FZJXMH+*Times#20New#20Roman-Bold-9420 [8 0 0 -8 0 0 ]msf
28.8 13.31 mo
(\000\004\000\010\000\014\000\005\000\015)
[5.41638 2.34436 6.67236 3.6084 0 ]xsh
32.88 21.12 mo
(\000\004\000\013\000\015)
[5.43115 3.74316 0 ]xsh
%ADOBeginSubsetFont: GAAAAA+*Times#20New#20Roman-9426-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GAAAAA+*Times#20New#20Roman-9426)
%%Title: (GAAAAA+*Times#20New#20Roman-9426 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GAAAAA+*Times#20New#20Roman-9426 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B74E615E754D6D14CF4E9160E70A930458C19E85A57F6E3D2
2B86C2714B17D7901CD107BEE69B7508716A372186CDCABE5A95D864BB6D8B6D
1017D20757306FBBF1F23160E2B48C2130401C02D49192865E9A519D1710C94E
02799999C6137CC75F784C5A1005380B997A1995102E30A733B71C695713AA8E
B482E2A55A0705C4C4349C9955676A92520C9DF04153E4BD43D2C3F441F80136
F26112068370A3685B9DCB13F30555D9A6EFB37ED6C22C25A1457B6CCFA2BD45
DBA94AF94697E23E199EC704BEF40A3D2DF3FF065DED87C3CF76A7987C234855
6A2C5DB3C37397982B36DF068CB4B30E869320C8471FD3619A2D48F386F2B954
BFFDBC24EEC227706EDBA772DF82A1875D5D1887A70985F4DA752414A677F> |
2 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GAAAAA+*Times#20New#20Roman-9426-Identity-H /Identity-H 0 [/GAAAAA+*Times#20New#20Roman-9426] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMI+*Times#20New#20Roman-9426 /GAAAAA+*Times#20New#20Roman-9426-Identity-H findfont ct_VMDictPut
FZJXMI+*Times#20New#20Roman-9426 [12.5 0 0 -12.5 0 0 ]msf
10.8 38.27 mo
(\000\001\000\002)
[5.76248 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+*Minion#20Pro-9433-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HAAAAA+*Minion#20Pro-9433)
%%Title: (HAAAAA+*Minion#20Pro-9433 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HAAAAA+*Minion#20Pro-9433 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -1119 1.00992e+08 1.17835e+08} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 63 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 63 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
51 <001C60D8A8C9B80527E02950AE0F0FC034D28AA5EAD708F3ABCE8CC014A0
E6B4EE4C3DCDB08005FCE46EB7A465AD1B36ABB3F9B222BF0473F3FF47C7E172
82632839A51CD7A6186CBE9388D4A920D83B44C0E63BF8D88BEAF185FA20E2C4
A01887A30C3A93D90B5019E48E367D1712987805A3B886941702212566894B2C
2ADA3DEF53AA65FE6E0D13FCF37A556089C8E33B2B091938524BFA8D9CC67FA6
BAD12A9C525CF392AA3C3B2B360264CFA7768DC6DF3551F95C66B7313F9D4E5A
10472C0A9A37B7> |
32 <001C60D8A8C9B7171E844A3DD9D9978F742F658E3B589BB6E7E0DF4284E4
425EA2B42E489E1D709AC89F8981A2FDA09A98AEB915223FED4E9296417C960B
B216173C5DFF1D4990F1FBF266AD2149D6C1052FAB4157327B994CD47663EE58
6FA8C7471D481F748F9804AA1CE464EDA001B00B97EAE539E77C06CA4574A4A0
5854833052404A57C7ECF1CC7F718673B23318987FFD87F3295BEFD682AF7A33
07AEA94EFB36FD45DD1D623C1425B8B382C93491BC2997BDF065051C5A9299AD
0D680B639B292E138189F84E6EC1C7092A13F70713C0FEF05FB53290DB7B4277
D3505E625E60B0633D5007> |
46 <001C60D8A8C9B8418620FC5E74D06801DC72D2FAFFCA35958EA9B88924AF
A1A9566073061EC813CA312C75EE024ED9B66F1DAA2B6273D6B66750F4BF69E1
DCAC7B2E5229A745BAD97DC92EF3161B0FCD0CA1901649A82A97ED5B18121876
E7C6728BB921A7BB8A688C2BFB2AC2AA92AF7D83AD2522DD240BF713DCB50016
3964642DB3D8CDBC66F04CCE6C536A15817135> |
12 <001C60D8A8C9B81005B8C18A6D18D1B995FDD1B9E30188D7D5560F61F42C
152446BF9EE1599B0614CA9894E22857AE7AA99091136850> |
20 <001C60D8A8C9B7BEB17DC713F074C16ED0374F20AA6CACBE2AB89957033A
98822F795B522EA5788140570B036CDB60F6D74899881F5A7EBD90F2056AD2D8
5E2FACC5F0AE741E6398A7858F4613D99052C5858B3F66B1ADB1EFF30FAC857E
EB73DA3873BF5B64173D9BD9A87FC0AD88E4D3763D01B150CD27D7> |
56 <001C60D8A8C9B7635698866C9698AB263D0ECB8E04C19BBF872AFD623CC0
25C41BD84A5D6932938B81DA2DC544024F2E2F706F47999242FEEAF45428D2A9
16E0554666565B79945B2E84A53414A9D1A5B02AEEDCC2818825AAA1DE0591B6
5B412B4F89B6114AA9FA037686D879128C6CBF262880B6D0FD235DA47E513C11
05CBA1334722D1BD04A2540F03D8843AD262F1CA29840543D1F369A3259138CE
DE68B791A06783EA49827159616E706D87CC41F3DABED52D31AD3396F2E28326
A8FCF39FDB9AB30FB61B2AF36E3D051C130AF9C01189C043AC655BF15AAD13A7
789ED35FAE7497DDFC81AD481BEB1ED6176CB0B72711353B8ACE770BE113095C
55D59CE4311FBC9540F1B8> |
38 <001C60D8A8C9B86B643B174DF53198D2421D5BEC8975CA255DC9A8E972C4
51F0CA644C675E50E89EA6C21E062303A53B12BCAA2BCB6CADB42B77D5347CEF
FC73426CD1E80A23EC7E782AAD60DD35F6CC20EF508E8AD466EC8CEF55E05F88> |
24 <001C60D8A8C9B7D98F7555B943232823B8DEDAEA5E15B68442263CCC450E
1EAA12C3AE4A14F8EBFAD3F687D25FD99BBE12A55147F788F6325F1615EAFBA3
F4F693CD52487167BE22F9DC995EE618464FF0298B22506372144B61C476C25E
8844A1F18734613754786BF4B1F48342487A3487A705DA6BE997CFC4B94D263E
59ED46893AC3872A3BF4FBB8F5EC518C0E5263C668F724480322A357DC4EB6AB
DABCC3655CEDC02D7B416F3E6CEA6631DCC3A57A06E1F370913896DF3A64BFC4
EE121E26640698DF3667E503B1DED65F5A3FA8D2D1CC909DD4904C2BD9E19E> |
54 <001C60D8A8C9B7A1575E212A8D6F25E0AE41EC61D0DE483E5A3ED30178B4
BB8FABDB793BBBFBB6273A33AB7F7CBCD7728C90D8A4DA8513AFEEA31035058B
29A32358E7F67D6BB5D597290BBAF0B9879AA93431C195BC5C0072B66F10C1AD
40A7DCB43B3B71B056BA0BE502132A6DB69C498128830E7C20B3A721E9B15839
A7BDB9703DE366E774651B6B59DDF79E6E5CEDA68D2346FCE97FF07DCF09BDCE
39584AC88D52E62DEC811E9F3BCC054ED65D13D8B7FC4DD9EC80> |
42 <001C60D8A8C9B714A577D6ABF2887844E2A9E5E335518591E700D0E281B2
587FC5321A7136FDB1AC543ED412ABC2427E800AB45CB0569F1F6BEE28DB76AE
C9D0F6AB68EB5DD5F22BCB4EC5A005FAA390FFAB7531067AE644A6136ACF7AAA
D8C7E5A99978652452E5BCEFF759EB450DBFFDEF6DC2C18F2854B5137AE44703
90D5C5BDA79ACC9FF7DE4D3C58A782288101C4633694F9D012E119E5D820F834
E81B5A55E8F437EB0B46487DDE9DAD5510FCA42C5F2335ED92E4417E8C23DD20
08733D90C042FA7B412AE0DAD17158ADDC60E3230FBBD3199D65D085CD8E2977
8019F0EC90> |
52 <001C60D8A8C9B8714D28AE7F4BBE72123D41FAB70196B8856E4B25779C29
5DB6167DE6B12FCA316A8028DE5515EECC00A7742FF5A61E5F3F4DDA9639B9DF
9A029505662271998491044380D0B19FCAC478169C511868A7779E934E6F73C0
CAEC76A12CB4AEEE1A198E0F68DB7F781FC34B92329B33421950511D986E13D2
3B21BB7E53B5AE2D6483653FB61EB36F8DC1A8BFDD8F5FF78BE8EB81673140D4
F9562536996A14B1A18C26299E35C6709B38BD> |
36 <001C60D8A8C9B85D12CB815DBAF4323A0AF4DD8966F662A6BF5871FD8FBC
A6E0400081735E1D54144994A35DBBBBA1F2655C084F479BAC96246478449F74
64DD73B088A03C4A8B1B424CAF95F70B1C02E60567BAD1D3B8D29DA6FB0779CA
CC0695C4E30B09CF83BE5D5BC1D94796BBD20862E1EC1F05432714E9BF4F7E2A
95AB54FB053319A32F425C47F3E8B9C942138DB7677FB2B56DB5CAA419424CEB
FB45E4> |
41 <001C60D8A8C9B6079F6D519A5CF9549D288C3B6F65BCFD886C4BE1B42A20
10AE63BCB4BE28C93D968FE80AF0093D1365615130E2876EC2AD1463A433BBC0
3F94F3007C9168D03C65D5BDB25D778640F4FEA2E79E698DABB5707847C0005B
791A61367107CE880196B3469BD8E0C8BBBFDF2011FA1F2D57C5DB645F048E71
4846AE812B7ACB87F93912516972F4CE2082BFF1D2AFF66E2C3DAC586D48EE8F
2DEFF90E8553069D9A7DE4DD5CACE1FC3E6FC9D71E6B0E995E9C7F3E202F3353
C5A3EA8317258481372CBED05FA2D77D87C206CB010EDDB3C08E01462DC10DD3
642364301F22EF0DF992234D9BC3BF963E591BC84522582A4A18C124F2ED7F9C
71F64A491C7D32263CDB40ED0334715CF148C9D859B5F0C5965FAA6104A0CFBA
8D4C7F678694E9B0FF362B1E3116BBB86F90BD0874587A8AE8056C47D8823EE8
CBC53D4401A0C5F398EFE1C9A338CB18B3D4A1C26A3A935C2F6F088449CCCAA0
464D80DB4763AE2FCA9B4409ADB9> |
25 <001C60D8A8C9B75378C1DB575B9A20A1C64C4F2AF6C9D5EDC929E0812994
1A4EC7BAFEC20662D392883474A560CDE51CB8D12FD13A9D8B742C52D030AF51
5DAB5FAB553B7D450025D7C792E4E1E5E301F80D7114BA5FC59B94C9029FD13E
320814B4B16C93132E493D5F0DCEB75B132814EB9DD1CF80479962B2779C1800
F9CD06B8C504356F91C1184EC2C96448419F99F93027FA1307BCB1A815AC238B
052D86EB586FD92E8F0B819669F19DA87D931C94145A6B7279BCC790ED11962A
A1EAC9ED636F9791415076E054E441F8B4C4686F23EE854DEA725C8C45E79F12
EDC75E40A74F7E5F5E909B0191B0D1B7E557A18DDDF1F5F5529FE7C6BD33> |
58 <001C60D8A8C9B74969EE2D06D438F003BCD8E0D2E3618D6F42B763A07BB9
8B9C10A9911F285DFB57D18F8B01954F2791D1025DB48F57C433F6F4A0091C77
B9350C930772F56D1D59D9103C7A4A0C41C8C3423FC9070EA33ABD4FC4A8A63F
204145B67FAA24C148DCCE29BDDCFEC0496E1F4F398C7F1A3D1235FB3AB5BFD6
00B553F475AAEC17C7887CADA12C6AEC132306DA0A21A8464DBF65B1A799BB4F
ED37BE9E644D4E0C96A4FFEC3E6A2C440ED5FEA648> |
21 <001C60D8A8C9B653D76D519930D7DBAAAAF6C406565A67904B8B879D1245
8B4E663D5D8104AF22697968581670B0BDF87972330435228D874E251779D405
EC41153F88E2BD289372E77C871C0552F343DCABD8D0894D5317761D3FEE3FCB
8318EADFE56A9DE68247CDAD93E99036F9F58A19> |
45 <001C60D8A8C9B762800AE17953166B32BA46E619F681ED4AB95651DC64C8
5D728633517936FD37A7DF1AC9093D418A2E1FFA038B4FFB2628E8BADE2C4F1D
CCDE708EDFE2AC4B979AED3DA01D0A012C71038BAB2B399A6541965775048CCA
9F990BD0FDB5DEBE017E5EEF9E0A831CC44963AD835EDEE7343D8922E1A3DFA8
3475247C267663AE2EF67D86E035085F2C0B31248F95C51A1B5397528E0D9CD6
13949747A2277929B9FA81DFD78B907CF7A9FC6DB02B0DA96926D6455FE37906
4E4CD7E59EE96811B3C830C77AD5F985DA98BA45381053F6D8A81058F929359F
ABE0038101CAB75B8BD9536C92719B9C5E1C75370DB5EF7E6168242961814520
7030D4187F7B6E19F8> |
47 <001C60D8A8C9B8327E952B09356DE61724358C8EC0BD18C50D832B97ADD1
8A8757A94F163F4B3504E868DA2C035F980D490682B0C3EF6CD8F01324F86EF3
893F53B8AADCCD70C8283AF5A7BAD188C6223A66DE494268C205906317DF89F6
4ADC3E609A0558823543E9E74226EDA676101C7A1B984DCA39B1CB3DB20B09E8
BF7883B2C9EEA5F22984216447C906367FBCBB9B3500253B9E2F56398EE19C49
459BC2813469056BABED7D56AF798EA0E9AAAECCCDFF3EC45B05D6B1D36BCF13
6702> |
27 <001C60D8A8C9B77D5F94219BE9973AA802965FCD51A5043C20F39F92B966
818F20DF0648AB5EC63C80D753C088F8111D81BBCB382F29FC0453CEB32794C2
83B6A05A0F471949B07E6C23D05CA3F06F780D83EBF5BA83E21F2181A8221B85
BA72E232427F156C2F8F5FADEE2C445DC6448C92B6FF53760926EAFB39610074
B257B64D361E5D4756622F47BCBBC7B5DAB20454D38556C48B7BE7C666B79C91
F41158A37EB333A9A4439F92B268E2F607487739FF35A56266A4992A65F82931
D1435BD56F5AFBF31094B2311F849D39F9E908597301A8530593DD7BDF5DAD4B
A1F086A3EED4A2AAA396C313D8171BEED0C810A3601B874DE4F491B5E0B8> |
53 <001C60D8A8C9B86C35558EA6CF50A11FF8186DCA0E2E6D3A98C5556D957B
D7711F6A56C13EF0D3A1735E73F308D40D6AB9E502E408A592C7DDFEE1F22279
85F132EDFB9EFE2000DD91981C91F167D665E56F38D050EE0BCB5F7CFFD1CAA8
639DB8A1B7747768D37298CEF9B17D61847334852BB86900A5A04B2463CABE55
2588D4525ED9AF1FA7827CB2529F30EF1B7D8EBA459058E40C0B179BCED15F56
30804AC0EDAF27FA18> |
43 <001C60D8A8C9B74F365093C9AB5D90BD8F027FBE6940B122ABFF511D599F
1418A4C5B9C41AFBE227213ACCCCFEE1682BFFF475C5F9C933CCC435EE5277DB
409DD624E155356812EFAD1A87E8A72B2DD4E3B4FBBF4BED823621A725DBA6C0
4E03C909352C15E545811808CA8CBEAC51481878572ABAC32C20F42EF8F75635
97D30243B7FEB75C6D85CE026176DA612231F8F176F29ACD78A72DE3F90348B9
CDF59E304175B4733C15201746D99092FE3EC887F5FE80886633D565977C8D71
7239> |
34 <001C60D8A8C9B747CAEF58C1CD268CF7451EB8C3BB9EC6F69527D6EFA9C7
0F4FF30B97F0680C4DBE4996FF36FBCC5378B69A147D191EC4D6A8FDC1788470
E66AE14B35134E05031783945B33B1F180F815D92A348D1584A8CD4811A72513
F7FD12B54B754BA241E4208AEA430A6FF24655AE875E16F5821E64239EEC1882
27DD232F4B4AFBA1789C458117154E6707CEADC997F5985875684F931D6D6104
6814EC2F6C2A6761376D44B15681A13C1C385F3B6C1839B7EE07D9090ADB2D01
2187423EC7A194DE2A2906FFEA881BC07EC45BA5730E2CBFB06724C20D0B241C
6A7C004A42321EB69EF5876C0F634331F69425F4B7DA34A85C38DDDA01A61055
9C844C57AE44D56D1BA27CAB278B321C1DEF2EBC1987379925E0C11D> |
19 <001C60D8A8C9B6465291F8D7F4B94A28F7D0D820BB0E74A325654E6CB60B
B1C990ED50AED6C00137534F00205C3D59CC520578C2369367D32765C9519C30
7A3C5307077AE9E2C431F8BFD43081AF68E1222AA59333667FD5427A3B22D770
2ED77E7346B0998EF1A5A1B0EB6E3D242F837A4BF6E87C5C3BC65CABD1ADBAFE
A28294CBBA21BBE18A9289DC6DBE0FAB5F39B81A491300AD23C321BB29840A30
1DA855FEE4476339A5FEAE1D381B4A095B768F3193E62E05C285FD525CD0F904
AF84E7BD2BB55D14653D60097A5873102F7C75BA57F9774CB3BFC524AA2A3938
44F8B02F88FD580BD62D7A9D29E1D0372456EF30115297674C5083BB034E2EC1
960954DBA4B568075DAEDD3E936BB7E5E0CB512217FC5D32F74C> |
49 <001C60D8A8C9B6E22489EFB8E791B7BBE1FD49B62DDFDEA3DF2F00D013A9
33E93D012E140CDA4EB1266208EFE7FB28B188B4A6F31897568D8D6B3BFDF854
DDA28E883F6FB7B5A42D9F72BB4D8C8E7FFF4070B298643932E6EBA9466069A3
D5F60C0C83C84DFCBA9C15A79E3A123DC38FAB3CB53D51397B2887791A57F8D0
8656F06A52B5A9B0362B2AB84AC03386ACDFC4B56C692B3A0D14B8E4FA0A4393
68386E9B7BB7A0BC099BD15B96F838BF24DCE02FAAEADDA054DE7FB84C65F0F9
2A0175EA545AFF4F420BDF27D06C1EB430BEC98CC2539CD6D06EE5107255AAD5
6AAFE1AB93D3C3CE5E24272277E32D67828E3817B2D526C8529458EEEF6B681A
98E88D37E41A6B50D7F3E8A5527E8E599570D0353314C45CAC0B27E3462AC52A
19D0C14C27> |
62 <001C60D8A8C9B8707C25> |
23 <001C60D8A8C9B7B4A13F297A0287D34F410FCFF4CFE6922310D30E741873
26E15B93C4B71436B7DF8008A99AD77979ED2BE23A9F02050C2C690D5CC1E144
9C7E9C29BFE924DDC7E5985D55527F1C032D279E02904E1AEC8FB721D248F4DC
723EB605AB4CCEA7C573E533945A0613A74AA830B2C0D82D3E52DE34A69651AC
1EFF885B5E00F460BA12634F06D58BD547B80E2FB1F59A6E2D00CB154A01E675
664709EEA4F2B87687BBE5B1A0056B573437FF802DA15B2EAE3D52F7CDBB8733
8CBB0F245B13FCCBAC6D79D2D87C36B28E05> |
48 <001C60D8A8C9B83FE365A83B833855BDD0F81B0689CC66FFD09E327D758C
3FD7352180DCA9453D43742E9AF030A8DCDD0EA9BA82D65B4E4D36CB089104FE
D3288603CBE81D7748FCB2A429F70DBEDFDEC8A565983CCB8885A8DB6A576406
B6D9C18EDDBEBB52FAA5554487DFC988BF65CB31FB8951C056BDBA3D54490027
52F14B3575FDEA6898F513B2333899406EC4AA49ED0ADDA430618D3529A7A9E5
04981EB57DE34960F3> |
44 <001C60D8A8C9B74CDDC04FEA64F39375A296316542A6ABC9797D4C1C26E8
10E0FBC34C7371CEE9854A15804C28D07D15FB6824F5B7C9BC0E0F8CA71A2B11
950E74DC3E63221B23AF2E8F4D7317E70F3EA6061A7C02583D36C83D8C245234
25C171A84B374B21849C178080CDBAC26877FEE1CAEB5250EE97> |
29 <001C60D8A8C9B71EB5F59C3B97CB9E571C6C17BFB08D165DD37CA1145B0F
161D49919A2596413A6BEBD559DB0B32826F88BBF6E25A1320F732B5373BF41E
5E9502E39AA7E8502F6A55E2BD545E3A1EDE4E0135F743807781C581B4871174
38A10A0497883781DF3F1F3DA3409C8783AED32A4F3CCE9085C9873DD760D767
60C8D17E206852DFF3773A31B08613D09329ED33F4EEB0AFCF847CB58CFF3D55
63F5D6B5B4E95A227001F3B5830C2D83EDEFD4AD44DAB664FAEE772BEF11A75F
6582EDF3F2D43CCED3074D6FF62E286A8DC82977CC3E1E3EDD4091110A7BBD> |
26 <001C60D8A8C9B6415B5C66FCB1232D565236D5AC17BF21286DB40DD654AA
304F63BCD5A6A00C471F54530702DDF5F0A56EEE6C15D1E0A885F3A4343BE57E
FB723709C4FE902DB324EBC1235D0B48CD61BA90C07EDAC2236012E0B4E3F00D
51931AE59C34ED66B895E5F4EEF727BC39DEA80338A4EB291014B4BC4313BB0E
4EC4AC654F5DC5F1912C0367B28FED03AAEBC247ED05F94BD29EFDE5F410D7C6
C7BF990358B1172684BFE45C9F756CD707BA50AEE86D503A21CF9B87B47A6D10
700C368468A315CC7F3DC909A841F92DB1C8C6091181520709362F08DF0A9971
6607B9BCBF9B2108CCA4BC> |
22 <001C60D8A8C9B7BEB158ADE82476299B6D6D54A296C71182608DE73B21E1
B655EA9C9FDCDE97065670695A44A0B111C50A102455B3422899E969BE6D7423
55ED4D3CF4184128D7542573B8CC9981E1CCBCA419961A6F04064313F258E2F6
D1570EFB38114C41391854C1BBC2E96FB93339D1DA46A8BF28DAA66EEBB011FA
3C13D0E1EE08233142075F588CBFFB9710EE38863AA1582089C3974ACFBEE686
4901DCF09CD7460E0EE2031DC491FB1F4822> |
33 <001C60D8A8C9B5815AB1158603BFDEE5159E52AE63BA9D319113FCD86D70
13D94FEBD970D3F77C317EC15EA8EF8F948C4F2DE2374EEEB43BF4573276C415
5AA6EDD06DC41B2C8AACE7D4605BD72F71E437A1014B17817BDD6C729FE8AFE8
BF911AA6E92698494AD1DF892243F4C3C72A8102B7C933634A4E2194A48010DE
4935B7E76C7A41911B9C46B32EBD1FCA940A17F9DDC26BC3F7065C276AD96DB9
7FFF764741545B9330E82A3441F9B414D6E199BDF1B39D3953FE33E290F52EC9
7BE1FC2C23ADDBF502087819E178041F0759A9D2870450A61D00FECC7AC33879
3679F97C6DCC0C9684DEEC5753A5C1CAB0EAFDF8AC3A234BD27DC1BEC92BE685
F785F19527B2C5734367ABDC0ED805682AB55656E783AE681FD1706BF7D02ED2
EA624A7DFEC68C7F608354C226813CCA3131BA257560A4A2098AB6169510324C
4B5E5540D5DB679879EA49A83AF1DB0ED30D2439F65C873280E6522DE639303A
4EB814BB3027FDB26EC445CBB366E5B883F2926B43EA3ADB016D9C420767DE53
21FD5B39FD099514CF441C01A9019E75A4AA33F33E65BC4C61C87AEABB4305E3
854F0C486D8AF3B89C83CF3C719E9536F5D95F998B78E1FA9E82A3E45AF96665
CC2DB21CADC4AE3D8D5AC3F68CA8EDC3093C87548056C725331696FF3F408E26
01E4A62D25C0B0F58378DC0D4E42F92F8226744FA45275B681E82ADAA2B8C8C5
DEB94B73889FD979826DCA8BF2306AA95965E19FE3E936FC4D03351AD6BA9036
A4DB406F3C6667174E0DFAB596650B0C2E2DBDA54A86DB5D425D9B1B063D74DF
605D25762FF39DF225DBD778127D85FCB0E4D10446388DEB861768CF848D3DE8
D91A7A786931A07EB0CE3B84B9C9E0639CF2A7ACC3924E781B74> |
39 <001C60D8A8C9B81379505422C08B272A6643E33778800C57E322372BFE9F
2A571E03FD3D23F724729F7D0F0A9373F52CA5956321ABFBDB263C4405AD74BB
DA5D7E4572168937A41B3518CDDCA7E5958CCD06647634586356150D923F40EF
BDFE91E07E0642FC00A41D5EC3477D> |
9 <001C60D8A8C9B875744C32811242FCF4C9E82674D06A5D6F7A187745C1B6D
A82D88052C1466FA8CAADF892480605A797E39ED458E79CB07A9EB421DA40DEA
D78838CE291E7E1B6DC05A2373FFD5557714C71DE790AFE2D7B5B4E9C137AEC4
23654C1FBBECDCAACE460CDFDC16D9BE2D18ACE41EBD0DA0B69E45E995058363
BCAF6085DA803DB94B85616EED43A26E89242BB1976445AAC7CD8E0C3C419E71
E036D36956573AD4FEC4C5A425CA50B58DDA8776A8B8626409C75FC83255A70B
C9569611BB53335CFDAF4488A69BD402D20A14E3B584BC43E4F19E2> |
14 <001C60D8A8C9B5BCE76B46847D5A2DFDB7ECFC520A0ACCA74E6274F15EEB
5D2322B0AB097B7CDC330CA1B3CA93747F068CF40AD9DA14925903E85C6B9F6C
295293540E77DC3BB7CB15A51F542536298BEBF316A02D50F77A12DB6F46830A
C376C1833898E669345A6224E2BF6055D80631495F88D2B370CB35895528890D
7BE37638BF82D8E7CFBC11B42DE08DDE89D39132CFE61430B38FD5567EB4A7C9
9B72AC732793743E6A127D6BA256D1583A73AEDCF68372130F88F353993ABAE0
B350348A14DBC7E859CAD90E1A5A443C2C1D3CE2B4B17C865EDF4F8F3FCD6C15
E333072C0A01A60448D086FF03C86CCF9DA4758B13B442E6D2E482A75A417693
26BAFB5A3D11434B8277DD013AED106E7A2D7109086BA7211029C1F0AB34F18B
36E36AF6AD3F60FB4CEB0ABEE89352F3CA249C25BB010ABAD914F1A84FEE9BB1
B0A9E3516E7E59BEC7B211F90BD0842F96BC90F11787717A023DD6B76C18AFD4
AA97F1CDD7E8D1A01141A3662DC702793B64F3194691A51F6A4755A7CFA10F80
A10B93FBE4AA86BE79146CD26E31655E44148182243344CA110AF1E2CA861876
F12C00E22E59C9A7628A8790BFA7152CC755AAA16BEB7622872BC0B7A9488619
5F09A78AE1344C157AAC8C2F187CE31970F73B1023D612E2343C73DB26887B61
069F2384B9219BC4A0B6538D7926946707B75F77433F9FF7BE5539CAF95A2FDD
FEE326AD5A77522A53EF42C04EC8533D54A3CB8D6DE17EDDB24D66A6350FE172
EE0D35C0F83279A9D3B7CCD2CFBB0DCFA74B6BB37C55AF512C348330B76352FC
BF10DD9209CEEFE0342E3050E177CC1A1325152190838806B08E8EF2948E39B2
799C9BD06FC658AC3047BC7912C0181C9B2DB08788D605322D3A16D6B0B3C345
1DDCC8525F325F0BB2C223FDBCB1D0916E440BB3A8C455978C444CA41FCBE873
1CE75EECDE7D9267E4FF1F93BF5BAFA60F43BD3C0D538D59FB4BDCC5D3428F76
DB76840DEC4185F48D8BD72638BB0EAA999541BBEA2258EA4100ABF57462E18E
CC221A3641AA1B5DE233FF37D5B3A3FC39BCA098C814E47D74CBE19D7E78472F
DC48BA> |
60 <001C60D8A8C9B08A950F44398936E0CCA697B3B5579AEEAB056A76531B72
034E3BEE56E945059D08AB9F2F15D6157583AA5DA8BB8ED991AABE87F0244B80
8830E31FA6A05D7B056FA3B105039B71707D9041874D0ABB3B861785A9D41599
986ADD17601BC417E5067A3EAB77353564210C9CB0ED3CD54CCF2FBACE67BCDB
96FC19373DDE771474049AE22D993E915D28CCED67B7C4C335E58CE09C8F4D0A
FC8897945D97DAE4ADB79D8723A97C0C551EADADBB803569141B42F2B9578615
62299430644585ADFE317026EB605445754BFA39C3FB458F1DD2F09760D36177
BB8FAEF3B068DF8335364BF09130B36FDA47C40476EA271D7E3C2EAFE7D6B976
467456D5CEA7AC79638F1FA269679F94A3E3335C9FC3704937F32A0497F25F14
3E21EA453260F1C029AC765ADAB95824CB7FC74CCFC29BDC435D804E58B89529
3C66EE1E5623B501B23483682A07679931249A037E587D82ECE76CD11276EAD7
1A738C06A328E89AB93A3B0074E8FD4682E142FB1798658B8A01FCB206E98DF5
249FA1C9FB452ED4A3EABC0AC1F5B72F8E5FE9513ADEE7B08D042175C8EFB1D1
ACB2A58CC35D22DFE0EF4D2811C9085204D7C731D783A275151C26DA41986C06
0A5CA4265817BC68746081DE38BAF0666C99A32AA3AC30F5B418EDE9FFFE2093
0354AD1B55B768F9A572E29A35653A3037253B51E685DB46CCEAF22DAC02643C
ABA380A38D53BCB8FABFDCA09CF091268B81DAAAF931AA8A14AFF13820F94123
B957CE8C7FB2973D0CA856AE14982FABA6A114C717E22DB2A66D8365CA13BCB4
266F62F19CAEC8841BCC70F6679B5E231C21C4FF8115B4CA002629827F9344B7
7342BC6D18CD5F0848560416B302B3DFF4F2D616EE6806D86CEFB80609ACBE30
BB31FF3CBCD98769DC50364392DDEC7AD7B3BFF8828881DEDC5D127BC3A767FE
8683D2A3575793F43BDDEEBCEAF2A8206C24CBDC896C2248EDD37624E9E79717
990D9496710F7A21442FF4A6D337305BD5CD27876F6163EC350C39ADC0E7B7B5
17B0100115667B463CE9FECAACAB95C91BBA1729AE295AD4BA6BE5BACD13941D
37AD039FF1B4EA0FEC70A0318DF0FADAAFD56B3B8786C40D07A334A3B84BC314
477AA050FD3B638F324B4E96A95746CCB786919DD64AB2D813A33DADF6C14431
7C1DDD5DB0E06CCA59368E32668BA1294E0727C6D33EEB292054A7A093FC2AA4
20B5D7610BD2EAFD2BF767127F451D42BB6856DBA580DD875F2EFDD07A1F4134
8404147597C1F23CA12FDC39D011A9CBF3F8130A27208769B2DC4470CC125A3C
A5BCDEBB3F2AF7A5EE77859DE3B13A2AC181498ED703C54AFF1DD8ABA38794E2
07B11F1A916B4693E2870777E2A416718DF0EED31D060B4A55BB23EB4063B9DE
5A206B94D83400C0575A5E40F49E0D29F315B4A861EF1676BC44D79DA13D1C4B
2C81E2CFAD56F4B7E883D17772D1C2D6C4AD1E507002F6561D41A8B5D59C5AB3
B31BDCEDE8B9F6344B5D20DED0492BC1A2C67AFCC7A8C9D7CE04473DBC32797E
05F12EAA419EDF58999C90CECE7B8A96BC1DEE5D50508040B2D360F80DAB1BCD
DD3E5169BE4078C007B8605966B01C4FC0DE354CC8ED979BDF3D311EAB8EA878
21FB0F7DF00DB205901EAB36C1FC21CB176FD92693BB6645DC35AFE0F7CE7ECA
122EA37A255D658430D415C8961DE7A7C12E07A97CD5D84EA445ED9551E9DFA3
30F57137D405BDC796DADDC23B2AD21AB58E51CAB47EB300EC3A8637DAD9E52D
D6226EE79914240AC7F4C5094B35DA646F17B636E6BE41EEE0D2E9BC9FF5B77C
DCD242797791FBD068990162E855546978AAA4AB5D9CA5C9> |
4 <001C60D8A8C9B6086D27A7CE897476A4B6D7E09D67F640F343E966D8E1C55
1419CE5A986A9C7D25B4C47AF291E34718234AB9ED9D067F5D1BFA05EE3BFDA5
C71065329623DEA634E69B15407641D6D08D51A29EBC2EBC5A9ACABB5030BA84
CEC668EE0378295BDC1A9ABCFD99FC066930309BBBAF485DC66D606EFD482F72
C45D47A4B5F531CF90DC28D1E2E4417BA2661F0D684150E840A63CF612A6305F
83977DBFB00166254F4B66D8EE6F0D64C81EE2E0962A41E77514C63CBE1D4517
513658AE20A9EFFA286EC34EFA515189EA168599C5E46169A8469AC62E358778
B413C0F5FCBDE1F3FB924C7449390CF20FFF87EC6802D3CBF31626F687CC2011
45B2E869D93D999BC742C030A7B61E69572D7AA35B231ECEFD55C89A2517AD3B
4B3E2470F6FA1327839F70E9953E2B8C4909411F3B4611B7FE8CF038274FDEFE
D5F72B1C106F73BB7E69DD92E065DA9FD4B30693FAC149F409A0CAD28F724EA0
D008A3C2DE4050B4AF2E4510A385F795C6730A31CF79C1A2E47E997175F63EC1
EB5C5377841DD3B2BF4B924F232025B11837498789B1B79FF7FC080109B350E0
260DE6B9FB6F68DFBD6F871FD399899E75231C4024EA6EFBA8154E9EAE84A80F
1C73F1D9766BDDF6BE5FB89B7BB2502CED6F1D7097A60AD90AFB8B9213AD510F
07E266163CB01CF8146DA22871C58FDA5CB8FF53351267A7A382A5BA7FE8E7BB
7E72225294D547F7D77583F1804CA9BC20E25F3A1C18FFE02E46D30B8988948C
EE62B88A1A0DFCCCBE320F3AB2A73E5A3452FD460920FC17A95C1E96C82A642B
83BBE401177CDD5627EECF2E3C4F298B2E0CAB2BC1702BD41C90659DEFC91EC8
8B48BD7B616E6CD1AB95455F145253325ED8700D245460BC43A52D17337D0B3D
8685E0FC1F52AF8E17451CE802CE8338B24F9FAD4204A89B2FC9FFCD6498DEBA
EE913FA7619943C95A9F38B397B63E479E9DB885A880C8B99570557A04622428
BD74959E0110E90D6CC5D761182859F183CADE2E488B93E954A6170A37156BDE
85DB0D0168B288A051C620B5CAA59B3146525D3F8> |
61 <001C60D8A8C9B74B0CBA2D7B7CEB15F4EBD9770013AC84EEBB6A104D7222
4A5D57078D6425AA6EA31A1B227FC62334953138986BC96025284828B13A4CD7
E327C5A51EC001D7FA73EE0DDB847A931EB3246F08EFAA5D544B597BB0E77BFE
6C036DCFD4AF39B8C8F0C671EE31B33FD1EAC6D27679DCA865B8D7ABF10FC0E4
48C2979EEC6D7A901540B17E3E5CC268AA50616C96E188A7C766BDFB6285040D
E17C461992F4488B0669066CC80EE5D787DA4291CAF7362BC9B135323CBD0333
39578FFADB304D7F1CF8F18A05A512BB8CB81B7BD496EDE42E64123CEEB25F1C
7A71C451EC3A54D044160BA7D15C49BC49814CCF37BDE44780A070B244EA24B4
61D4B1F7ED873745B0EE6A84C3DC1F571554155F91F232647DFD37A385707EA3
CBFF08106E54E2A589AA653ECB9A5D29E605175EEE28A3675709AB3E417C9D5F
D17A1F18A2B4FA55E957A0F3D0F7F71F8DA0289E89567200B2811A3848AF4B33
5ADC3A45D6AA0B92D5A4A88D4F9B5D2FB0F001F4B978C7FA940715C4807F67D0
0F8BFDA105F75F72CA4D3A66C56A7BE2E9A84591344768D6EFF1F0F17B2480EE
9895FDA93BC9AB9E10095F0ACD70FFED29210E51D2D296BF952C41CA1B3A42F0
00535E86CD955795BC797665C2B5C69CA0407C0428A11AE75E4A09D2E9066121
FFFB24EA0CEAC09289F9FBDFE3BFCF88B85177E99DCD5ADF19EE1BCF8A497C4D
C0B9332C3D897D6AD7F3FBFD55329700E053FB0341A91184C63BEE762452A8CD
88F861F43E9BDE38BA0ED420B0E3B062E1A97A93764357977989A789A8F60078
240C48961835BE68A9B0C4424E8AAA173B71A559F1BDFD> |
5 <001C60D8A8C9B34753CD07F0273C029DEE14A351491EE3C1A3D7BFAFDB46D
2E9D9E58735219E11BD7C8490483369E82A21B90A5314C7D8A90BD3679584D69
9A08F72008EC938FB8ECD33CF9E4EDC1F3CBE68772F5F113FB0EF853F87512CC
41E6823229FF8042CD14B7ACC2B0BD8DDDC9956EB256D7226337AE54F4075> |
15 <001C60D8A8C9B7C9966B520795EAB90C85D8CDDBA56C0640829CB1521A5A
5FD45C30295ACF9B90072D5A895134F84A1A711681EB99F74771879B3A1F5786
BF69A34E4FD4429DD1EFAC29871CCC7ABE8E2BD68831B5EEDA6FE8A6F77938E9
FC967CF9D47C5B2E8F52AAF3E92DA0375B81CF9BCC7EE9F05A55CA641E0F8B91
36BCD352CC27095B410C7AC0A8FDD3DAAF0F0E> |
10 <001C60D8A8C9B77E2C255EF0D3DC0573CA00E9ECF7E4084228996E9D33D4
13673ABE50A6F2779BEA6F408714A65783BABB3F6F6BD411AFF0898D4B0E11B2
90B6A95A106FE8C4F0FDB1CD9C6D52CDB2F180E15EF2FF7F1EBE8CDAD579B37B
CFBD7E1996F98431D8EAACF906A3EAE17AA37AF4D75043559BC9748FB48EC154
15D9C41CC4C8F49FDF8BB91001C92F08AD4A1ECA228AA5C539764B45D10E206C
FC86E8729D4E4B82D715ACDAA246E7437AF13F53DE3A1E66049B938A8DDC3106
B60B89AED95CA05699BEB9591157AC503AADEF86644A16139FC82BB3A845E312
1A0678B577B23EE71042D454F2054D5C2A556BDE8DB20C4F4E05A2846761CE6D
064A5B20F70A4064594CEBB067AA25CCCB197FC20C3FDE2419977ACC33071221
44CCF3EF3B05E7676984435C4BCE27F2674A770B67B39BB0727B567CB5158B96
6B8D275E4A26D8D86BFD47FD5F90AB1D2A20D4EF55481EFC7E1C8AA182D95253
A52D62268777657FEF804412A645409FE38255A9391414013DA5DB7B7DAD1428
D8B56BD6DDBC5F6357A2A4DA533CD1410E1049DFC2A82ABB7212F5E8ABD47697
9AFD9D> |
6 <001C60D8A8C9B4DC134A28C8DCD4E0ABECE38306E017D70DF0A6E1BB589E2
898B3D020E8D8303B05E5112C86B425E1EEDF5FF44F31445759E75DA9C17EDAF
DDB9543AE89DBB0A406D5CBA8AA380B81ABD457C8DD49CAE26F57C487C9E2090
36FF87B341A0D250E65C5B373010EFB019454C3110F> |
16 <001C60D8A8C9B7BF865D8C77CBDD647392FF7ECC93C9D77E029494527CA4
F6077380A623E6CFDC88B6A727C78D78C590AD4FC38332F380117BC03DB05BE4
CD3A285D36BBD0C64558768778BCFA54998BCE1BD441680722ADEEE2A8830A2C
6EA5CC2796F4236B603FA49193E3BB0BFFD1F01CF5C68F2D761320647AAB2CDA
918E75B644A943B73AC8FAB74A0A41BBAA0746A9F2BE4F6F6B10DA9DCEDD1260
2EF6B058F996A7D20324225F07007DA144B9E8CB503CCEAA30AE7B445D8122AD
32135DCEAD96E3> |
7 <001C60D8A8C9B84186151E51DB991F26E5F3CAA76FFC7D3936753B28CAA66
0F7FAA92BDF6803BA5E0F7C33EEFD725A7561784EE2D482FA2B581CB47665C89
B99442E85C91ED1BCEFC975ACCB21B627BDDCD2BACDFC33F7F4FF8CE362A6AEE
7007AEE4BBC9C> |
17 <001C60D8A8C9B606CE119077047B29914AA630BAA949E6EBB9FB4BC865E8
DD9C9EBA16D25DE35EE25E6AB68DB2DC4DB154063F530FE00CDC9C229CABCE89
78D39A5F62A40BBDA252C19B89CEEE825F4CCCE9EA2A67799ADF001D7821A39A
19C661784550E2630D17E00B608D7C3B25E0858285FA3D31C7F67010E5D6F156
2FD2905205CDA2C77A54DA200A164E93D9B509569A455781FB581D0094FE736D
114E42C8C2AA526EE218BE20EA5ADB56A16F753A8A38B663AD07F4CF382888D8
0BCC8D699AEA3FB1DA71847E3BD8BADA3736E62461DC90EEE4C08C7D8DBE7B77
B683AABAAA8EE52A89679F571E6F2ADAAB43C337F4D268430B7DCFCB0698E59F
BFF2F5D52644598F4473BFA1B4864242B6540B23> |
11 <001C60D8A8C9B85744180CC12F8486FB98B80173328885376ED53CAB8AAF
D7EEC8F2D044E623E6C62EC97BFBC049812422549337AAFBCEB9CCBCB69892E1
7A683BEF8FD0BA621182A7C90D3EE37FC8E3181F3CF67E19248663F4643AC279
9A0E2A8D29CA9005A88FD0752DAE938FF25E487671840BE6489776A93DBDE740
EEC7535D18D91A64C110DC579196C4E9E9D8189E71503761F986931B58006109
DB680399B191D0EF155D0AECCA18BE222A23E96411258AFCB7720A7B3A3B> |
8 <001C60D8A8C9B85302BAF4A512AC2C15FBBCDDBE8B9AE6315116BB6103490
C0057C6D77D3ACA716BF659CE5F9AAEC0EE888D51542279A47F24C779A21ABCB
75C662D3B6CB4EF8E6AC0BB7FD6FD7B06F3317D114FC1F640> |
18 <001C60D8A8C9B65C11AE50A1902848CDDBABD38BE9EC0EE0C4EF2379452E
3450F0AF87E202936A88B2BDB37BCBFC09313F4EE4BA3843BA03BD5E1C44BB26
568CAACC934292931DC0B5ED951231F2CD6F0B3A1B36921D43DB054A94CE97AA
818EC17A0BCE3F8465FBF110F474DC8A171A6CC54C03E66CC8A915461222CE23
1665D4D3D4EF0DB84E43A38C894A53DA96F721B0C9E9E911E723D148BB958DEB
A7C9FD12CFC391511E4F6A0F0BEA88E7FCAD9EFD2EA7EFECB1A5912B14CA46CF
9EEF41EBBCE2D95FD6BB7F2BCAC34A5895569D785665FD> |
31 <001C60D8A8C9B7489B35E5EF1B0941EA3D92FE2C82CED96C2CCF8F7BFCE4
C18C6D46031600F8E31DA7655D6B8F1E5FA3D83713024DCB7B3A23D6EDC9D6D8
2D2D39D7C5D6B650E875FC57F6E9597AAE91CDF5ADDB0F2117FFBE5628C22644
090E7F076F8A191CCD8EC069E38BEEEFE7455D0A5C510F79692EEE6A79403438
57E31EE6D6AE81373A065015796DB3DE356B36C3335E253523B0B9FFA7C054BB
73858C3E81DFCEABA44701B34ADFAA344C4B86D0F6AD601E512CB256E620> |
1 <001C60D8A8C9B84C6772434839E02C7A4DCE530C088D9B0B8312E6CD3B718
EF4B9BC92C1C331A15A894681F8B0B9C9CB035C207A0C5B7D48E7857BB2D075D
9F0C40E0273DE98E52B996E0E54787389B895DC5B2C2952B7E97AAD9533D53F0
A9680A747E9747F6812D95190F2B0141CCD001D442EF9E6DF69> |
35 <001C60D8A8C9B74383A1BA6B979E3210F632C63F4A7212E55AE03237E66A
04D0DFD3638A097BE370E990262C7E3A950C82240A5A5C5C862A15A89B74C7DA
8EFD04EA2777EEA33261262A9F3B953047CEAAFFA3BD65B23218305003F8989D
5099373A2A93511A5873C480334457ADCE4E58006CCE23AB50FAB274E3D66F2C
7133B56CA4E3C39EDEB55120ADCF91F832C6CCB386F8AB98CC80C81DD09A9735
B2ECE6E218E35305F3B695E5B4CD41A5C3F83B8C204858B0B442D05FA271328A
A7A6738D95D8DFD8E644D6D0521DE14A8A7045C3C72BD3D6CF63911943BF3897
2B8110D3CD47D246A6F201DFCD> |
28 <001C60D8A8C9B74E61131000AA65AAAEC9B9A7FAFCBD687CDDCA3F7C99E7
459B08FE5B04782C2C3D65A97159F2B1100D6B575AA822AFD8723AF6A4FA0877
BCF05EA91C75700D895B5E4828FEF0D1DBFD0C6A3FBB7AF56B4DD6D0B17BDEC4
CDFD0919E57382B91152B914F0B4F208E395E96B6B54201820F4CFA1BBA4B459
C4D20978617EDC080B67AC5BB3182EED451BA207F7082212A6E06681DD316130
2677F8F2CEA765EA273268703DCA86BD8A8D4BBBBA0CBEF8DD23A96D7FADB801
54639BF900B381EFF20860B62492E74C22770412163A280264056BB3EB9BCC0A
F7CEF7FE4A792CF3818FBDDA291BE99A8B4E626AA0C6FCD37970331FC84F1173> |
37 <001C60D8A8C9B7402F3B5A17B033BEAAECC5CE2FF5B7AF849DE3F311835C
A3BDF0659478AC8E6FAD974771F3F3E45EB5B5CB6B58E97D896D6E159B111006
E3DDDBF3E33F343A39D24D33E22E9D359D75AF6C4B4ADE40A22A11D907B8DC8B
D73EBF2BBA436088EDD990CDEF83D58873A0425DE10BADABC6F9459481E4E3B9
B8A6375C5B165ADFC71CDC0531018FC9F1D16D2D8A07D8E2E2DBDAEC316E8987
B795C545B48081F269D4F1C2B17DBF52CD832EAFBBDE2B453C02330078A36B8D
8DECA3C794> |
13 <001C60D8A8C9B80D9043FE361BAEF55A445493C84E41C024D9FADD7301F6
E1EC3E996E3DA103EEBA34> |
57 <001C60D8A8C9B74F36582FC946D3B31EA462D44850EF661073AE3C30ADC4
76C0999FEA54A700D00E6BC86BAD7BD1C7059ABDE22F0FA063DA98AEADA9A6C1
A1358B5656ED748770D099E74AB90465BA951E6A168C6B2C3E726B3A04CD66A9
4C98A6CF06A66F806D964F9A73A3C4AD44613B0344737DACC185B1E2439CF6D5
7DD217A5484D49066CE83023E496C165A54D5D92A8D7CDA27F36EC2C1B4EB5E2
145C74010A3C68EA954CBBA98A43D0DD1A0B4A07BC55A60F4AF959F92B329708
B952F405244855F858840177B3F4334DC1F7B88E35259FE88A78F0ABC6995298
B4E2706F2DB27530903D5F52F410149E2E> |
59 <001C60D8A8C9B746F4A492CEDC39CC72E3B13AF81050D401368715BB7C80
C7A4431676B4F7EB793DB79A57FD827D5C77577759DA27FE9BDA6D94F845710A
BB650319D02EFC8EA4A8F881546A1769DB4D576219B3818686B699E2109021CE
DF27DBE58AB520D78953824AC420A33542E3B04ED7D903F5AA49786BDD01B56C
3DD6819E1E5F48D0464802258467392FD83DC9AED8E8C0C8699182ABF6508001
F0B3> |
50 <001C60D8A8C9B616A7ED435870C82941CB2CA3F49E7F7912839096A87088
D00E88B704FD3439D18502C2C09C0762B63AC056E893A2E2706B9E14214503D5
5C6D508A9EC25EFE027F4901AA04D184A7E7E47E491C2D88D51FE26BB558F0B3
C7CE3B6556B17FC4C0809536A661EC14D534EF5C2DBAFEAA26C0DD48C52A6B42
2979F22CCAB9677C391553A4D2639215CCF7D2C90A82AACE3020A29E452B3EC9
97E3EF46B1B01997B91A5C16961E095F85848214B8B8BB74D88385659D4CF327
E8333A76C1F243E7AA09806BB9FE12C739EB8AD1905B1F9ED06A15EDC74ED4CF
BCB316C4D0857B7E503D3469CE42729BD7752C021E7DF6B7156A1BA151716F8C
67F4226C93E0668F0B5BA8E56DC4B46B389DA79031A2A0DB1D0A9F> |
40 <001C60D8A8C9B864C9F3B1A0425A8B213165ED8B37C1244FAD54E0694758
FC8339F212471D37FEB34BB63F4EF3D934C037BE4D0DA92614A5C397E6579AD7
B4FA0A9AEAEC31330B61DF02970AB0B23A214299E8B26247820496F61C1CDF70
166064A2AA70DDF2A1E6D2DD1BBE157FA29E366847F9A15328F30998F6D81C89
168CD6C05028CD7A41EF52E9CA2B6D766825D487171F5A62596EE0ABBCC6938F
CCBEED5C11CD114446FC932694> |
2 <001C60D8A8C9B84C67727D8D78371597B0979A68931EAF1B1E9AF597A59F7
084B57A94155438C73BDB3DF9A94EF2E11FA7C619D9CDFF2F4E0B6E18D566622
9488786227D1489CE9453FEBAD064B1DC8C45840BDF48263AEA9EB09D5C73E77
D88CECC6741017519E445428A8225BF303DFD3264F8E46FF8F3> |
3 <001C60D8A8C9B8524CA9E884F2A7E0D14DEBD2A9949E9226F4F8397F3212D
9A018F6CDCBB8B5FD6AF737622120A2ED2B02027BAF8DB8CBAC7BD12AA5B3BCD
889256568D01990095B51C6F1866EE32FA0> |
30 <001C60D8A8C9B7015BF98B6C4E4364A81800D15C27E137052670B1BA8F21
EC9B7614434DFD51AFD1BAD5A0E89433CA58BBCC001EC77796E3EA30C0B56FD4
2504437EE982803CFE86E3EF42BD01ABA7D42110ECAA7DE6EA387A51B5BF33BB
0FB385E890C5DA5F0AE22FAF5EB76A2AA2A9494AB8ACCD861571378A6B273E62
991EF2D705E1D6B4E4E09F7525CDDE7774D04146EDB292C475B921096946A36A
01577BBF6DFBE4643BFE700BFB3F7D43C23C6BB8F95A7708AD2B0F09513ECADB
19DCCE7FD2166F17AAEF0E984F66CC5C33231E656A150A1494ECF3A55FD539BF
6C290E4312AAB01581AD6275AEAD77AE806FA0AA33AD6F8B7B0F2FF88E74D8D4
908F2EDF7A> |
55 <001C60D8A8C9B7734F8C7A62685E6612FA1090FA74E6CE810CF9663496BF
D4BFFC9F3733D36367DA881B2A0C4E05176C2A92634089A5CB2017CEA0608546
1C1A29DB8DD20F977BA45128B2666248091BAD40D7E9A4C060F61C1EDD740AB0
76FB09590C4D3591FC159D828226674786F5FB7BFE37181CD321E1F1E15E43C4
A59E7B5CA9C2E03B889EDF2C8C7D538E74F1729284812001EFE22E11D492F5E8
125F28B6AFAC913D6BD7845CB1AC3B7260CACDC0B39313B32469DF404EA67133
9E1C39> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HAAAAA+*Minion#20Pro-9433-Identity-H /Identity-H 0 [/HAAAAA+*Minion#20Pro-9433] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMJ+*Minion#20Pro-9433 /HAAAAA+*Minion#20Pro-9433-Identity-H findfont ct_VMDictPut
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
16.57 38.18 mo
(\0003\000 \000.\000\014\000\024\000 \0008\000 \000&)sh
16.57 46.09 mo
(\000\030\0006\000*\0004\000$\000\)\000 )
[5.20187 4.31783 3.6124 2.15042 2.32033 6.15387 0 ]xsh
18.96 54.05 mo
(\000\031\000:\0003\0004\000 \000\))
[4.15572 3.96867 3.0591 2.1412 3.57764 0 ]xsh
17.09 76.67 mo
(\000\025\000-\000 \000/\000\033\0005\000$\000+\000")
[5.70264 3.7561 3.57764 2.65962 3.79865 2.16663 2.31113 3.91771 0 ]xsh
21.36 84.6 mo
(\000\031\000:\0003\0005\000 \000\))
[4.15027 3.96323 3.05365 2.16119 3.57217 0 ]xsh
23.29 92.52 mo
(\000\023\000 \0001\000 \000&\000>)
[5.58409 3.5526 6.36618 3.55261 2.16714 0 ]xsh
12.49 114.6 mo
(\000\027\0000\000,\000\035\000 \0003\0003\000,\0000\0003\000>)
[4.39772 2.54471 3.92174 3.4967 3.55623 3.0377 3.0377 3.92172 2.54471 3.03769 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+*Arial-9427-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (IAAAAA+*Arial-9427)
%%Title: (IAAAAA+*Arial-9427 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /IAAAAA+*Arial-9427 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-664 -324 6664 1006} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 37 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 37 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
11 <001C60D8A8C9B67A40AF78C46B8716C223C877B479C9D9D9417BE418B207
92AA33216F776B5D461F23A8C2C9532D6719CA3830388DA16D259C24074663F2
66F4EE55C07B5120E6962B7D246D88FBA18C84B4BED6DE43E6EEF9283C686EC2
BA36BF80EC37568D06E0F67ED55DA5FDB9948B6C659784732072A2FC14FF4ACF
74DA4CBA0502D5E57092EED98E68F4FB821A8B670C6E0327C06AB7CE46D099D9
C0DDF03961536132674527E6867562FF> |
13 <001C60D8A8C9B7E965A9195D1ED7429674A2062BAE436A553198A7DA6550
6EECCA05A56751D5E622058C8121113A552279AA7F1D9CBDA55C34FE59AFEB3C
ADA7FE264AB078B7376E50EEE3C6D7C953B55CB0A51E8B99BA6964953D92105B
84DC13AE07C32EE19680E9577CE4970A2FE387D5511979A1172709AEDEFF6D85
6B8E307AAC7860AC087E330327E1187EC0614BC6093CC27C5B9F9CA37A209B65
17F30F992784859808034CD74DF4129D4FD0B6BA7DDFE7058E3808B3A738C806
A43F39CC> |
17 <001C60D8A8C9B7917EBA06D90DEEE1FAAF80F4DDEAE68C196BAFD80100AE
A88A610B6EAD8BCE6C0E17107530EFDA9782D083EB97FB9D39022AB4CCBA871B
398A734EDD98F60AC7AE60F2F3F186EFF15A499733C322627E1E124CEBC69415
46520B8DF87DBD4CFCB05E01FD24768CD8EEE78EB25DAF58FC872A5C471E190E
0A2509E7C6655091B6D1ADCE3825C79C5234261C320D84C3CB0EADDAF4E1D387
7FFEB4BFBF0C75964A691E0EBF4AFC09EC72D722F57470F1D472A4> |
15 <001C60D8A8C9B7C56CB407634CD6866F2A718903E9EB76CF59A8A0BAE39D
E5EA7942B60560D1931FDCE5EC96DDBC9BF4E13951E9EA7A038958AC0E076B18
79D6B641BA9A6733D09CF5888CD0D8542B729FAF8DCA5241DE178E5491D6690B
19AFABEE11C72A1B150EBE0C0C6F0B5343F5E4294946E05A7385F1B10241E708
E41330DC9EF2E6CC16D744A6BCEE7A1C766FF414715A04CF55E82D50D5BD42F4
7A9EC9088430591D409A9262E34CA4E3FCAD214DA4B19D8207996ED6B97EFD04
C44ACC529B8FB22CB0A73B0805138BA2BC567A375A54660900D1C274097058AA
289D86CCF92BF3810F9F0A1B2AAF5C2FFB93> |
14 <001C60D8A8C9B7E39F7CD64A58CFA76281B3A4E1115886B1FD40EE663E37
6BE22D6DB69C5DB1E30F45A5FBAB4280CF6FAABD03D2CCB24D7C5E4A90FDB32B
E068ED45A59D896CA8ED0B5C8668403606032074B8F380513BB83A828B7D9B92
CC69EABE22DC6274923E5F7C51701657BE7F6FFBBEC40B5A4AD483EB9CAFC155
D495488F3F92316EEDF457863E95E4C60BD90CA857ABB41BB28F7B3387BB1FCB
2E15718AFE78CA83F0FD311507F0D04432F2CC47258D7823EB81F41379729DD0
90E2CDB229A48A9056E086BA9DD12500BAC280C45CBE597C8F050B172D8A852B
B655153CF3AD7596F743324B15F90D0AC2A5708ECA1A50CDBE916374718EA91B
7E6159469391574DD29AA2F6D39EF6A004219B66F58EF5DB> |
31 <001C60D8A8C9B7CDD8C2AC5ED20FC393386858E62EBB1DDCF7BA14148383
E796415C47012BFB42A09BD96FCA10C455C6F193F7C782F84E442A74BD155649
F36588395A340697A159A7FB65EB33BE23DDFC880A21CDA97D8A4AD8DDA8C33A
A806980495D41501235362D0EA8BD7C1C25F522CCDBA1D9C119E41A1C1F16120
7CC5D76063A8DA4F65B09E7AB15CFC6F1D7D04AC83EA828DC2B1E18F8CC0> |
20 <001C60D8A8C9B8A1F9730613D2D8B978D413B380D3EAB131FF86E5AD70EF
01CCE482DF273D9793ADC5E1810E363D040945EEDC1EFB6B81F5CD3A054EA0F6
0BCCFC9012D988BC191755C6F4C7E201B13A6D754E9CD2364D2DCFCCDCAB9B6D
26FB207A200F6E9EC1F54FCECCFBA421D74637C1DB5B2F82FEDEB3CF9DC9F593> |
26 <001C60D8A8C9B8144F931FE4A78173FFFF10BC6E30C8C252AB128F9129B0
1DD595DBC13C3B798F4D1578CE170E33E22FE93592CA40239A62467B3235BACE
AA3A83E567CF485AF26DDA9A03C3DC8E6A660EF5A3627CF0B5E7AB535D190440
3A24BAA979FC9A2377B072> |
36 <001C60D8A8C9B8707C25> |
8 <001C60D8A8C9B65EB4069FA54835CF3D074323D4B875935A2E6EB43E1728A
0986BA68AB347FF56AE4C32C9C2E2526DC17E3958A9CB6197BE4C86EB4C2FEC7
12397A1E8656703D0B2655B6D0D307A05648DCBE67230FA2D6D5F97877F36937
FFE764B5C411426445A25F000AD1506A9D8ABCAD8ED125AB3F8BEC8A1B1E18F4
2AEFED48D1CB30477D416FC8DE1EBBC98D7777CCE3207F788B0A6BB56344641B
A07AF0FF74165FC> |
29 <001C60D8A8C9B820E2DCABDAE39076D1D59658ACA90524C05CC58A39E34A
BC1F57E0880BE10331E9418E3FCDEAFC3B0B08B2AC9FBFDA6B924D206F788787
ED8461BBE9752F555D6EAC610AA92CF043D2E9907122F47836ACE967D41D68D2
21AFDA8BD6FACCA8648DAFC6CD485FE10A5A07318ED533D219E97E7267AF7414
BEA87820B3156E485C61CA33CD5C39A3BF0CF8D0881BE7661009B3D63F8B098F
0B> |
18 <001C60D8A8C9B8A2CEB91388A91A521FDA954C1E5F5E85880C072052D5B5
44A29824FE738DF7B1CDD4CB471E7C1F46F58A25722A48348FDD56CDFCE6EF1C
AF73F85B51287F160DB174D8D6345E0EFA45525E45085D6477DF> |
33 <001C60D8A8C9B7A3FABD23ACB14066FF76EDB4DFA56E0CD27BC952A32B46
694CB9C77A234D18B56E4E0AF5A5CD8622BF38C502EA711D62923619D285246F
5B465F341A38D54FA36E2869CEDC91012F59CB824006B593B8D5594CC7F60A98
BAD9E533B081557D665D35BB9CEC782C253C5F> |
12 <001C60D8A8C9B7883C348E65FE6C0C19FD5C3073EC4AB23A12137A0EA82F
63C74224FC361F2B93A59A54CD7F1DF1CF148077648803A1AA8F4E9A0311ADF4
58A16B42100CDA63131B0273303840C97592CB3AA12A4F465553A2CBE7B72DEF
A36AE6E78B25F28223D6F12B3C0BF86DD5DB17F58356D4650E4633EF732E7BE4
D4EAE01843CE47997FFBC2C4F666CAB4C408A7A1D8E5D16BDD13FF8FD636D076
3994DB1EBD7CA60E2A804F8C43AFDED74D79AFF88658C2A17838> |
19 <001C60D8A8C9B89CE1F2138C22D264A0961B9B5B2CEB89362E3021F5A0CC
E064FE5A0723DB2C3F1E2090E6111D7EF0029F6747139B2AA4FC88590DD09D99
8DAB694BC195861245E5AB1D5D5006E329BC3569108F17F7E778FA442A35F52C
D3F2EF> |
24 <001C60D8A8C9B7CDD8DC274DD2A29F274B1D282479B134DA66CA88BB1FF9
B1CE67953F39889D1C9A7CA1B95911E10A9D18EB751CF7B33C80556FCC3DD8BC
60388E5CF1978D28D24B81EF67F5DEB6C494E54DBF51C36F8D0B7C2EA05673A9
8945A18115D1137A29EEAFC4D7078EC0D007D9ABEAA8CD> |
22 <001C60D8A8C9B78324D4F34D4BCA03C1058139DDE8E37A27958667D715A6
66AD86E07C5518D537433C088C36AD1A4F9BCBDAF6E2DC41C450119372D0A5E0
FD7DC025639AF4851E3077D2A5F369E676C285BEA30A8454A0AC4D36F54831FC
68F9A06EAD01CBE827EB8562481DA7052683DC70023FC13F6052C48E9E0A1A4F
97D0210571C086E5B39C9CBA7F40FC05EC679EB0CCFA> |
28 <001C60D8A8C9B7F374895D2201C91D531EE70D0EEAC538854431E073924E
84386898A53929088E4C373DE835D2F62AE27A42ED384A7FB54A1A87A7E2E4E1
6AF7EC4440317079B3DEBE36716579B8DA4F215B64969692A1D3314F0C190D2E
2A51E8C139329A081C64B5959B9146F5ADC44826C5001047FAB47A6CD3EF0C73
0B468A8253C74F0AC15A55B9CEF94876348B08> |
7 <001C60D8A8C9B888C1BF82F67562942D9900F3D6B834C1144086A1D2E5B7A
E7A3E29252DF8434F75CBFEEBCD7EC18A98D2A835B4C718E04E0BACB93CF82D4
5A85DACD3BE9CDEA52DCD1CD1D0212CBA47723BA30A57B8279BBB605E083237D
613AD8A9A61FD99> |
9 <001C60D8A8C9B66621B0BB041423204A933715326606AB0AC4A541B990F5D
175066237368C6F34757027EE2CFF1ADBABDBBC19CC93F136386CCC6E25B2C20
A3903EF7B5BD7F833538BB5182E4E16781EE116C528BFDF5E1BBCF0B15A12A15
EB57FADB1ADA085933F117F0392628EE9F9DB8C662E1C6AD7CA92187DEEDDC0E
E08D0DA5216AF9BA335918B3E9819ECDAFFF1FF639EC39DA3CD83C81AAAAF65C
4E65DE7527D696B3FB35C4B330C82E6802A7BEFAED266912370C62A4160B3968
B9EBC6108161C8A83ED8643C5E02D8641F6E77DFF7E964398A1ACC6AB4EE97DB
22CFCD2AE3B48160C68D668D27B6E3B2012BC76E887671CEFFDCA3B312098165
DE88468B5FB0579D4F5C50C8DC3E3BCCA9E724BB309EC66A3EA> |
16 <001C60D8A8C9B835D34C659863CFD19DF0CD9BF5B0C0280F94C899FDD3C9
DA97928D187318BA1B29798B9A4DB61201804D8B6A3598C4929B1CC96A2D0CFA
1FBEF6D87025F343A6D4F69F27E763E291899AA93DE4D84E555B3D7F21D4C0A8
B1CF531D7533252454A47518AF5CDA67997168E389EA43F671C5C8DA5EC171A3
A28239E590171973772CDE3E8ADE54AD> |
30 <001C60D8A8C9B837762B1D4E0382C4D9AAA516394DAB768F040E3F1755F8
0BBE8FC4F207F3FC6F95B360EB7E24C2FCD75E6E31266110050749E05554F6A1
A97F7ECB47A2EB349BF48F9133149A8E807AFB06E7A8BFE2502987444AB2EEB6
88B7AA57872B962F35D1DA9E6F0C1EACE498E770380E56C264863FAE6D31652B
ADA0B038681049A59C2737CF20B50429E49D> |
10 <001C60D8A8C9B67E8BCC6D58989C672933A658B3255CACE0E579128E6AFF
FC4A212489C8DD0C5E31304C0EE7D48B7B2D70DB39DC99B2EE2302C2F1B2904F
30AA52653EBCE7BF90EC669197459FCC0C44ABE770667C6ED88D8D9D7CC42920
4258F28C42FDC9851E44586ED75CAD821D7A07D51A582C2B2D26711FA1D66B6C
AB14B5A5717762F4B29764589C0191284F2304044BB27294345615A5F4C680AD
E19C4DE7A67895FDF530D6D3A76F13611DF593A2B2DBEC4C1298BEF4BBED55> |
27 <001C60D8A8C9B803801A3F0159878854C6AC6A340E921696825FE8CC9E08
0AF7B414C239A7DC1D5473106799C7D5CF35EAD090EE7FEAFEE63100D6179023
62FC1D5485451857FA0F1EF7CE2D4831659B68A98391E43CE5AF4E60271316AE
31BA4989390C42FB7483E0AD58BE613562CCA1278B0FDC87B6F0AA> |
23 <001C60D8A8C9B7917EB04FBB68E47096EDCB97ED0AA00D77323BC38CBD8B
3C43C59006D8900426DC3B64E7E213773A09FF5044194688DCE0342068D4592C
87F878F23289BD2555D1B57176038353B426A7C355F14950ECA213A649DB8D4C
809C9B2F7F2BF4332C569E823E7720B8619403F86A1D189504581EFF7B0CDD34
79A78AD563FED663> |
21 <001C60D8A8C9B8BCB762282D690C3FC0678CE7175A1E605BBE9B607B186E
420AC5EB6F05BE4A28C19277C82046983B4708EA7727AD5EDD19016BA676F5FA
21AF28445AED1360A561A281B6E37BE9173DD9ADB44884142631B2DA87356461
444A3EDC3F136D010D57A5339381AEC6D80EB6264C93> |
32 <001C60D8A8C9B79D2DA70F9C79CF531345A2E3750BEBC2225B957EBF2DC3
9939DD7F32A342422B03BEB683188D8B5B71F3CE2F38A11081EF15D69E0B9139
EDB90B2AD96B6557D7DCA846F1D310BDEF33464620EA5AB72B81E8854113C954
BFF5FC578B5F1E90C6F590AB841869C9BF408ACF96BBCD4420413FDD72F5350C
0F71D0A27A952150C8491944F2F315A219AB96F262119BDE4B9DC1678EEDBE7E
464217E450A3F3E3D94D0095F02472ABF2BE5A84D6CBF3F0F1BCDE7AB062A4C4
A25A3510EE3BCBC8BB8423D7B79A8810D63226F7DB1AE61F> |
25 <001C60D8A8C9B7C8C178D6F74BF4422C54A95FDDBBE1A2ECF87603605293
E208F44C8DFA41E21033776ACCD398B577860C5F0D2648C3EEB22CBF046AAA92
601FF69FCCED48899BA51892965BAC66D74803AD1DDC84BFDADED50C933CD5DD
FFEB87CF0D93AAE83516D604BD8AEBCB808B8687A8B26D45BBED4758B7577609
A10F4EEE5C499DC8FEBA3A6EFE5D29A171D6DDFC83C5ED1B4B45E290298409F0
F0F58EA43465F9906D908D79017E3F8D8A674D6D558D401D4378B6EAD150AD5F
162800F67332E23833E45E7C9F1A92E9259654BD650E61FCBDDB656E566D3ED7
5473A2628431D1E6897D5C11C342E36DEBCF5CC8F2B5811BD1B07884F88D4BC0
5DC646> |
6 <001C60D8A8C9B6605BC8F6A47027C8945E42BAC363D539ACFCC2909719D94
B3657165F6A794F085267047434AA368AEDA9D7A1C382CC8805B36A54CAC4B4F
8C0740F578DBE5E2996CE15178805F96EEC22EE3D7E6BA8BFAA11A2627A5D52F
C0913310CAEB58E5B16603CAE17F962D8D83287839034C335C3E1F0783F311E1
F613B29D99A9505D08A724FDAA1E3F2BEF151127AA835844E> |
5 <001C60D8A8C9B67CE7CEF7F909521F451D25C450458B9AD701F5DF54D168D
9555EBF72F0A018E2A8C9280EF7C2937186039AB5019127270EA883E2C6110A7
2009E2DCFC61B437D97565AD59769DDD5B562E2B7EE3C35156CB4A6EF6A75329
4BF3D9CA50199DAF3D060225BE70E8E373EE25963D96AE0212B75DF7A3E72FDA
4B8FBED60A0F5E5D6E3A9420D91AAECE074AA298A594E3C724187526ED0C09E4
43166AA18D390C816EC403E80> |
1 <001C60D8A8C9B87A8F654954F394F700A53FEFC6C252C203C4A63102C0DEB
1FEC3D55F60A81FC1FEBDE136A9BDF5727AD1127DAE03353F59> |
2 <001C60D8A8C9B8622A74D508A3ECE0AF5362E463ACCFBDD22A4B2B08114EA
DEC07DEDF693B4DE164DE82193A3CA90F6F8E24065B5654C14BEE46> |
3 <001C60D8A8C9B8666CD869EA7D1D39D030087F076C4F5410151563E9FA363
5B95DAC886CA2B576C3A699DE954B990CB481989EB7E1> |
4 <001C60D8A8C9B86FAE1615A9D110C1BFE0E0376E9B52E2442C9E38EDBB432
4060B1E3D32488129006CC46A64B62E1A8541DA952B4ED720C867045DFB51AE9
6B3A70A4D166F63F26A83F8E558> |
35 <001C60D8A8C9B08A9506AD7C6C548BD6ADB85ACA0A7ACE67104BE602EB65
F19427BC5BE47E07D8B00033193A7D78769E05077785F087C30587DBE27927BC
889B96B6679B4047094E68EFEB1DD5841BD1DEA3B7408B0831D0C337C14F53DE
322AFCD12052605109BC68EBE2D9009A9195F18FA180F79AE006701283544756
A3430BD4C98F66797AFEF2029F52B40F80E98D8FC77CB92B6C2E9F98000079C2
E5A6BCC7C5ADA335F149F6F4D8725EBF0EECFC2E45FB2617286EF69C2D77B6CE
C936B5321D3B69027814141E2235A8DE6E90BFB2B8456145DC0BDED3D3D4388A
977C2ED9FF424E12BF47E92DC6AB0D7320125E276FAA6BF2B4286234B82685DC
B48F64061446F377C29153ECE9AF03B73E48613DD3FE5D95137CAF41C9712424
63B95D4AE41315A83235ED21438DB3DE02836EC74B2AB43D27A8E9C8C2674B7A
22AD7AF589AEB6D696E9CA1DE849FE492B1B03945E37DDDC57A7F73BCF0A6BE9
2FE16E86D1A99318A27AE99A2201C2C46E23C7E9697F934964465B3CEFED1F53
246304E4D6B9D1BED0132628DA1CC16E03AC9938565033A5FE75C7B974F3054D
FB22CECC58EE400863DD1638CF30D94AC5C388A4510EB7187AF4964014C1701E
3F2CD1D3C955BDAA0242912BCBE50C19B7BD8C2F829847D4B8F18AF6AF2D4560
331B2ACE807A91C58CCA7FCA1C95766D562F5A2563B59F65C7281E7A4A98F276
12282CBCA08A7FB210BC67960329D02F0E310E0E2C3DA170A5C93CACDD555138
FD00D376C2F2F1395C297C46BE990F1127E10D4BEF04EAFD4698F6D67B8DC9A8
BCF566712B576A27242A6875A45F07F494E0A6B233A8F0EE9A927A3E8F33A226
83585B152D8320FB283CA85D484A4044F0E5D1E84F311DBEBBED2F5F25B58A21
CB8C10FEED01281C91198248352627220490B8F7F7A1E181ED6820DAFBB12513
233F9B95CA1606AEE2D8A409B04581CDD1B94AF6D0E37EFF82F4F6C056580FC1
CF25C97BA3BC6811E9A1A5FEE6E341221416019FE9F6927F0BB01AFD2D5535D1
CDD0BBE14DF1FD12D8B4532A7C3AC968AE62FB0947C57D928E938E1FD53525ED
51CDCB49542DB696EC52AE6A90D54F3768F5951E5524CFCF506AB31903DE472E
C1CE1D0EA0616F15BCD80A1D4B013E3318CDDCBF55F0CF1296EEF1D6B4DB1D1A
DA9F75C11067106B49A9C5870E8EAD151A1F1F626AEC9101FFF528C6BB26534A
25F0D94E32EA6B16E296CB37B1ED5DAC7D812AAFEE3F658DF29330A0C22725DE
1A41B8E999995A141F1E2F180835931FC7D941DEE01420E71292243849DCF644
F2938B0960424DFD45013421F54509846566FCA7723F171106F0D6EB7CADFBD9
30ACA5C84E1AC2A7E8A255F75B8F87E3B1C89E47838D76260FD9D568DA35617C
664197F854ADA6F65251D232C6769385C4D276462612999216DF428DDA919E20
4CEF0404C9003AE3A7899FC55F3A9BC609DA6AD1D5B27580CE1126EBF835E2E3
EE2E26B4E27284DBC7AEB0551DEA1BA31DDDE201AA83AE814CC144A35E07D325
D33CFFF5FAD6EAB3633CAA13B19EA30F4F8B44FE7F57759D746F416C1ECEF314
3FB9ADAB6ECE47E3383BF01520827694F1488D1A902DBCB699C07F90630672AE
BE3E4286D4196C5E00D5AE6FE358061917611C0AF57C51C76A0C3EB0945CBAF2
A399B55AAE7CE5781B395D0F1837B4DDAE233A643E4C701D1D4D7638ED5A36AA
0E0185D62F83892B75F6561AB63A0282E4B402F160CB73AEC73DBC813B9CA1DC
BF62C3E11D9B0E5EB6663E7AA3B6C74914EC5E353E3DE794020F08F855A14015
FDDD454140C60AF807658C9E4C956DCCE2757D57330F04A8015B398B9F6D9BD8
272B4809230435F3A0800D8B9BF0D172403B38971155F4701B79813407779621
210884246E4B8946CAC0AFDB02668A8BEB805FCB660E4C0EB544EC16B195F2ED
1828D522D8FA489D5086B2FF708F57AD8F2B5106B6157BAABC02A222874FA5CE
8D8E3320ECF05614AA9F4A771ADEC7BEC41C77610C566B0C68B66B877DF11B2B
73BE6EAB05E8F7B7E3DC715022A16CA3D54EB19B64ECE119BAE3E056631B9B0E
DE632F5596031EAE50F28D51235B95697F9AB3453802B3D771585349ED1DD4AC
F8F1C0611FBE8D9D4782458F44BED755978D16E4BD68DAC40285FACE3830A500
81A1ED3BE45F22077B73AEC756A57FE29A87400579BEF40BE86D026BE0E69D50
432D3756E8441B6206D5AA93FEBF5ADFED3FB612018326D6E2848B76> |
34 <001C60D8A8C9B08A9519C8A07980563D4C0ED2274E423A71276B1FCDFFCA
5B33BF2603C6C809016646BECAE847948E1247D4DECA30CA636C944E0A7B4A80
FA375FDE182D378DCF2AEB395F68CFEF1BDEE150D7F43D2FFC7952053EEAE509
449820C12AF95FE4B9050198BBB4A09A637832046836164B5FD68DFC329D9109
215AAABB9E6E2CF62723F33BF26D00F059C8A1841AA553131466EF26221853DB
1AB1650F4C417A193E41F821C4E710C2773C2C2C054FEACEB9C602B78D72CB61
4A570F698EBB329CDFCE32BECD704B1232DF3DC159C7BCEEC47EA91D8C602EF3
20EDB14434F6FBF47ECCD67D8EAC71C68C4C17BD9AAD6A717C95ADBAB9B25335
BC1A4631AE06FFA9B550BDE128129E71DFB0BB426117245E8635DB1659C9C9B6
555E8E94ED2F70BB7950786F64677FCE50312F116323C0BD20CA6BA518AEAAE3
452E89F61619DB64184F6FC4BE50EB4C7AE3C74421E6A4C619B0BD07123A5A39
DF4595F174B9182BAA2EE01A30778095FF9E011028D91AE3DBFB954E369F4DE7
ACC322DACF4B490555227E1A1C5FA518234B2B88FCE4DC2B80BE10E04413DA7B
6A3EF56AF752E9DE095A602ACC9A8B3DC77F964B74DE5661172ABAA03791071E
F7A645EAC608E845B096AF3A5A928884D34E522A802BC82D6AB9012019F5EF38
98646E0DF3B207589E61EC3547629FA5952658365E8D8D7069CEB681A0DBC4B8
C4DAA14E48048403A2D6EA49C49A2B76747F6D6027A03B0822B91CED23D558DC
DE43F9972049A49108F275C3DAF6B97B0B59C14F5B87F15EC9AEF15DC27F2947
F66016CBA043B46089A294BEA96F8AC1471259A4A9EDF814E179F02D13425050
ACD1388C891C1D4AA8F36A31D592D939484377271B18931916B4C5497C117022
BE51113EB16C20043BB2BE9C34DA711E28C15C5A575E7E26E1D27B39124EB4B1
5CE1B8064E3E2F4044EF614D3A77223AA1892C180A371AFC19F325263FE8D690
D95D1997BE06A42D6551B2D89D200AF812B2B58DF83675A1989E4F2614785953
3F68A58A1501242F0E124E1D5CD01628A72B86DF876C0CA6DD964CFEC2438C14
94E6ED06B81922904FF2C82D721A3E2264C2E3A7DED6F20260785B9D327C427B
1DA6F54CF05D886DCCB724F659C1991CE3089840C3912ABC88A12A614C932BA7
69DB025AC32AD728DBC7CB404B5EB73D07E4AD26D05E8678D645EB5330293570
9FC30F56471915DE27150C6D508E9D292E1A7E52FF02E4B47AAB26F5E582D5CD
1D3656F70D92D9C4E704654EF88399E09CF4B04E67B5F1F4BCD0FD22EF71960B
252F90381081A96794750D973A39EB27F55AB007EA871C6EAC5083033AAA372B
DAB666AB9EA52EF6D3A6C5905118A753419DF20EEE75F4E63B85379C8A494624
CA178EDC46B667B718EE09707593335DF885ED7A4663B6F8A13D3F3501A1EF> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /IAAAAA+*Arial-9427-Identity-H /Identity-H 0 [/IAAAAA+*Arial-9427] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMK+*Arial-9427 /IAAAAA+*Arial-9427-Identity-H findfont ct_VMDictPut
FZJXMK+*Arial-9427 [8.5 0 0 -8.5 0 0 ]msf
119.28 -13.02 mo
(\000\013\000\015\000\021\000\017\000\016\000\037\000\024\000\017\000\032\000$)
[5.50238 4.77982 4.71185 5.08594 4.83078 5.01782 1.72839 5.08591 2.90982 0 ]xsh
161.53 -13.02 mo
(\000\010\000\015\000\035)sh
174.918 -13.02 mo
(\000\022\000!\000\014)sh
185.416 -13.02 mo
(\000\035\000\023\000\030\000\026\000\034\000\007\000$)
[2.80511 1.7511 5.01508 4.55609 4.96414 1.92111 0 ]xsh
209.78 -13.02 mo
(\000\011\000\020\000\020\000\017\000\015\000\036\000\023\000!\000\017\000$)
[5.33026 2.64432 2.64432 5.08383 4.77777 2.62732 1.75171 4.28479 5.08383 0 ]xsh
246.74 -13.02 mo
(\000\012\000\017\000\033\000\027\000\017\000\025\000$)
[5.53375 5.08334 3.0687 4.70926 5.08331 1.47922 0 ]xsh
274.58 -13.02 mo
(\000\013\000 \000\031\000\031\000\030\000\032\000\035\000$)
[5.50146 4.60901 5.05948 5.05945 5.01691 2.90891 2.80698 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
93.6 15.33 mo
(\000\032\0003\000 \000.\000>)
[5.65231 3.16182 3.68036 2.65184 0 ]xsh
110.75 15.33 mo
(\000\026\000.\000,\000"\000/\000\033\000\)\000>)
[4.32848 2.5434 3.93744 3.97995 2.65393 3.79294 6.13895 0 ]xsh
%ADOBeginSubsetFont: JAAAAA+*Cambria-9431-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (JAAAAA+*Cambria-9431)
%%Title: (JAAAAA+*Cambria-9431 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /JAAAAA+*Cambria-9431 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1109 -298 7120 1047} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 71 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 71 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
66 <001C60D8A8C9B89474BAE15648991C04FC909CE01311D440CE734C8A6E4F
82C560481508EF433DFFA8D0DEE6E132E606D085CAD2C8DE85B1FDBD94BABA05
65> |
69 <001C60D8A8C9B08A9507B219E398F0AF3CFEDFB33CDF5C16A78CE7D2AE23
F8F5616CFC02AC886368EECFCCD8D3CEC57A80C3724840455A9FD495408A0898
06F442FEF9844CE01878481AA3BEC38B6881B8E3567E89C687789F9D01253AAD
8F147264BA55E5E7610748CDBC3518E076D6599133AB95E2C08043BDFD9FB3FB
C57162CE3CF0E3080021F884ECAB985C4390DB5F66F807CFE3395E8002A8941B
0DA87C993D9D6DA43C87ADD9810FA774979366B4CCF84F4E4A686DD59CB130A8
0381DD7F3130976D394F8522395372E30F10C6B9E75DAEC064EFAF97D6BCE690
D45480D5A0ED0AE1C7656DBB00482538D1E19D9483C231FF969F0CDD1E64A3BB
F0BCA69DB87D0F7877EEF985D22D81E4BC01E21FEAEDFEAAE24CBA4D4D9A8CB0
C2C15FD6FBDC66C6941D48DBA45E8366F5DAE0D94CB516DC30BDF80B830D5659
6E7828665644A5DBD60DC9ABC45EAE2530278885679E95C3CD3511B0654EA662
C4A343C972E15E48B9A7E53484E5782856CCD9249068B4CD871FA77279DA04C2
96507B451DBCA7AAC9AF0E7E06F67AC88AEEB88CB60A2EDFD6443B7BED0D8A1E
23DFB784C08B232D0CF62A531EBECB83533047653BB23F4594EA0EB5CEAF1BF3
AF2BD991717D005316BC16504236EE1C3E2F76B888EFD2095B9D6414303EB92B
F28E02CDABD9817C25C1E0F34B2A2D93A440622DE0B30952474C73346041A16D
7B940FEECC7368222BC6CC643F40372B2A17720A70F8AAFF678147A7DDDFF0CD
0C93A4D51CC79EB1BD835F8946CAE9099E18955D2AD50192CE7378C9468AEDAC
454287699F3893B75C0C7AEED37FCF6D859EF2A9207410B1329946A52C993288
E0872198BCF008C87DD7131F5AD3C64122E311809CD3B39FE52809A5FAE733F8
44ECD03BAFF4DE25996CC3446D1BFA1526B01694CB23F880A7A367F22A1FA8B0
84AA7FF21DB6A5D1B7EBED69D6363EEBA556160241D7E2CBDBB2ADF8DF8D1C63
DFFF7792F86606EECDFC30F1F151C84F7637F246E8DA52EC0D060721F454CF09
33BBD4288E62CFEDA214836AB754B6BD3E4D719E2A5BBE181EF63AE8BE37CBFB
AE8266D6BCE6768079E43A11F773DEF225CC12FE50FE9CB4866D822DB961E983
E935B681533A2C6EFCDEDAC70D41A3212D9B7A4103F03EB93E7B94D48E8EBE99
6AAFF76B7F1A20101A98CECE951CBFD1AF50E8CC4A8413DDE941D9B7CA63D697
3D2A5190AAC8DFB4224997183C301AA481699A2EE9A7817B4267E8655DC74763
3BB5ABEFD4129DA335311F8977A28CB62272743572D63EFD5D600D8C5B0A453B
AF8AD76895ECFBC02638EEC3B52C7723C6EDD61FCD34355377D9A7547BF0AC2C
56BB21542959646D2740310B07D8B9E3BADE841A7637B9C2E1A1C33C8EA9CDB8
79AD2525F828E1912036EC86CB279E58916C6B911E21141E5FC45B156A34DBD3
3672E40180EADE6E4B1744763011E610473316063FC3EB53CD32168A9E601178
43CC34ABFCECD60C7F42751C5F179C1B7468893EC5C38D7C9E3B57496FD7C4EE
9F9A018F2BE9FB5BF3790C194BC444AC77358B56F12B8ED06FED12730E4DB5D3
4E8A0081D691F9A362A9D0C83E4E417457176E1E9F560D8D611238F2624E31AE
020C668854E7DF8F65472F2122831909714584340A91CADDC39061493DD952EC
C5E39F5F1A7BD13684630C06C32D953B588687F8ABC0C3C7DD24449BB4F76162
7CCC35773E1154718DA9097D77FFB4AD69EA7A43A30632E363B3DFB0F5C96BDF
8BDEB81BE99A1968CB584841D49ABFC3170601C5F1BB5DA4189E9E17361B3338
BC9599F6D3BF809E2FE538D9EBD71BF5AE673961DDC546E37F4AE0BBAEA30EA8
8988E7F61973FD9612198ACCB27A6B1EC128D3EB20C6E76E75BBECB487C99537
FB825834D73A846BDE2BA7F7668A629F32DEDC745C5408C3150FB3E24F00CB87
429A3F9BF34CADBE3DCCC85DAD0E5F146265C46F0E44FCC464B32F75E5EC199E
3A046722891413A1FFB19C6F2F34AF19269CCF5138A47D3BD0DF45DEC6D33E7D
D3B0B93B4B676BF51BB5052438EEA01D804A9BC42D3C370D2DEA53191FE46D78
7EF64FA23593C8AB3465BD3C837DA80CC8DF9E77D776FE9975ABE8913DA1A870
BA7C0ACE5C7AA597EF1FA0A1DC9C4C5266F43A7400F5BEF6200E5B1971C88A81
66E3348131FEC3BDB653F2FCC24FC9278546C1D803C237F8423398DB8A7BFB2B
EEB4008E3C8E078F9227B3CB067EB4C1C9418DC931C498C878AC0AEB6CE7191B
2DB4E951E51CDEABB983C43DBC92CE269FE474EA43A1AE6BE27050A0F8AC7EBE
677C79E957515A92969FEE473F417C1BD9D760ECC4FC214FEFA1756EB0BFD6DB
B647DEEF0D49BC9F2AA8A60405A47F05B3F79A24D98E895ABD128F83C14E1CF0
B82FCE64E132C38CEE20BC1F1DD4031062764306032B7D34A366BFA16DC4B4ED
25D1F34708D315B9EEAE60CE4F9298CDE23D3EFDDA91319001C70EFE33E4A61C
53870BC07F4F7A98A7346207770E8DAF0755428CF461BF1BC2C937507BA331CB
FD84F72A3D7B283F3B966303B6E8582E95E7AA30E208661BD290C96D0CF53334
F56179FA24E5DFC7967CE7D8EF900BD1C1419517A5FC62664C05B792B07C7E5C
B1566F8A19648D7CCFB8C81A65686C5207D3C1F20EC099DD810D39FC809521BC
3C335ADCB2769AB936CA579506256C4F09A35AA9F469E1D2159DC301AE34EFD8
71582A0B6A484AB29228853C9CFD8286445D34D8AFD4CD5AA3F4AD8E746028F0
23F1537879BBB9D1AB946BA0734152DB0E9DC330637487004C93E5A4ACB58F23
1CDB87ACF5BBD5335826D3E9D7625610814E84AD9BC3FA872F126C3FC4E7DE82
9C4124A5B063A661087521754606216732E22D6D9A29D18946D135901FF0F76C
D874E8A8B458F4091B18F3E8CACFC17DCE38112762A01094E6DAEE20D46DA398
CCB4C3D9E77CDB0A8619B562873F5B724ADD1EFB4F5CEAEB7BB36D2E439C3589
B9CEBC456F7F1D683FCA0862B56AB794EC3245D3B68A0B075419A66F4A9A2E2A
2742F1643AE3B7EDA7A334ED0844E1DE5CD155327B88681A8B366A87CBD677D0
22F43A8298FF75D7AF65C5A46108A772269EC347419F304DEE8A3F5DD1023A49
591AE8B5ABD84B6AFA9A642D762E7624496BDF95D87A99C485D660C166FF0C44
FED1C3243B0487FDA368A0AAC9ACEBE828241EE7E5EF1BC3CFBC88F922A1F27C
6779B75F4A3D8A60A6A51B57173D0F69F85F32F785B05B871E88EC10EED7BFFA
4AA140F11DB0A8CBBD7A91787477285EE975A3051AA3876B3BC353D084E56472
74EA6722C1BB5EFF997071C20389D23793BF19733FC76020CFD931914F0A157A
D532274DCAA5374ED3844759023AB9AD84E3BE7BC3FC26B8F9714D2870AD2885
7CABC0FC9F34522615C94A02DC1B53CAA1A40FD22C39D44227F5A4D29015EFED
588212A6AAF13DD77C98B28F5FBFEA042AE1EF4B5A53CD2ED848233CBE5FBDE5
EDB04E31A9433A46B88B266B1C85B18EC64200C98F4818F5507F62A5CC20D697
EC85F58E9DA6BB7BC493731D66982013A97A0C88789206F1FE92A87FA1E1EA53
8F1F2A531E5B18A03456BD15BE901ECE1D13AF4A085111961E3C645096082389
46BBEF2ABDC71263BDB383CEAB8885F57216294005B1F5975B0DE97FA3AA4C5B
98380FAC51CD61A0A2C176794C255C80991AC36D14F3F00446E997EC6B5AB916
6C1B657DF25A93E9BFA5DC530FD3B6CF20FA81C15070ACE08D8E467B8AEDD80F
C54901C56A7E3F5EE9607ED7FF53F4738111DBC7D1830B11B2F27452339E62FF
454DBF2221282267F54BD5A78ADBF5074D5F130B06FAA4E693043418DC7CC589
939A862F7E474103E8C9BB0F49FBC79CBCE0A5389C5E57E7724A9801467C9E5E
024E56504AB75EE31E07086119E108EC26E143F49B9397C016497BE1D8106CA8
FC915B00FCB1A2925C1E47009DF167BB23526028DF79DDE576A63ACEED60> |
67 <001C60D8A8C9B8998C078E9EA79E958A9B38E351458E77A203046C8BAB4E
095D0174E9160A8B07B0693C22B2C48F2F38B3FFD337A13A830A8F21A7404E64
CFE27D21> |
68 <001C60D8A8C9B89618B1271B49F9B729D72067911F89A3256B010D544146
AEACF7EF2ACDBA881D69F49B2013B4C4EA576C0EB65ADD> |
70 <001C60D8A8C9B8707C25> |
46 <001C60D8A8C9B7F44ACD97117F7341EC07BCF59665FC7D6368255E1CF384
D153BEBDA7AA580C25E2759AD167A4A13EFEAB6E4DE50329F10E1574BF0460A4
5A5DF82BBFF879D358BBCC8DB1E2546054ACA0F748091A76087958F146579A1C
92E41E6D684D1BD9CBCBB3D68DF5D9E0D3E8E378957D0E2F5BC14DE09CB55B88
4FC7D1F18738A840620B7553D759C8CFB89832819D308779DD08FFFEA9E4FAA5
572FA3BAE24200823D93C9969DBE9CB10C4937431AA4510B43410F13A0F0098F
4633A0EB7C9ACFFC9471992864E51EEC9250FD6882661F3D857C4AD49028862A
0CAA16BFD6F02DFAD665> |
34 <001C60D8A8C9B74451400B90AC289D8719B9772D6C179A29321D4EAA048C
12BDE19E436ABAA47BEC9369588F0CB2ADFF5886C4EDAD7C3A78EA487DB28247
2D04FAA6DD62A3FF915B933F032D30B846518EA6BADB0EFC808085D930C3EFD6
69D7AFA550A3F3D51FF5D3A675F2059D7F921DC5FC9E13D23647A371C5ADA805
24DF8DBD95A2B8FEACF457BD03C6D420D8815B16B2729BC603B84140B1FE6BF7
12430B7939317B6EBF78DB737C8E1A237367B07FEC7E026D0D5DC5DAAAFBB97C
9344D30464F3F64074C9E0D588E27A0C157F51C41B> |
55 <001C60D8A8C9B71206FAEADB75E732A07040982CF5063406CDE5E2F859DC
E4079A67AEB362660F0D4E0D4484700C2EF2FB2309D42F8F53083C9A266AD79D
FE621528A351F4F76ED73B2283F2EA86E721F76696C86BE153D9C49B629E00A7
CEBE2256E345DA8E93BF06EAB6A216E1CD512430D7FF71DF1E584B75AC233C95
C2ED058812F1C53CFE2211F9F481E5AACA1906F97DDCF6BF6EB0BE001561E83D
CA861FABA79A8AA9D4B01CA275905C52236357BD8D5BE85F3E1A2EF30B37D807
6A9F4AC2CDE30EDDCFB6> |
51 <001C60D8A8C9B7F6E9529A1B8E95E7A8148CF567716FFA1146A5B7920290
8E6AF282259F7EB05BDEB663E41CC1F17A25B6DD4CB5117B9C83203B23CE11DC
6B029989AB6434E8396A665FCE3A7208434A2C6B65B5E36552764BF59B4D44BC
B44BFBA36C00401FA7D25D899098BFA0502C0AE8C5A7A1D29D8566921A9BC831
AC1A4ACEA4C3B245F0790B13AEF645754B946AB1D03FBD36AE2369B8BA21DCAA
096E2307F877277DB5EB3AE070045EDB843ECEE085ECABFAF389246043763F9F
FE3083A0BDEB6207DB009A9057F7663B4BB5E8059576800F6EB3354F88C74B32
515A02F999D1D2DC00FD5CC1A6A7024A8FC4> |
48 <001C60D8A8C9B82F05F6FC21EBA978BA34269A617E5B91A14B619333710F
55AEED209CA4B304C17080BA9690B8B84F7C65A9C93597DB3AE44308973BD7A4
1017D6150845E9271F1076C5B522F8EEC95FCDDE17F1F3FD3A8DCA0429C3D122
D437DA445572E41E1575> |
59 <001C60D8A8C9B7299AAE89465DC31622CC0E8A4602A9766951F9CE129930
D86DC62A5E0BF08267AF8ABE97DD26CFC5FCFA46B010C38D9BBE500E27990C51
36214F4BE905C8831F5DE246591723F28D36E33D3FE3424D4438603FA9349AD7
0039175146E16364EC4D8507481E313F7831E8DA6C30574567BD8BFC4EDA6BE9
2BA20713EB3A03F75105303F4D069F8314DB4CC5CA4FC4DAEBB34281FB8A918C
74C29F4EF0B1FE5DCAE7139DF0FA> |
29 <001C60D8A8C9B7B14C966A3C8262E4B5D26A0F07EDB69DEF25138BC737A4
663100C712515B665F7BE106BE0041D0B9179473C6672124655C52E1A81E4D08
CE60F9BA1241E63CBFB07BFA9677D68602ADA343A34A02C62B5322AFC230962D
70AE351CE27B5FE2092E12FD00956998D911EF8A8F0C84EE5E788848CB308582
92D93AA76B8397FB0403E3721A1324482FB6845D7074795DB8A03E131A67AE87
BE1024BA96A1E1CAFE9F19FE4B598858163125CE6E036FCD9649A8E5B6FB4ECF
49DE820FA7671672304E83F8907D37762B7DFE9B64524B2A52DD2931F4A88055
65BE71BBFDEA6EABAB> |
58 <001C60D8A8C9B7171E84D784DE0212937904820073A5B693D7DA59B48139
E4C27CFC042D85501DBE99CBF72A2660F41F334ACD8C75FC0FCC80B1916DA14B
54E44D85B24728298C434CEAFFD91DE662DE867A280BDD06F9F7123D97790CD5
23C09ECEAE8168FDA7FE0B2A3B9B0E2136EA761A53B2A5AD60D823F32F3968CA
CC47CD5AE9940632AFDFB740BAD098DF49ED61FFF35363AB25D11C6D0DA1732B
65AB6CE167E9E834C6FCB23AD12D3C1E8160FBDEBBB22AC7205305DCEED41314
FF130C780C82FC4C6A9232AF7F2B74A13BBE19E2AA1803A8> |
43 <001C60D8A8C9B7FA1371843CCD491FDE150CB165B514EBB080D14FA342A9
53ECAA51D2D55679E51A40BF2123EBC5D15EFC63821F83E3144FDE8216C5620D
95B6A980D76D0DB57559AAD92658A7DF7F2A586CB40E92168E59A9FA7C93B107
8CA3D22A09FB355DC38F02C1165876B7722200FBADBC007C0690C4ED4C7C2D02
BA32AB3D94DBECAF7BBDD3D3D452F948FD1B749A3ED27114C2E06E58B6FBC079
D1A5D6093E5D117F3ABF9648CA5427A81B37250D479A99E047673B13803421DD
CC934D5EB2994F0CEB5C902FBEEAA4D450F2DB1131E6D30DCD27A5398372BCF1
C428A796DEB2BA22> |
53 <001C60D8A8C9B7B07F2901F87A0D7651B0FE28A3F3BBF5770462FA69019E
2641E0EA00769ADFA09C02EBB2C7D08F5ED3F6F479CCFA9566FFC1296265D069
237196651016BD0D746BD5A92964A7A00323348E9CEEB8254A09044DCD429019
4CD3BC939D76D92DF8D37AF13E3381DE030236C0C864FFA04734BF55B9F64912
BE704FF08D439B463A79DE31385BE77833EAAD35192D2871ECA737608000A7DF
179D6083F1ED2DB83B5349F38D3DA0EDE855E02597EC1C12335C572F8965C196
6555A469604948CA291974B7314251E1EEDD17C12FFB144230293F327A010A98
4AABE3B82FE228B5D411E247FB179AF950196150FF67A87E75267D77C01A9DB1
ED5BED11B0B0A8A040DFED2D737D4D32DC88BA376BB41853525F72AE02D0AEF3
D9A910F143> |
52 <001C60D8A8C9B745265EF810AF545D328269A6332AEB1A0A529089FF3400
EAA2220366EC6A595A60029B716CEDDC2A0552EFD0E4D0656CEF17C064F73834
C8586B74C6569A8C4BD13F7FA998B7E9C1C8B759124F466F33C251C12E5E8423
D24459FECA7BA2A0150235241480156E7BE605F72C1F1F90F562F12AA5DCA2D1
4BAA2A30219B29E96B25DB81D91C6426F2EE8A0D566056B0F2A568FF58BD10C4
8BAA6E0551D5A465802BA9510963C9177BC6507F4376450EC1BB17A7D46DEBC1
1BF37CEA3740B8F4250DB800> |
32 <001C60D8A8C9B714A577D9307A7508321E1AA5C30CEC349E005D60E41320
D4E594C33D408D60AD0A1A620312EC31B0734D31D59B6B87725C743FB31AE9AC
303629DD38DC5E14122CD33DE704DC07AF67662EFD3FCE51FADFE9C66EB5EAB3
7F2735C00D9C89625B14E892EAD4BF5C4934A9F20A5F3136AC0FFBA2392D42E6
C54A94D11BDC5EF3759D27F431B3789DEB367C0578E0A3AAF346A330C3267940
9F6BDD0351FAD9AD222304D5CBC21B9DE226960A6C37CBB9458204FC6E291903
9CB1F7D46497E29489005812AD7BB6B08605669DC2256D5FAF66F7D8C72BE6D5
4066AE6DA0BF9957D9EE1F2A75EB3E92F5F06D2F7C0487E2E3F11C4DC4C20100
FB204DF522593D4B96BE27320A5A6E3ADD49C11669> |
33 <001C60D8A8C9B7B14C96083FC7B8F383EA1D0D45F913A0520493CEAF029A
BD70EE507E1BC0ACCABCF5AC340332642B709A72B7236C2A4D1F3B97BFE5E66A
66AC6357D5776563E457BD5E914DC04CFAF0340BFCFFD957A5632E7573BC7072
7C3CE433A972BD4E6E222EFC1EC917F21E3B0FD286DD908607565E808F6350CF
6EFECEF8D9459FF2713D2076B4632CD75580C77D7406D8736B02760991B064B7
741004761E51B325D824367CC853B1FFE3677A03B3FF780373CBC73C9CD71C5A
C4E4E0BC15B0452BB80C5B2D55F9AD1481E9DF46370429F15E312859CC0FA02B
4AECF56A5C9BA9C4C9EC3F210DF5A3550E7CD511D44B4564C930D24A74CA40D9
A7D157BDB87471E7DFF30B2D922F0A402FFE4FECDDEA40CF9A941527C09D195A
236B889832524547DD694FF1F5A8B16281B41253D41B7322B8BF368622780F42
3FD756EECD17A373006DD43CD7B8> |
31 <001C60D8A8C9B7917E94E334AEBE9045FD9B9FE68FBD61E643981BB19A54
7C7E9B4DD0E31B86E6B3F34FDAB6A76AA837BC6EC0643A34535102BE1A062F9F
43B2581A39B86E6DFED24050EF78772F3192D0EE9190305DEF630D4530A9230C
31B7F33554DEB0A5037DF2A19B3C156F0A9D9EE434D49728109F65D3EC4B366E
37079D3EBCFAB83963B644A5EBB3E8DED38A93168A374E033CB3E7D3950682BC
C7A02EBFA70401B3824B5FC5F423E855433E602FF627AD9B8691DCD90A1F06DD
3ABD51ED27CD19FD7E19BAA7E2F9203094CAE7FDBD1BE34204593B88107D734C
F2D0D39C6F74EC240697> |
60 <001C60D8A8C9B7FBE1CE8462AB77F7195A190DCE9CEDDD3A86FCF3C736FE
EFD4D9B528C0FE57743CF46C83DB923FDA1E13B9D8C94777F1E6CAA6EDA43A8B
9B9017672E8EFA37F11F50E9AE491B5F5987AC431385D2496192670C3B1AE22F
0B8843A00156818C6D0FBD18FE16FB1C58782B59CE182F58EA5415490950C98D
9850FAC6E1898D35C24F92632FD7F94AEDAF6CEBD12529C260F66614E78AD887
A9C7142710CE480BD719D8F72E8CB4463FC40BCF24F837B1889AB265973EB634
56B5B939AB14ACC68E0BA38F5B000FDA20EED248C3443D804D37D79C10C50A26
BCB44BF31AF0B90CDA04312C6F> |
44 <001C60D8A8C9B82E34BA33C3A439EDDD43BBC0EDF4E4BB615A6DD5E80480
D27035A6B14F0B2E500CF2CBA9AA47912287645A07525E600D35E838D53A921E
6018B4639A144E91C4ACFE173AD329015D29F2D97DE8B46EFA0867BF3A5A7C2B
D3A8829BD4C7346E507D60768DEA5345C322A345594F669AE6FE8000D6BDE800
B668A1C9FE9C6C8F77D3B3567B5A28DDA0DE7B2610DE3478AF8B8E585202F183
B3BF0CA87EDF379171721F73B81DD5D78E51B63C6AAE9C5734D689> |
42 <001C60D8A8C9B7B3D0E46AF2C64DDE98733EB564888A579FEB80F2286E78
C62575AAD907358645A3E3D9EB94ACC2B55A370D93CECB9EF9FB6A2D722D2001
07AC74AF0AA7E4AAD5FA51159A0F3A837B8B094DEEBE9F19382B74B4D8EDAB65
0EDEABAB96D612FF306901202A3E19BC703499AEA17F92648A056E546CD1F564
05E859850D06F3CC91152AF45ACE3ADEBA412BD900898861237BBF553E746228
1CDCF9196B1B8EB8DAD6A3451BDCABA8705256FB10202096B40CD24FB74B7D42
50564167BC005530B46CD4176091198638A8BA6CDAE2015794B8ED8472B87C02
E9C00F841FCF53A5E442028A782F8AF885A7E0EB4770F33A83A44FA36CA84AF4
ADB407B7AE21FC36ED9692495C90ECC8D27B70E481F415F8D50570CE99DE63BA
E459C790E1C01B8050C88B9735973D03A980477BEAC13D69026685832774A7AC
D38598F13BD5E0A6E3B3BEE3BE11CE224BE3071DD7B9663EB10AE8741EBC8D35
89149CD139FA92F84F56041D413DD677768DD77D6772A146EFCE5BEB69A97429
38B16DF0EA7ADB1B93AC1459891DFF172E14D0510FC9130F7C649866B7EFB76F
1C437D65CA93BD5E7F055AEFFE897448ABD9336D9698ECBBE80BFDF493C1E5BB
C4CD777CB8D9795635A928AB50465FF694E7AF3461627B980FF3BC4C5872> |
16 <001C60D8A8C9B7B202AAD61D78A113C570C01A51536F46D3F6F2D1896FF2
02522D18A8CB347A8EE507333A5B7EBD66F348B489A54D1526E609C396343ECC
BBFBC6209789BBA801C3EAE13B2386173967AF32D5857DAFAD66C14973E5E846
C03EB9C7F27BF55F8A26911AE2E9306036F38B378B21055882EEA685333E6A20
6C3FA7719C574141> |
41 <001C60D8A8C9B6C7692EF108B42EBBE42A0ECCCFD29D33B000C65C2F1EF9
B73F3D109E249A5C9D5F3AE3CF25FDC5653EDD2116F31C81AA3F64327D2809F1
EEB0E76AFC3584BFCF156866B1D3DEC52EE69378EDB3B33BAE48278E1FBD5E18
82E5B5EF3DD511BF07A7FD765E95E71F3A5820A8B27F454E8BF4AD4780B42B49
A360EBA5EAA62C183AACD142B67F9C7C80C62F96478ADAB70F165D847323ECF9
DADF9686E13D40F28E3CE6552876ADE717F85CA7F337B0F241C5EB27A4D847E0
59A7B3D884BC808322886BA75A153665C8A1F5EF960981F9C563D6CAC0C72D11
A2BFFBA34740C26A8A07E01D66266141F8C7DC85E98477C9FDFD75E80BF2F15F
4BD5FB34367AE0D670F113E81C288693B10B4EBECBCDF1AA567EA3DB25BB35B8
4E8173A4E69078DD477FBB1F9DE004744815633B60AC465BD9F000293BC7FE7C
57F42D4A4E188324E16FE7E313844DAC01F38B3919CB3CCC62BB> |
50 <001C60D8A8C9B681FF6348825FDD864935FDCFF874378046CD70EA351146
B8E89F492B8C40376CA8D9C37A7930614C8B2DB68CCBE3AF9DF2B0ABB069A5BA
3725D334B5033904C37FAC7D479E2D6115550ABB7A3CE51DBD7016A65B062C05
E6D424CD1E7553A9E63C227C32E208822FE7A5BB29F937821D77884D168A3C36
7285878DC8A4D4CB73AA126565EFE05315ADABD5A13971F9A310A62BE9617794
6B50FCAFF28F892D769E4999830A598D398228A8CDC3892F448003E52DE3EF8B
FD96CA6B0555D4C81F7663F2CC86A60002107491A7B34DEC04BD811232C085A6
960D36D1B7B49D8E8D24FDB3C0CDA77424B8B97A0A2901631C963F98B49441D4
9927CC2237430FAA9CC4> |
63 <001C60D8A8C9B7B5775030A95090DFC03833BAF7B0BA088FD90D99A4B1C7
E9B30BA99D824FB20C718C0FF8950671A2EC6D0C9517ADB97EC4A2770949EAD0
BA8985F1D379BF2B9C0E0E2FB301F9BC2161BDE13D9E97A0569C60D0C933F530
03AE81408D9CC05630121B4D07D1AECDD83458326A9B0C67F173A385BA6CC2D0
F795B6A446FC155166F5A63E5C92FA60D226886A3D2BBC2BAAB90448D5E81CA8
D340162D3A285B1F348322055045D084A228988007CAC1D68E4D474CA375D957
CBEA38A98A0F589691DE7EA73707611D4F1E4AA2B2FB4168526E2EFB461A4DE0
607474C0AF90BD3B4477A4EB7557C80D5986A1E077F19FA786146EAE> |
36 <001C60D8A8C9B82C91E12E3FEE669BE981EAC817063CAD94F3192C854D5A
9C92F26616FAB20FAE95A95504AC925FFF59BF83DE7A9C4906FA3CDB8F1AA6B0
6DD2360A2A58BB3474DDFE7B15CB3970607413B5CEBBC2F5771A5D3BFF4A36FC
0386072ADA6ED938FDF70CC26C3AB7EC33D1041A6319B6565B3AEF4D75EFD606
B0900246F17C2FBDE7292BE0504901C94031B3CD8B712683EBF584580525FAC4
23EC84859520D527EAA0ECD4C867A7E9646B2B000FBC28E9B04FCFF48D1C52B4
F2BBDA1E34BE85789C0DFFB742C14387FA3DA71ACED69E04E675C1D9C219D89E
FBB1EBA29944D393E3C32A6FE3BB0EA0A927F08A26762BA383B2B6> |
37 <001C60D8A8C9B849F220D064B8D2AD86A4114CBEBDB33408805D7726FC2C
1F697DA097B389DD525C9D008B4793234EF1725CBE912CEEA436A97FC020D651
9A07D7A3FD2FBC4624F822526D357BE04F966C3C6DB1A6D30D35939258F60A79
7D91C1D085764B2239D3F526BFB22191EA483D58A48BAF13198EF33E3A2CA0D9
AA1B320E4B7C97DC0DF6165D4EE487BAF346482F51DE67620723CFAE2C11B599
E0215D9A38B313A2350D9E84675FF06846F663BB878144B6238FA5180DFB0166
5CEAB62FD1CE3FFA9A7BDEB5C5B64E587532152C0FD04D626F33276DBFA1C16A
E0310761346D866B32> |
57 <001C60D8A8C9B77FE2B50DB75380E3E496DDFB20B44CB7750BBE9E50C133
44130B2F6BE45B60CF3DCA878B02FDC0E6A95EF61F57E0645B6AB7F065816083
32ECBDFF61C98F1F997C4C11A732284E42AC4772A5CB237208D241AA9B74CD7C
A4E1EBAF6D96B7DE03231DF15E4A666A7872595246B7D711E64DE0D34EBC4814
6B1E879F98A16C7D66D01B07AEDD80C934D24F529E6FE9ED9C26973D84F0AE2C
23331A07AAC6788E84E1F57FB4C5AAC699E7C75AE25B8840AD7A763031EC55D9
34F245C1F52273ACF89488EFBE85A2C95EB296391EE3816E6F3494F3EEE514DA
F6F4F49780C5CB39F5E600F08414508277B6BA3AC868> |
61 <001C60D8A8C9B78C66CE905778F57E262562CA36F49F9A4E5856621D08A3
30A13FD5FD9399237BF53C627C3E53D1A1D0E588928E3BB74CEAB3CE1F55CFFE
26D3648AA4B88DD52F7A3B5738A8CF16BA79C9FDEC768A13CBCF2B40EF7AFA43
E825A43DAC2AE1FE4DB24EF7BE404E5D44EDFAA9B3A06C300533955277800535
13C25A3C45FA4F4DA5547A34DE90> |
10 <001C60D8A8C9B882F8F4366C06466ADE5761A8A21BEDEC6EF455659FB59F
12BDFA08545FDCF4226030CE6F4E165CB53584> |
27 <001C60D8A8C9B67106EFCEB10E2A375DDB8DE1C51107833E4E86A0455508
E0C27E2D5E5CAB9A2F66FF6D758B92335EEC4CECDD56A17328BA430F39E906D5
1CBA72A75BF39EB1C1E3156ACE68BAE6A715003AD02FA56A58B21E902CB230AD
59CF90E1ADA67E339B7BA466525FBA05647C91CC6BAEF6D211427EEC8E387CE1
8D6227FDE84E9AB8694EE11C6DF4DA901C67D0F0A1294EA2C8F377EF796A7D9F
50837414A70624DF55C7371FD0D2E37674C34F9E87A050F16F1512C9992ADEA2
8CBE05BE32DF7C6F2C9D7BC5404906A3EEE811390EC36CE00A8DE9BD503276E4
527D0819B19EB0B6A5FB463266B26DB6E13065DCCB58D201B8280C814AE80496
9466752D53CA3E9B48> |
7 <001C60D8A8C9B86FAE25D9F3871ECF28C12D7701D533886D89480B230EE82
4473336B26F5675DA80CAE6227619E54B1D80F997CB05C8> |
40 <001C60D8A8C9B60F08518DE2BCAE420550F65DE8FF30E9DEAFD3784109BE
5403B129A8CE6D002BD7FD01E944DBBCE30B339648DC2990CAC421AD2E477529
7112AFF874FD443D911EF8D4D6A879CDAC86500EB83646EF7570D94B4674DDFF
6387F1C8C9BF9DC8544655596C6B110B1562DA82FDA366872FF41ED253EE19AF
9064839BC74758719110124764E194371189EAE52DC1FAC42D2F8166A04C6811
6A6B8883716EFB5CBE861607EB21727C7FACF7DE6BF6BC7A156D23545DF7AD71
CFE6927F3F38B56EA04AE91D184D7CCAEEFC85563475F7F7824E4842E1FED91C
B4CF9EDD88C484AFAC976CB63287052F8E0881B107D0ED36EE62C29B0993DEDA
00F92CD2FA2B2B75C8797032FB04DB52ED297A803AE6F5C5B5B0F26DD1032FB4
1AC7E9E70AD7F0A33559D8410D06FAE04EBA5277FA3BC8122998CD87BB59B55F
6093991633576DAAF7BA628C7BDDCA5EB0664995C0C6FC9B3630CECE433D3B2A
5DB14C162E3ABCBE6B7B3ECE81F87A34730F9512A4DF8C0303DCDDD47C2B6C93
D2CFD4038A3B2EAA6BA1D99608101FC10415E1EBF4EEA5CCA1C8A350D3> |
64 <001C60D8A8C9B78FDB8290270BEEDA24DC8D35F70E86ADC66EEF19B467C9
654DBE6DCC185F82868A81B61D9864D89D9AD17B8993B5EA3C53B6EE6FC7F3D1
264C3B4B037ECDE42E5239DF2FF6C24E23097E56369CDDB5E1B9C4B6C7695E7F
EE1256607F83E4E001986651495287AE7A5492B25E33510AAA98EF72BA0B0C68
67CFC85A293637D7518A61144D02C15D8DC168297ECE904ACF40706487DA5FC1
D6B2520C0284E0E3483AC0B1F008BFB44315358C10388406741EC530FB66B855
779B80EF33E3800B9D1A0D8425420040CFF44E57574F43C0F9E98EB474624192
E5A21F4CCA07A4DDB3ACE1F4AAF8B26BA0D44EA422FB5D60936D66AF0E1A2475
31DDEE252E5083AA5E4A5CDA900BC2B7EBFB79CAF85A3D354CA68E4045FC0B91
B08D> |
11 <001C60D8A8C9B887F064199A6D979E61A8DA77FD92E59504261778BFD769
8BD0CCD9E23F811EA4096452D9E893B136AD372B47278EC50BBBA3FF6CED551C
23FE21> |
22 <001C60D8A8C9B61C8C17F2DFAD4F524ED71A74831A2328E42944A4C75046
E9929DFC47B7FAA6B15E84E418D9F0AE1EBAC4E146E4F44766ADEE5E104FFA74
FC203B5447AC8D6D318269583031175D410C140F7F58E2A916FBB2CE6B3524BB
1D801634F32E3CB692F2A23B2E58F74E25917FC5322F1959A1D4E6A020B2F659
1525DDABE5634CC7D33B66930ED550C7FDB171E8C2EFDC25AD163BF57D1F387C
ECF3EB64F89C0A440786F696B6B3634221F93D0B4234858AF478F292F16047BA
430F8DC149EBEC3BF4D881626F4AC915E31094EF277A3B6DD8E1A52584EC7C40
F857293A70797EECA9C351D589C20672DB92B96D1217BE> |
18 <001C60D8A8C9B7B9B9D1295910AC3609912D83B3B951058AFD088F239706
640DA82F585A600BC2F10A15E31D017EFF5626062EC861304564A00D97946D57
F625B700699292C750871C3E4471BBF25B384CFE6048E39C7C0B3C25F99A5499
AF9CF451BAE9ED19E55792611DCF9CAD1A1A47FACEE6E9EB30A240642B270040
5791415203F5CE04651772253973DFA79972D02E1A1753D45DE840FFD9F7E0CF
399CE6B60FADF2B4ABF33EB672CF678E0986DCC3D9BC831C784FD1522FE21C01
8C22D5> |
5 <001C60D8A8C9B87C1360A2538E3986AF703C5AC43E744EBA5DFA2EF0EE091
C1B73F4CBB739D7A77710227C103394A81D142DCA5085926A47FEE74F18201E3
2971FD559F4A16938293A2CFACF2251EA38D5DA7E6553DAE3DEC6094D71B6009
B71FD81858BCCA1CD0ACF895C3E37> |
25 <001C60D8A8C9B801FDCBEF90380CE3EF8D16BF61FDC055CAE7C0AA706A7B
813736778381BCD4AC3ABDB84CB4DF57B58CC07C62D8AD66B988022F8461AADD
C11D308594EAC73E53AD495B0C12F76BB7273B9987F7C6197F1D0BA51316F658
C8046DA6AA3A96D4FF14FE8441D48EAE9A26A365A2CD64856CFD> |
14 <001C60D8A8C9B7587029F4BFD196EDBC15061A1493998F0B3ADAFD34A426
2A15217C3E8453B2A475B62151108DB2FD203770EEC0A6612EF4CFA4E315C628
8C> |
26 <001C60D8A8C9B63B8D98BD05B9DC0A7797425A76E2A3F2FFF72B47C2C6FA
54A4823459CE61E79D613C01408B3B33EBE39C482CD1C6395EBA407EFFB7E9DE
1F0F4C1AAE27DFA52DA004DB4C8B30B638BEDCDB03A5E43C32D77E7B85A971CD
83033197A602E4B601F03F316B60B0F97575094C34E0FF23DBEA79A4F26F5C31
B8CE74A3CAA291F276DEDA15F85B12E8A09B05254465C30A8755484EE1AE946D
2B2E14027A57FD735CF01025EF3C96EA291C14B6BD6A10E067C5B45EAEC80BA0
46919D34B40FD667AA93FBBECBDF6C53356C4C5C9EE3F838730821A79670E3D7
43468AF8F2FA1014475B8229DF9B02B0C2EE63B7C6BD8E7108830B06AF781749
4A1091F254A85D95693D18CB5C37232353D54DD7B15E49CC3CF49EA0B44820A6
81D8743C2E33AF3C0B2AB708D1360B0FF89EA274D924792D12C1AF78D732D4D0
C5> |
45 <001C60D8A8C9B81A1486A3BD9CA8199D05E8B16748CE368B68D5DEB72B35
4E1616699074DE75DEC1A40BEEC789B5C5E231FF111BE0BB7C87DCFCD17AB982
9927D717EE3392CF36BD892443F7E3E34F7BD4F9738A4AD3B32FD1CF419C0B82
DC98E5E08892D80E442C471611A6BA6D59A686FAE7F16C13054D0A083BAF67D1
3AAF25B2D22CCC5B422A802E2FF970FA6EBAA175C0AEAFD9C1B841375281ACB1
E50CD82BA8164801E98F8624191266925A95813A56AE32EA9A7853C9C7C512DF
CE> |
54 <001C60D8A8C9B78181CF8B7C7C5AD4213E441127F8A43EE29D465609E5CD
CC6A9BBC68E80DFCF5DB87A12107DFA6072A6DE4353C7916479CE9F5584FB3D9
4D108FB4C35E29962B7DC61924DB121198F7B96C28AD5EACFAB3C20491B66871
0AF69837669D6C12E08B9E867D73C7403E7D81A8DF6615173011F0A3A62E5614
C04DAC7F0BD1036C7E5C1F22A7B737273C5149E0BC763B56E2BE9C2B21C23543
C637FC1F3D1FF79859898AF9A843F5D13967EC0B6585782CA19A90B964AE8AC5
4CB093C0D4F47A0069A600CCE31869ADFFB66E9E0CC26E2E2613F153A36652B0
7B4E5B6E7732D7983FE2BFA22F8A968B8DBD3D09794E076E616AEE82655FA7EA
28DDE32247E9B01E6F2BEE8BCF9BBF43B9647645AC7A261F57199CF2CAA42443
D9701E2F328A63C64BD2E4D2AEB3A2AFB3AFF73DCF86F500E348F2C9F13B4CBE
595E2E567C21CDA39DCC71BF5D16C95856065C30D2F2DA8F76A9> |
12 <001C60D8A8C9B88055A84D1050CD6E4E83C5E017D3169D6B00F2F2BD3496
7CF641F573E320A52F9834BF77BB7D66AA835CA62EE574A4A0C5A49FBF7DC341
BF801D6852183A48491F> |
3 <001C60D8A8C9B84325288E1AB3A92270DC23C40FEB03DB635E2780BDCD20B
AF163EA25A088A7D1CFBAA1C22045A78672EC75153C0A40CF529B5B3BE790F26
4C09554232763D97EA1C00AF0D4E2C9C033DC9041E0F145D99E762E862375131
CDBDAE07D1B903A5964A7C1DC66491A02DE02D4D9DE755B7A784B687CEAE11DB
BCECB4CBC78401ACB26F4F8EA329F> |
62 <001C60D8A8C9B61BBF8B280DCAB01D4197FDB9D87BE5A6071CEE8386518A
D6FBCDA431E467485D0200D59A09FE5611CA7566C35F187BD5EFAA07A47BD4B6
5A6EE1EF76DB5E2DAE76F89BB55EE3B1440E93C2544BD57AD0B33936CF037E67
1658C79975A62F3CAC3ED28DA881D1D754D8D616E65BE3672383AB5C434423C5
B38075B0210283E5AF338B5C0F91CEAF60F5E46CB6C8A0293BE027F86E03C123
1B40D0B1298A8C0CA3831BB94C2C68B282EA575E5DFAAB0CFD5990B0F040AE55
ED51AC7642795FD3B32A5941F0F80125E466EA0637DCA598C92DA5EA43F102A8
FFE7E1C28569AB7B674B8930C9FF5A41B50E5ADB5BEBC37FCD92ECD06FA6E886
405ABCD3BDE93811810B208123FD3BD7CCDC0D6B1D11C84A7D382CBDB92D3A33
1AADFA8F818E61F2CFE0C2E84FE9C9ECC5AC0BCD6309BEF17B2F9836ABFA693D
1D1B40D0A631D26AFC44573B05A3EB42DE5ED6FE72CC6504089CFD602F2D19DF
210CD2EE2E7E63C2B4A9C9D16530C27D898D14C8> |
4 <001C60D8A8C9B8327E9553C785044DB6227C2B7491826649199E9B6572E7E
677DEB6772F2B7851D2897C133E2354F3F86FB21CB951C6E6039A080DB90B4B6
22AAC99000CC7461FAD6806699ABEBE2A526DBCFB3643FE0A3C230EC7C963902
99CAA9223C011BD3DE15433F363F37F4BA6BA3477ADEC35E8CD54BED8A793724
E92119540E5674590941D4535E2762CA57C335FCC9A08FCF5291B> |
20 <001C60D8A8C9B89A424CA67112ADEC851B8855F511B35665A618324EC873
0A00F1F9063308BD0C35B0B531CBFF55DF12F220DF526ABF4AD37D72E8962D2B
71A3407A2D3A3E1F10FCD3A7F2CAE213DD3D5916842A469F7C4668D3C63D7437
CD2ACDBA427E2CF9A981F229C26EABA5714AA3A2BCC3741E3B3FCC870390D514
8E3F188DC9807106F3903F8312698FF344> |
15 <001C60D8A8C9B630AC32BC758516E89C611E1EBA47746EB731B24DD84180
72272BA096BF7FCA8E5EAF7DBF0DE905CDEE4C46A69AEEC6DB56D004AC28E9B8
BDC3DBCA156412176DCCFDDE85CE4F8E539E2A61541DEFB07FE7E5C056BBBEF4
5A891583E9C1AD3625C38266BC66837DB935DA1D8DF252EB17FD1CEB7D7E75E5
362BE5E56096567A> |
8 <001C60D8A8C9B863FB771169E52E2B25516F297B2C187DBD1AD7013C83F0B
0643220AF0A4FC496BE2F70D4AD5F> |
17 <001C60D8A8C9B7B07F04D46C1F3560FD1E0A00DDE36E955B40C9A056F59C
F4F0C0B3664465DF92887B50A3770CCBCF015AC4B6AF1B67E16E1B3EC71BB53E
5D37D5CA059879C48005AE4CD489939691EF32E184E995B56FD7E413E1254E2F
24A17BAD94CA47D8CAC7660F0DC30FBF289125F5686BD4BCB0773DC60162531B
C91967348E7E29AAEE194B48205AA9DA9FB95375F3896E07AA107A1B3BA14AC1
BC29487CFFE50271C26AD5D6AD452512EDDD39DE3E6E59F84501455493078474
12> |
56 <001C60D8A8C9B7157BDA514B062B3F2B6BAA2AA6F8C24EA37F9D360F16EC
A1ED95CD97EDADDD4975A25FE6C130F8FA6C61E9395776C733218E8D7A88716A
8D5E680E6510A181160FA7BC67BFB6A5E8513D7DBD651EF6627785ABEE69DCEA
30C9A755D3C0DC7C9D80140B6C8009FA13EC563590474C2F02607ED82A55F9C8
1560933152EE54BAAA8132B05C1AF59BBCD222DE4EED816558E05D258F00CD69
C6075EB1553B3CA31C5AF887F5BCC172A66ABCE11BE67257F3CB5D000229B58E
DA1B90> |
65 <001C60D8A8C9B831A9834032505AA1EEBED92A5CFCB0E3156757021E8EB2
5C70AD1BCFEB598F1DF8F19893E5C045511C93F3E09B019BE2F6F2866505A4E3
AB196C2BFBA261E31C7F73B09CDE88452FD00790DE429C0BF06FFE7F10A9006A
2DE64B662192EA464149699B67EDCFB93628ABEFF47E> |
30 <001C60D8A8C9B7BB5CA55A444AA8027CCA3CC5CF3C60BE37116A4327C2BE
5290C596542171EB48DD98A63F282D9549107BFCE3DC8AF1661FC4F930BCAFFD
15EE4294ACB66395BF5C6AFF6B5BFAE8DE0EC855C9862134675F2B6D536BD07B
DEE63E1C6194CC5FB6A580C706DE9B95DBAD98217D895113510A045AC9DA604A
BF36CCDA0DBB0CAF45474F427295F8F757B8F947146D29601690C13DA411693C
95EB72C3DDFA22F493E693B39690C36ECEF1ED4E7F795A058A319F2DD731BF14
0DA9079D88C3EF9D45DCBC048AB76F293B9515725B2AF8D7084D487509F7B5AA
340DACC003DA91EDAE08004675EA507F453D82CC447BCF13F0E6595F97F615CD
0F26D93DCC9ED74B89276A7BD6BA39D2E35CE2258AC8BD1A04196F7E8D4363B0
F0191652E8D2CAFE96E24F6EFBEBB3A852182AE7DC707FA0F8E1AEEF24E494C3
77AEF295E2F4675C1F7BC025593FBE6C3EC9DD1B80BC462592B2ED67AC80CABD
8C6545CEA73D9139D88F7DFDFE9659> |
23 <001C60D8A8C9B67E8BCC5E7F15CA85D973DAD005B6F549F77550B46FA740
EA651CB5D68777DFA35BB6C5C1DF481FCA88C8F45793CCFC889906FDAF4EEBC2
3AF1C530CA689407DF5F2FB82FF560785B935F96763C48A1617D577E3259A288
56F1A696359319307D122D114E462D2C1771B0FBD421D40D01572734FC6ADBFB
2730D3EECB536B67F4F3B12E45663150D7676F04DA866435E9F50B83980C7F6E
880E168A5700806306D2772A9F485CFBAB9D7AB62F4D> |
35 <001C60D8A8C9B75E5E1AA069A5B042028E9BE2614B7CCD703308CD263849
3F86CBBA6381F305B4F69BBCB3CC93ACEF71CD967F30C688E2437F76B3439D48
573EB5CA00B13AC4A17BEF4AEC9FE0F019278A644156B141BE773690379103B8
348F6B7517FDD971EBC4255C91B9D1CDB6F5D9CDBFE8ED70ECF11168FAA4913D
F663B91374466C1D8E6964EF645DA4A7216A7F78D5388DD7B587B8D85D563F88
9CB81DCFCB7D85508DBAF10302D773576EF90E13BC9741BEEAA90431EE6A2A6F
434212CA6771B6C1FC66AE1FF9EF4963B9AC20B1056D957C79F57F89C389E040
69026F18F6182A5E73AB> |
24 <001C60D8A8C9B673A57362F859F3BBC05D4ADA473A860308E352FF64164A
F1EBB72D74D540B9505DF7D6FEB228C9BF7DE228F0144204166C7F6D4B9836FA
8BDC0B54E4C5FC50E675C6A51D2CD1DF28673A119F0EE29162FE808333C685BC
8BB4246A6C10C51BEC18979114D74783D108B6BFD3DD62DC7D28CD5D99885BFB
EBE4B1CC0F11EB91441FC791FDEF157FEDD7513CC8CD334A44409FFC7FAFBBF1
BE5619F572E9F981A2AD893474B742D150CC88A98D9102DF17671813570B50A5
A6D7DE23DB0E439345AE052826C679ABF7> |
19 <001C60D8A8C9B78D34A56AB09CA6B7E0F3C9C055D45AFD2C9E0B64DFBF1B
CCB9F7CC8F999FB3A750C260C919388C16C401C99D6E3913FDDFBBFAE2B3E7F0
06AD264705636D107E0BB972A9BC89B93DA688C9A94DD784949073074DF924AA
8B1D570EAD3701A0BF6DDF29BC02E848A113713263A9424D47D96B8EDD1A6752
7CA142C40392FAACEEB0A66592D086D13E497A0E93872122966EE4EC17658864
165D9B18167D9534420482444868B898ED57E5ED54C5C9A38C6198B7D52A5DDC
C14C54DFEBBEF45B20AB6BBA30DC6CF619D2748A536EF1CA3E25D2A8ED3D2047
91F86D7022C62E5EAE42585D7316184C422DFA> |
6 <001C60D8A8C9B88055A84D79E559A25E4C109FF17F62884B1D800A98E4A6E
3620C6537DA9B69CB94204B7C40C3AA545B13B7EAB7EE0DF5B7581A985ECFD15
D25D0F4082DE66EE2284B64B31EC6F2B5605CDAFDBB2504F9B267D5FF18EE90E
CF026D6E3BFEA446D587781AB72CD82B317D5BD13BCB6879C99D38FD5689D8E8
94D3EF6ACE551E3B0B58D61F54E4DB60811601D01D0918713F82B7EB43B37632
881DAD6EBC2A5AE457B494670D36CC459D584> |
47 <001C60D8A8C9B7F44ACF0B4F89904600D22E50F3D7511B2841BB646069EA
8EDBA02627F5F0EAF4DDBD5BC3B4A6D24250554CB7895305BA52833B23691713
FA1D808619F6C3D363FECEBC730FBB53E2D2385EF830C7AC89ACD29DA8DABA42
CD4C9C82BDA4B97761DDA18B0FC5C068ADE76B0677B9853881310CA6AE947738
A0F699C83E1CBCF05C209103EC1F155BA8F10CEEC3526C20BB5BB94D31346351
B2BDB6333848B21B0410A01520CAB5BC28AF83624CC4A132D5F52DFA4426D7D7
0FF3EE100AD7E5B8930F2EEF> |
38 <001C60D8A8C9B76C90228E4C74F862567352BF5853B1BE321979296BB858
77BE9D40946D4CDA60887346126DB321C6B1130649B54E1592A18F267C870F45
51056377B39494F331BAFEB5E389EE3863B51C3C4EE152E7467BB08999AF3E9C
62F6DAC4FA56E453378AF092AF5CCB9705A2AF44F6B0085FA08EAD173855A284
FA4979050258A4F1D9093249350C0A8AB14666847B435766B974D094B6E30C22
5ABE04D4D09C88614838A66D3928613D128D48AB7773EDB1464F333634322E10
430C5644B799D09E554DC47CBDAAA136DAC2DD801D40BAC1D0CDB385AD4F3587
EA4ACE54CBBCD53C2310B5833D7C85078874541803A67816BE1BDD488121660E
6E1D6EE44F95550AF26AD0> |
28 <001C60D8A8C9B5C453F8872630E16A94E9F822168C37853C90CFBBE8414F
BC389EF2A5804C6886DA2A4E99CFBA20EA5EA7C84002B70E0259FD6B1621DCB2
ED807483A384B570F33D913F6743C039A243838C8422F8D8677ADBE46BCDACE2
0BA58E189F822AA82B79F61A661F041ADFC6E319421BB0FFFFD4E379ECF8BD35
6F2004DFD1E4BB69CFB3FA1BA0C5B7E9D3B664DC3CE88B1280C7880653814AA3
2E6C6A20114AE9B2B015AAD14DD5C582579F8D06AB3132115027F45D629A918E
6BDE5E8F7628963CC61F4065CC657C8A99DC28C9FAC69677833A4F8D50637230
CC19FD5CDEE46B127BD2AC6EE6844F00D3D120AFBD557B8B5BB6AEAB3022FAA7
51B678819A79A1F4A96C048FFA85> |
49 <001C60D8A8C9B82F05F6C6B4D1B43E3F2EDFF03CD55E3EDEE2ECD6B9B73E
BCB6114AABD3A1D3294683787288F0ED11633A1E19098DAD239E37FBD311767F
6BD4B66A0F6C26D027EB3431144DC2C1DA4C50A94EDF0E52E100F2894F181E93
9DDD9C191E81FDED3BA842D7ED0AD923EB7F420B508322512FBABEFD527EE618
C1F48B5F3CCF763FD44D891C6462747C9741001E8C357E2DA64311C0B112B9DA
40FB0CC66BAA782EEA83FA83D3> |
9 <001C60D8A8C9B5C521A082AFFC66C24E2D05469FB1F3150BFD393474CA8F8
D7CD2BAC1087892EA4319825B> |
1 <001C60D8A8C9B85FB151F84E6282C45F8BD687CD7FDFC6D43366D18CF2BC1
B2D72BEF5263B3A65555AA9D43F1D091B7E96386B3EE36F017F180CE9F326D75
1DF1208617D387D8C9B73FBF1B579E8F3B2A26860B85209EE3FDD522928F806D
1BBC70B7201FC6F73A0863B16A70169E0AA02E2EC236B30E21B9074ADA187AEC
0C6418FE4CC924ADA9BD3EFCB41BBEC27249F4794E7037CD1DEDBAE2053113DD
19284789ED461639C0ECAA370575BB5F5> |
2 <001C60D8A8C9B855A14095275EEFBE43D186B8228A678D5A7AA17A9750EE4
4F6CC28522756A968EF5377823C968DC09DE407D8B2D241BFEA4B95BEC8EED80
3CBD370E59506B00A488B74C2F251D82F9B5155825B66F28B6DC8306AF1D62F3
FFDBEBEDEF6C8CCD8F823DC2CECD62B33B6E07597CB6479208DBB63EFC029515
7537E88AADD10C77DC0> |
39 <001C60D8A8C9B699412ECB0D374C4E00F7F4C38AEAAB269227E84274ACF1
BF10C368F67A8BA2A56BF4D1C197D237633BD71AC1F7C8E25012BF52280E3752
A6465314E30A0D1C3FA6591FE55AA420B8C413B1766CD47944B38747FA5EB9B5
C30E3673CEBE913320538C91CA8E95EF0DF685BED5711129ED06564B1DBBC7B3
5161E9B5275C65445F19A6A5B2AB85D5BA14EC22D5B81DCD9733823F8112C28C
F5E7C880BD9BEE8F2745BF888C8BAB7BA1AD55A5BF8F6C42EB9B6146A56100C7
9E407A1ECFE4D504C5E15366208ED4D65170928503ED2CA6F5507069A9130CDB
3FA07D520A0E8585C08969F931C681DA883C6523A588C1D5FB03DA64947D492B
C5CE995434A6FE2E2D7973A80AAC8298ACC7449E8EE41A4EE7C57074A9B03441
8392F5D6E7DBBF84D3EDDE61FA976C4F7FB7258686234FAD388D043386782B68
538C0970E098B6F4C4458CFB075EB81C403AD1395B9D6395791D34C70C0203D2
5A7E5E2148E8CF3947A2C5278700C2871DCDA46276DED382C740DF4490A378F7
EC305C7616957AED46730B78A611F0632E33C03972C5E927D80BBE6AACBC966B
038757BC4F6294FA8C1B2ACFCEA2D97FC6C1B28A40525DD35AAF9C8535E5AAEE
0B024E3854C57CB63C6CB5BD337E29701747453C31F76AA21DDDCEA57E18253F
830B91FCD1FBB3A837D895593A2E> |
21 <001C60D8A8C9B878E8E387E3449B66E5E7DB77EE778FCD6526713B0F513B
722AE8B72ACF266580496AD1ABA2123384CE1510727813AA759D446B33878D36
6E3600282A107731453097A3C653799F2D6FC1580EE2031E7EF7DA31C2FF5743
798B0C4FC6B4F92DC4E65F7167AC5D515AB47417F3C4580BC54E5944E2758148
DA2A79960D10561C898F8D6B4447545C4DEE6A10C8E0D47DDF> |
13 <001C60D8A8C9B87DE0545F3A049485423218DD594481D3A39BC21E456BEA
4ECC37B2599C92A613149D338FDCD1> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /JAAAAA+*Cambria-9431-Identity-H /Identity-H 0 [/JAAAAA+*Cambria-9431] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXML+*Cambria-9431 /JAAAAA+*Cambria-9431-Identity-H findfont ct_VMDictPut
FZJXML+*Cambria-9431 [10.5 0 0 -10.5 0 0 ]msf
55.71 34.6799 mo
(\000B\000B\000B\000B\000B\000B\000B\000B\000B\000E\000B)
[2.24768 2.2477 2.2477 2.24768 2.24768 2.2477 2.2477 2.24768 2.24768 75.0336 0 ]xsh
153.4 34.0599 mo
(\000B\000B\000B\000B\000B\000B)
[2.25424 2.25427 2.25427 2.25424 2.25424 0 ]xsh
166.87 34.3699 mo
(\000C\000D\000D\000D)
[2.29144 2.302 2.302 0 ]xsh
175.97 33.8199 mo
(\000B\000B\000F)
[2.39828 2.39832 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
64.57 49.2399 mo
(\000!\000')
[7.60754 0 ]xsh
75.12 52.1899 mo
(\000\011)sh
106.58 49.2499 mo
(\000\016\000<\000\004)sh
162.9 45.96 mo
(\000=)sh
167.09 49.2599 mo
(\000\005\000\017\000\011\000\012\000\006\000\020\000\011)
[.00479126 5.05374 2.10425 3.78738 .00479126 4.32275 0 ]xsh
%ADOBeginSubsetFont: KAAAAA+*Times#20New#20Roman-9423-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KAAAAA+*Times#20New#20Roman-9423)
%%Title: (KAAAAA+*Times#20New#20Roman-9423 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KAAAAA+*Times#20New#20Roman-9423 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 5 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
3 <001C60D8A8C9B6CFDA57381D15B9AFB6B0B0217863D79CBF8CEEA1AA1A32A
CC94BC4C77C43BB4F63C93740106F53FD53218D5FC813FD945E719AD638FABBB
E1FBEF7DD8BA757D2D95C41D8D90C9296ABC1C09DB4AF246BD2960C26B9A4BE5
AF2FF1060F0CE0EFB3C19FFA2E746C83DE1AEAAD410C821AE9591BA056710532
4BCA72111C527899AD913958CDEE32D531B737F8642DA2EE8C0764EDE1012397
9606044EADCC48511B1AB70CD9E0FEDAD3F803DD720E0D337> |
4 <001C60D8A8C9B8707C25> |
1 <001C60D8A8C9B8EBAD0BFCEAD51BCECD4C720F56253D43B992F7C8B835AC9
BC856D457D5DCE2D887E68BF24918AB7EEBFF041B187BA4C119F3C486A5FC4F1
1F6FC273E29C1D87CA73D163B> |
2 <001C60D8A8C9B8EBAD00DF58F9A1E903E7E456D9F0FAB27E4743A5A19AB65
D8A65E842B51FAB0F26962786DD> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KAAAAA+*Times#20New#20Roman-9423-Identity-H /Identity-H 0 [/KAAAAA+*Times#20New#20Roman-9423] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMM+*Times#20New#20Roman-9423 /KAAAAA+*Times#20New#20Roman-9423-Identity-H findfont ct_VMDictPut
FZJXMM+*Times#20New#20Roman-9423 [13 0 0 -13 0 0 ]msf
65.04 59.8699 mo
(\000\003\000\004)
[10.3221 0 ]xsh
%ADOBeginSubsetFont: LAAAAA+*Times#20New#20Roman-9425-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (LAAAAA+*Times#20New#20Roman-9425)
%%Title: (LAAAAA+*Times#20New#20Roman-9425 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /LAAAAA+*Times#20New#20Roman-9425 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 5 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
3 <001C60D8A8C9B75BE5191956FC71BE63BFF3603010A741B8D1E5524AC2107
BF589D7430A5940F007066E76C52C00C08063CD30D3A3C324DA32CF92F76841A
12DA1ACB2741D6AE28FC35A27E540D19B49564409F14D3075632CA9570D967AD
E1589A668BD7B662DA10C5546B4309D2A90289B9D958D358D1EF248F759CD061
0925FE1E61BEE1C387B08F5F39FC3BD8E984F36997A3C8AE7C6E4A9A62E95333
EC425E2AFD7A4C40E5B9E004885F98A> |
1 <001C60D8A8C9B855A140C4329A363F391F7E9A07D6697F2C48F8EC31AC5DB
402C3FC468A5396357C31B1EB8C25D81DBA99A0B76CFC127553F004A6FD04234
8AB18770A58780C91F1A02F9B50F8642C2735F4CA437CFD05C8B2AA8228A79C3
1C42432E3E6B1D69A0FE3D2C3A2F23CD094A9322AF27AFC1DE7B4425A1A8FB16
DBFCF90AF27B9890FE0CD3E01DF7F97DC35> |
2 <001C60D8A8C9B85EE3AAC8FB3E6DCB8C572C7C4FC3F265D486E3FF9CD8501
DF19D222CEE09A4DF47BA9D14935C72D689BA39044912326D516A05389D35769
9406434CDC8191138CD8413B32E60183EA036AF9FBA760CC4763D7872E35E2A3
5FB88058F9BA28D8AF4DEA2646BC5A26492BF9210DC00B397CA459DD29F3DF9B
897CE9B061ADB91E3361CA0334E1531BF5A8016783D9381E8460468D36EEA> |
4 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /LAAAAA+*Times#20New#20Roman-9425-Identity-H /Identity-H 0 [/LAAAAA+*Times#20New#20Roman-9425] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMN+*Times#20New#20Roman-9425 /LAAAAA+*Times#20New#20Roman-9425-Identity-H findfont ct_VMDictPut
FZJXMN+*Times#20New#20Roman-9425 [21.5 0 0 -21.5 0 0 ]msf
106.56 59.8699 mo
(\000\003)sh
147.85 55.5499 mo
(\000\001\000\002\000\004)
[5.99866 5.76212 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
70.8 71.5699 mo
(\000\007\000\021\000\013\000>)
[2.53966 6.14374 2.35263 0 ]xsh
113.52 71.59 mo
(\000\010\000\022\000\013\000>)
[2.39879 5.79875 2.36469 0 ]xsh
81.09 84.42 mo
(\000\021\000\037\000\037\000>)
[6.2632 4.0871 4.0871 0 ]xsh
123.81 83.99 mo
(\000\021\000\037\000\037\000>)
[6.1431 3.96698 3.96701 0 ]xsh
71.68 92.34 mo
(\000\026\000/\000,\000\035\000 \0003\0003\000,\000.\000>)
[4.32407 2.64951 3.93301 3.50798 3.56752 3.04898 3.04898 3.93301 2.539 0 ]xsh
114.24 92.02 mo
(\000\026\000/\000,\000\035\000 \0003\0003\000,\000/\000>)
[4.33676 2.66223 3.94571 3.52071 3.58022 3.06171 3.06171 3.94571 2.6622 0 ]xsh
%ADOBeginSubsetFont: MAAAAA+*Times#20New#20Roman-9422-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (MAAAAA+*Times#20New#20Roman-9422)
%%Title: (MAAAAA+*Times#20New#20Roman-9422 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /MAAAAA+*Times#20New#20Roman-9422 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 6 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 6 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
4 <001C60D8A8C9B8476F6BD39E61D529177B0064E8181FDA963144E4D6B9014
3153D7AE32E14DC3251E34356ADE9E4ED48E04D5BC02046F7E08AAD67A5A8139
728134E2363B4BF9DBD15E4D6B1528B1991D8A1C793F1502A3225D026366934F
B7E02B077D39B295D9BDE3E0907EDCF2DB93BC8EC9612C21F4129CB8509BA358
5E2769C3C3D10FE0F16F414A4587623D1FFF3F5C5F30E1CBB07C63242E39170A
3ED872D4023C819FE97A615F69F0C700EEEFF594A636C49B2627E529A06CBF20
DE7110DCD74430677F0BD3668AB34E4A2C12CFCD8A28BA4C0E899121FD6F9E31
6C3C614D89250BC66DAEA96143CFB92F837E01BA47807E6F2D06760325BBC71C
3DCBAE4F97542537C1782B412FA> |
5 <001C60D8A8C9B8707C25> |
2 <001C60D8A8C9B8D911CF1845338D859A1C6E5E31D3BFEDF63ABBEB150A6E1
5D4146F65A99B28F81C413C12346BC0602644C085F9467188C33496BEB6C5807
14D02362B7492092DC9E52006C51F95225670CA9F5AD84C353AA11B173081D43
09B7B26ABC47F0F267863C12AAD1D02EE72885679E160CDFD8D73536616D3100
736649EF3D0DBAD1EA9BDAD72B4E300DE7D08460C7D5315BEA1> |
3 <001C60D8A8C9B8D91108CABEF1A7AA13883A264FC779183840CEF79B83EEF
58230821E74CE38AED4156163552EC3DF112AA43025E616812E6E4E09216BE29
7D620538408481AC4952A0AB90473D47E637BD87D925603E4DB0E5C123F49A7D
6F5FD7F8B08D7025D33D205CF4421CBE215E74C12A2F07AC960B11E6871D3CE5
2F9EB278BD5FA089F022E6E5CFB27FB7989BDCC6FAD725381F5076A819D70DE3
5E0277F067969CC718C0CA11AE45422D601307A1C3C1E9E022DDA434FC74EA85
3E149839BB4BD9F49EFC331CF9D8B2E7C3F2ABABD3DE0243AB162CE447334234
1F92C43336E0DD6DD6AE7F571A71F5EB9E3AA633598A3C0083306E678C103956
D62BD0C6F3FED23EF94FE5BDA27C0CF7597E6E08D840972E4124F433AB6591F5
12C373011FC6A01FB1628C541011E92D0269EAD37E80E13B655216C11AE78140
1> |
1 <001C60D8A8C9B849F23C131083A7715A9F4902CEB38B594C3980906FD3F43
5FD2ADB99E59CE5216E62E3BA6520994C6329A3DBA299D5274D3A8A02AF809DF
67626CE60FB6BC0AEAD4C632641BDFF562125BC16E3F5306A07492285AA77BF3
BA3A84FD2FF740F8DEF13BABA45BB90B6CD4B6C91E220BE96956920CB397604F
AA4F09A6EC3B1ED2123337352301D6675518884E95E1DD13B07F57CF110AF3E3
EB9EEF6EC974361717585158DB7DA2B977144693831BB00ECD06F4587F6AC54A
5A1EFD028BBFBF607678954BED00DC83CE8DC32859865E486BA8C21175E1565D
6034353A71450F4EFE5ABAC965B3DC6A1FEE6E85C14A8B813DCB8D69AE5A04F7
5D3A4AB7463B2568316EA4300> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /MAAAAA+*Times#20New#20Roman-9422-Identity-H /Identity-H 0 [/MAAAAA+*Times#20New#20Roman-9422] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMO+*Times#20New#20Roman-9422 /MAAAAA+*Times#20New#20Roman-9422-Identity-H findfont ct_VMDictPut
FZJXMO+*Times#20New#20Roman-9422 [70 0 0 -70 0 0 ]msf
60.24 121.37 mo
(\000\004\000\005)
[20.5099 0 ]xsh
101.76 121.73 mo
(\000\004\000\005)
[20.5099 0 ]xsh
%ADOBeginSubsetFont: NAAAAA+*Arial-9428-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (NAAAAA+*Arial-9428)
%%Title: (NAAAAA+*Arial-9428 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /NAAAAA+*Arial-9428 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-664 -324 2000 1006} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 7 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 7 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B7205851BE313F1CC0CEE66ADF250322C38BE9ED6787289C7
D7C2FA5E3574FC1CE47F2E0E015EC983623B1B5636121740D27BDFEB10667C50
AF9AC358AA1E5D2678373376071DCA2F9A219DC40C16EC290740BB86C751C787
3C6079A0B093AA6E2460D171E8CD372BC615D3335BDAAD573BD800201E8EF0B4
4660F4A6D62449380AC8F33D5486E79D9A7EA566E2DC35214376A2372523F8FD
CD96F526A1E1AA67E9C2A5A648451F9679F69338F2F5186932BA8A3D376A1730
2C99876B41D8B289FA5> |
4 <001C60D8A8C9B6A0FC223B853160E798A6FB7AFA9A9D124592F8DE3144B43
9720C0946EB1D351E88404899F62D7FD9F053F093C92B28C38FA8CA78773D1C2
D668875ED4126BBB764D981A5AACC6B8E003EEBCCB414A3A34BF4F8A901356ED
3E98749FF673526FF5C5282E2B5F32DFD7E95CD45496C20D076D3FBF3B015B24
4E9D550D69877F8F45697338A56FC5B940AEC83AC2117516DA759DA1197C664D
D7FE4BACF21B9B55DBF8497B894F05B7AE8765CE1765D3E3EEFB5> |
2 <001C60D8A8C9B73F59D08FEAF16F93FDF234E2BE6F95AB44D6A814D87EC9F
5F5CD4245A944D59B017E16C8ACA9421F01EC5FF680E0FAFEE58C67FAB5946D4
19C41B4134B8640FE6FFB2CB6EB01049CE1E66353AA4B81362126DF> |
6 <001C60D8A8C9B8707C25> |
5 <001C60D8A8C9B6BBBB4CA0C2A7B64284BDFFE397ED2A87300CF25E21FA496
D9FC447AA4C9AA43467371ED6FE0A9DC9DD87EAAA447C7366B17AC4EC5438D49
87A869E938C44F66D6CCA024B580317B27769536D91654ECDA65F3BB7F1347E3
96F2753371C9BE7481BCDCFFD8092851D2A6FCE9F33EECEAB7685783F6073134
B4BD8921EFA48993E503FE58CE99F1A429BFFF53E5C51171B70E8799616D3794
F4FF6898F8C6FE880D9280D645F4705A00EBD97F0E55F21EC79249F08C927DFC
28225C48FE692F3E83042CF2B359CA260FCF2BE1880795AA36AA47DDB581A860
E863DCD70EF15EE0B030A31419F9934D58329F6D7EB6BEEE81CE1BEAA2338A09
F4A1DA97EA6E1B64D02E0959D6067> |
3 <001C60D8A8C9B72F60D228036912C413075309FAFB93F92A2EFE8B3AD79C5
92F46C69696A5C044EBAF2856601609D9835ADBED43105C3A89D28CE2B142406
41024001796D980134E33D56CB92858F6A3402D0748B274EB49BEE879> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /NAAAAA+*Arial-9428-Identity-H /Identity-H 0 [/NAAAAA+*Arial-9428] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMP+*Arial-9428 /NAAAAA+*Arial-9428-Identity-H findfont ct_VMDictPut
FZJXMP+*Arial-9428 [7 0 0 -7 0 0 ]msf
215.29 74.5899 mo
(\000\001\000\004\000\002\000\006)
[2.67273 5.71082 2.67978 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
243.61 15.4999 mo
(\000\032\0003\000 \000/\000>)
[5.50433 3.01382 3.53238 2.61435 0 ]xsh
260.41 15.4999 mo
(\000\026\000/\000,\000"\000/\000\033\000\)\000>)
[4.34689 2.67233 3.95584 3.99838 2.67233 3.81134 6.15738 0 ]xsh
%ADOBeginSubsetFont: OAAAAA+*Times#20New#20Roman-Italic-9421-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (OAAAAA+*Times#20New#20Roman-Italic-9421)
%%Title: (OAAAAA+*Times#20New#20Roman-Italic-9421 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /OAAAAA+*Times#20New#20Roman-Italic-9421 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 4 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B8293C4BD847F60793D7E2987D2B033563B2D613D7123B70E
437C6C5D354134F809EB06B5F17628D5490D8E548A43E5BE7A03E83A33737204
8A9E77AA021B8750E1DFE0CB4024FB4981D5B2F9BB21B0920A93456069D696BC
99BC4BAFB129DCB54AE9167FCE075A59FBA0838DEE4ABF901C6041010BB44723
B9CBB0FC758C9FB2A768B6660911A93582E8909E58FF7BE6E12CD9FAF049CCC9
89601484E667ACBA3FC1407F8B58587A45FEAE569E9F4E91661B8BA7C5F42D43
F72828E5E46A70851617273C35215ADD70D324E4D860BE61A5265755B93ED159
CB5D4A6D12935C445F9088335BDC86B1287509BA65D833FB92D2974956C82103
723EF6B3B8383FA042F98CC75C8086FCA58545D669E32E29E6FB9043D9365608
57F8B5A954D137FEE69CC884FDD657A79526FDB5035398AF4B7D75621971A14B
D5C8E1B9CBD70EADB7337FC6597E029194D96B5B9DC8CA477CA8D36BA2C4139A
6BB108C68C64FFBEA0EAB697017203F2089CF7C023825CD8C623AE12A10EFC57
17342EFFFD026FAA8C48FACD1DF4FBD62C1F4679061D131EBC982D70756B0D37
65E6AEA314388812D4577F78552E0CFAB6378C8D89FDE102998A5C784F1118C6
52D505362B3D1C0C0F1162B17C438A14FDCE64C03139179535AB0E737BE2C346
D63BA9EA34558EA5FC4CAB923D1B81C1D85602DC88A1AA5268E9152908FA2CC9
F15AC7B645581AAF0062A45202011C5AA0A0EA98326A065241D353BA7C1DB027
05398EDACBC0F8AB784B3C9A76148BD63DC28FCC694332A9D9E2F17122F6D8A0
32919840D5A34DCB0DC05311EAE75AF116A9D659EA06A2CB769721B73BDCA8DD
5B8939193C03CD67D4009FB52BE183A39EADECAD2952C4D150F68E39CF5EA1CE
D05DE6122F97D4658481FFBF51805B1E5C44E0F0FBE8C3A8648783816E666855
C6CFC0BCE59BAB6E899D8A9A8BE4F4D86BA3BE28BD920BA931B1AD5B96EB1620
60B963C04D7B5A7D5B739971816ACA3751814FCB069C354250EA4186582311B0
E334523FA10497E87AB066D8D3166C77865A6DE0B53C5B365EB6A2BBF35BE707
A212E6766A09E60FB30618D00EE66524EEF4B2CA877233A048A71848EC60B756
148FE7131C4903F0B2C75D514044BDCC9D53E203A7D> |
2 <001C60D8A8C9B08A9518C4D56E8B4B3ECAC2CDD2EB3DC76ABFA0CBBABD915
83EF449C914B946DAE0ED4EE07D0E829F1B1E82102A07F3657C88EF6B27476F3
058617A1F85EA2DD44280D02231F306260BC79F61898AAE7EF54F9ACAA5A9FC1
9EFCAB8514051AF3701B7505D4738A8B5722471E02FE9FE9B4264DFA8D8E738A
52876007BE568F888DEFE2CFC7B6AD1AF6FA57EFA4242796C9FCA98B076CF9AD
723204C7905ACC31464AFAF29F9310DCA8A2965DA3A40588F10C3D0726C2FE71
EB22B333C8FFE07C93AFCFEBD3D6F7C099A9D329B2F5A0CF6283296C3AB0AC1D
798E9C3146A1021B38D7508DEB38A5961A13A9E4A25B8775DD26CC38530A8FF0
63C9B6B5E63E4C686E63193C63A28275CAEBAAE4A3EEC2798FAC9B50754894A9
48475336B1F24907152B73ED266F5C378B2C5A761649693E39F0177425D0CEC6
45F52D13ADED970ECE24F175E621C352C51556F036D0C93E6A32B131CDA0252D
E0E7C852C3F47B21A305DF456F339ECF1295C64403488C4F0A27E8BFE96179E4
151F54AA1F934D5534ED91E8FDE302FF788EAB46A0723C151353CF3A0C6658D1
00DEBF8FCB7D8E9E3AE1844C6BB3DCF05C9A8202EC5DAA6EEFD86FD898808041
B146E4E8EC34BD9E30CCAD9591E8CB8AC5C8BF0D047A81D4FC69B110FDFF941E
921CD62A0EF7159E9BEA1ADD50CF2F3F2F02728BED090406F7F2BEB689C46034
B4672B4B0CF6C888895C65BB6A6FF173EBEA9C3CE79C0A5BAD9B4A41A4B81881
366B01FDC2834782C655BAB372F172BB464CFFEF4EF91190FD80138694C468E4
D01396AD54E7650C4B98202497650DCBF18A3EEBEC663E2EA0FAA5F1DC9AD654
5D6EF3E31BB333F080B6FD279FF3FC3560EEB57D3A0727E182A2975AD4622FF5
90CD3E6AC5D1FC6908444D678EA2D42EC62AFAECFF061B03D8EEB8B336D0628F
F49B79C6099504D59A38946EE168B5092C0F42EEB9B29B213E04EA2734B69622
0C556E0173FE2429FB8BC54CB4C60C1B568F405C2F13A951F20248B753BBDA6B
18544DD29587792518639157C9B831FC656D4BFEC0D92577B1039B326F868D05
F01A88F18285E430A58BFF199CB8A84BC59E5E40E92FECD5EC230C3972F20255
C1A202B65E0BB59A51ED42322011594891EBE529E246AE682A062E66E312B980
91A184C2BCB0CA0FB1E686D0B471AA96F0F7098AC5C9C9A1BB389290FE5DF44F
9661AA6CFD168547D0274AB95A855C62C4AF907AD5F5DC0ECA56549845C7311E
8A129D5240576D3A3F62CAF530CCBDF82EAF231B65F5AA8429692A8B916E93A4
0056E78D1E7B656BFE13D6976DFBA0E5B95194806AF768C36CD61F9E1CEB0763
99C71B1CDD564C05AE2F0F0BB25639F75EBBB9C83B2E03FE15581E23965C1FEF
5CCC936E2262E1CA3910BEE4C4C1480CDABB53495DFDF5036EB4C1BC9F1186A0
7D39C16D3B7B92FA09F6BE3F2A28B544335E26351562CECCE674EEB2FE940F56
E69D84A4EC781A2E7D77EF4A8C9E84F247A4D5EB746896EB83C13962BBA65C1F
28160BFC09B3417A2CF8081ACF600BFC119C781F030447AF2622CEDE2EB0E9B8
F7B0DE3DEDEE1B50F01A3896FC2EF4BF163C127D1E7C35046EA30CAB4ACF891F
9A0AA2085E4F107E520450E8058875DB0E6D784A8A6F27A48B252592EB2D3DA0
37909B448ACF0EC01717BBB4D0962A18FFE582C56CFC9B04C5374CC74E0C08EC
D5B9A416E0746F2EDD7CB0DAFF9AC4F2423F6451F62105868A70B353A7AC10ED
50416BABEDF46CBB6242DB2185D951540336DC1BD33E4079E3B4B952924601B1
BDF4E426C0C9CB7CA018B50F77968A0851E621A3986FBB0E492F89B848E44C74
46CCC04D3BAD6C41992666EEDBA18DED12B33931D645F564D39C6295AA68E7AB
68C5B281C0E9D29EDA03CCCED1875895B2F3D3CB5E67FA068F8ABCEDCE0BAE9B
DE341169DE3C0386FB99D44387CAEC8A488ED3E50BA95E4840B4D43629B8EBDB
C62708DA7E29D693FB72BCE2D8611856D684C9BE77D48C22C09AA622F8129C3F
07C92C6CA2A42192A11050D0708D2641C277047C41F014FDF97287946BF66D9F
6A8428990C666B1FE055A691B4376C6F949C6F75FBB1A8438310B631A240CCEE
4B0C1D1B9EB731507FEBE05DB0E0BBBF6B12864D1B0D4E2B719D51C6752CAF22
5FE5C853D447606209C5A9B9420F0805725B5A19D26CC132F5D09CB53B021CBB
55E3CC6DFDD435027A6E82512D5B81E34F7888D63463F107786005D08CE95F2C
1E21A2646C285D87B93E909D7E4E7F1E58CB89F406A3C54B08D734C05B9362D8
39C4946026FDCED4D31CCE1936EC46232A047AAD3A38EE0B9E1705461689AF6A
A9CB6F2A2330CE45B8756EA165CAB969AD75246F07B065F9A177A41DC0BAE709
E7101B53614CAB99FFD605F4ED99ED0EBFB649311C59BF2CB3305A0209D58996
31C7592512514E4556777D1F1468E5431CB884B2AE6A1E2D7168021B5F07A22D
E69E3248EECBE77A2CD7F1019C0B8BAD347E8C0DC02DA0AB3A0CBA5BD0428B37
B7E4C477EF14F6B932F20F99A6A91CF> |
3 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /OAAAAA+*Times#20New#20Roman-Italic-9421-Identity-H /Identity-H 0 [/OAAAAA+*Times#20New#20Roman-Italic-9421] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMQ+*Times#20New#20Roman-Italic-9421 /OAAAAA+*Times#20New#20Roman-Italic-9421-Identity-H findfont ct_VMDictPut
FZJXMQ+*Times#20New#20Roman-Italic-9421 [29 0 0 -29 0 0 ]msf
282 49.3199 mo
(\000\001\000\002\000\003)
[9.36694 35.5252 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
288.69 83.0099 mo
(\000\021\000\001\0003\000>)
[6.19174 2.47711 3.09763 0 ]xsh
302.38 83.0099 mo
(\0005\000#\0000\000 \000\033\000\037\000>)
[2.16119 4.01419 2.56067 3.5722 3.79318 3.97165 0 ]xsh
288.87 90.9299 mo
(\000#\000\033\0003\000>)
[3.87646 3.65546 2.91592 0 ]xsh
301.45 90.9299 mo
(\000\034\000&\000,\000\035\000%\000 \000\037\000>)
[3.95169 2.21774 3.96869 3.54364 4.07074 3.60321 4.00266 0 ]xsh
%ADOBeginSubsetFont: PAAAAA+*Times#20New#20Roman-Italic-9424-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PAAAAA+*Times#20New#20Roman-Italic-9424)
%%Title: (PAAAAA+*Times#20New#20Roman-Italic-9424 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PAAAAA+*Times#20New#20Roman-Italic-9424 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 8 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 8 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B667F65B371C17395B862F606B624885B6735891DE8DE5141
9E28AFD80E196F44156C6F28AF44EABAEBF9536CA9FF79CDB20821749B70BDBA
2CE3186B923FF402AE5BDC5358A0F5B59D29F3FE443777C1110EBCC8194BE68F
7E367E67E967480822E0A3F827CEC179DE4F28C67FF158A2A55B763D31DAEBF2
DDED734794BE49003AEE15E37CDBCFE3E503BFBE3ED348BA1B6470FF730116C4
528DF7092C68D4D8E572AC74335CE4D5F15F7CEE5764F25956EC60548D59DDA1
38C8CB7C38CA79F80DF0D9A39BB381F5801EA441EDF3C9C0A2A682C996F1DEE9
CB020F6A2FA5FA362D6231FA5378ABC94D57E3E3D998AFEA0BAC67A1F42AA717
D53FB777A0948AFDA64805CC9333196471ED115F1A3A5CB9A6F9D1F7D8C4E242
99ACA03D5CE29710D36EF6A355CFA4BB9B3166DAAABE357172CE5CD7A91B8956
0431526B34C6EF360FE3F0865C3871AE7617A429458B69D7C45941E1C2037256
B51B84E86084CDEFD378F> |
6 <001C60D8A8C9B8AE7DA91066E5D61C4E535D13020C233D7CEA84C0BB250DE
ADD1CDA93637BE1BA8FE0979014DD3DC71DBD735D64583EA29F6DF51232D0A3B
20FBE> |
3 <001C60D8A8C9B8A1F94EA9082F0347BEC80935CAE7C5DCF0BBB2BB65C1760
0CC73613EE6068CC299B601E3D61744244DC3BBFF1A7ADB76F65211153BC7794
CF3> |
4 <001C60D8A8C9B8B5189CBCF96F1E6B7CDBB6173FBAFD968DEDAB73F81EBE4
65AB655F82FB0A09E611C68D0D2CD26FAEC2AC00F28E0F20648C74ED5EBE80F1
84E8260> |
2 <001C60D8A8C9B8B7BFAE040EAF97ADDA39DFBA4351BD2D0E5FC4DDE65B2BF
D5542454DF993D75C792941065512CE89147DF2EE74A0470217FB0C78416D41E
1D25B03A47A3A04D4B1DFC8F557E09EA56F3FFFAAA08AE3BE3DBD742D5DDE39D
A224C31620403B4AF418EE1BC1D960C> |
5 <001C60D8A8C9B732D4E275B84D93B01E21284FAABF859A34C2B32D74516BB
B3C07B9CE1AC352A781855117F21FAA2D09EE6D4CB470DED3B0A08899469C8A4
8CE46CFF9D8425140955BD52A19DE1485324E93F26117E014CFE2B06B5048048
97D816B6C8C0D26CA1D49BDEFD5659A102A99195EB0CC4D63D06D60A40D3707F
0E5C6F4C61993ECA65136F578629094077ECFD1A9598D82E3E13E11892953A73
618B7E10E81397947570243BD6CC11532EEAAC604609A01D8811356F9A82461B
6FA4A8EFA3C08FEAB24816C3DFD4735685C9249ADBBA921BD0410E2BD4B8A631
B9BEB1158B11B537E0ECD59398E4CBE8E48EEE604F4F502FBE947B78FD2A96FF
D4C54675EA28E414E77F9A9B11186B558AF22049B6C5CB8C7DBB211E73D04EFF
1410DBB100AD57FBFB10AD6602EC10F65750DB7FA6C7D056B7EBB024E57EAEDC
B38934DC42ED43D4BEEC8B1C868CC7E0712892C5AA54CA59A9B2283678189547
58B8DD4478EE0B9402117F74D7DC76B9C39DED0E2F4DE68F57EF8520D82C9460
AD975> |
7 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PAAAAA+*Times#20New#20Roman-Italic-9424-Identity-H /Identity-H 0 [/PAAAAA+*Times#20New#20Roman-Italic-9424] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMR+*Times#20New#20Roman-Italic-9424 /PAAAAA+*Times#20New#20Roman-Italic-9424-Identity-H findfont ct_VMDictPut
FZJXMR+*Times#20New#20Roman-Italic-9424 [11.5 0 0 -11.5 0 0 ]msf
204.24 121.31 mo
(\000\001\000\006\000\003\000\004\000\002\000\005)sh
224.641 121.31 mo
(\000\007)sh
FZJXMO+*Times#20New#20Roman-9422 [70 0 0 -70 0 0 ]msf
239.77 121.31 mo
(\000\002\000\003\000\005\000\001)
[10.2902 10.2902 16.1499 0 ]xsh
%ADOBeginSubsetFont: QAAAAA+*Cambria-9430-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QAAAAA+*Cambria-9430)
%%Title: (QAAAAA+*Cambria-9430 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QAAAAA+*Cambria-9430 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1109 -298 1373 1047} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 41 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 41 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
11 <001C60D8A8C9B8AA3B4A915776AC1DDA6B058307D15C8C5645A0EEC00FC3
9CE9F872D29DA2334AF3D1A71E8A611DED402C8849E22554B234DB4F32B1AB72
0D43E0ECB8E761E620659767A02C475F70C1979CCBC83614E627B464734FB6AE
A9BD728970734C5CDDDF2EEC7B5AB38B5D78687AE8C31581209BB21458CAF96A
21F025AA6A7AFE13444F08D5F00C> |
40 <001C60D8A8C9B8707C25> |
20 <001C60D8A8C9B7BB5CAA4A2F36A2A0CB492000603792FA12F060272CDDE8
EF6CBB645C6BE161832FE1C5A370B18EB0703A469931AE1ED7F34AF29DE400F0
4928F890DF6F559F771658AA17C2BE54AA1B2536AFE30754F7646BA4425C266A
2C6A6741497118433E89C6F5C3A080E1F9B74CC0F8012B50BE22A99727C04477
50C25215DBD9B4143FAA0E5CF52A6744A907D49C68E04BF92C1CE24B2ADDB25F
3A593C1C370CCA45E68C8859F040E03DD6D4> |
21 <001C60D8A8C9B8856D4A339A522378C3455697734DEB5FB4AE2292F6A8D0
7C79C5539497AEF206C05156226A853C19C06F0609DBEFE71D0D7D3E6C9BEF95
E9A43E6FFCB4FF73> |
22 <001C60D8A8C9B84C67724BDABBABC4A4DD908571ADBE89E769E2D806FE73
76377ED87303992F268BFF709D78988F99B2143032FEA26F93C422> |
23 <001C60D8A8C9B83844CB1EB7F2286266385118671A7AA1D3F594EF839C4D
13EF956CDEE08D8802D89ADC9F1F62643306160A423599EE0B4435F5BD97859C
AA5D554BEC002AFEE190> |
24 <001C60D8A8C9B85EE3AA1DD3D8ED6356C91D23DF070AB9946301CD9FA4FD
6AB3AB92BCCD571CE9966E2215DD2F68EF507F5C49805A598121D0B4E3BAA111
BA2E16770E58D58D7F5EDEB4AA3DFF7B2E8EE018235B10B97987509BEA40BA48
57D5> |
12 <001C60D8A8C9B6D5A05351CCE8B64E238433D8A7DB0513C1FDC614FEF543
982374596F85B8A23BB85D961674CADE217724806E99392C5E1E5E801C99A99E
0682D15D83DDCF79A499355B2E92681DB0594CED51D38D24A605FD32D22DAC23
78896B5CE3AC0D34EEC4205043A329D807FFC9B10792C81E54E7A1280C2101CF
FAFB7318BF3892F0B3CDA7891E0EE1E7129FE67E2CEB46A7149C91AAB2A79030
F7FEE32B24987F83D5DAA62850D2BDFCC485B7ED66CD362E7F55A33CC2584F40
2649E2EB5A11C8AA755F0648928576F009E148B4FAA5CA1176D95840D21D0B3F
27253DC5A71B426528DAD8FF9E76774DE0AB692230F35A452E006E25D1EA1387
D9BB1275788BB442A264C0A0D767D17B0B8F206D3A3B> |
13 <001C60D8A8C9B6042A970BED7E0FD0B77014BB47066CE728C02886E9F261
8A01ADB0FA7718BF3C9B3A4001ED3FC0EEAE89698D281B0EBC79870F69A861B6
E9DD2C3457FAA97447ED65EEDBC923734D24F812C787B93DD63741D5B1339EB8
A490C4346F6D84862C7FD00EEF563B1BDD5D79C90505306D59A425535C72A3EB
81C6A592BFEDCD75CE6B1740A8309879A2BF284075A55D7EE8D6EEBE356790C9
0CA96C4A9B80B2ECD5ADF3B273CA8BD50715F3B008931597100C7FB007F5A7> |
15 <001C60D8A8C9B5D1D415303209DA716575A55ADB39802F5CBC2C4164529E
C831F4867BC4A83A1FB86DE8B82D782EE0B7210BF3AA7FC209C8D9167F58F5F6
C05A08AF0CCE641DE55F5CA67661FFE64E6CE77E17F3C0C69B3D5928CA449944
17CE26DC8A3AF64378D53B73EE8DBDA28AFE41AF54C346A14E2F2B66E3E7022A
F7975479B4E9854E17FA8A040D1A74CCC6539CF387D3BCCE5744DEE58AA5BF86
688F46B8E5A017AE60CC1381D481C30D59A6D696D4BEAF7A10423104431E7D67
7C051FCF0CD1C56F73A7CD052BBCFFF1BE12F4679966BF7952A960132170CEA8
66D9F5EE2CF4C1D55689FC655A02E941F77FB60888E4971005C56840> |
18 <001C60D8A8C9B62AC6D3B49F5D74A352D91D1DC1B0D5555155CDE90EBEEC
B97A4B201AE0C3A5831FA29E6E2C22048DC56495DE46C9340C89A2502CCB33E1
0C7C2B415D3AC5885064C7691A26638F06D504BE5F20D351CE0240F7DA7D068C
4FA14B526D1DFE10B1E1F019292110CFD419119897EDB2A5D69BD693ECFF6D12
D0943974B8835084238298F8D80B69CFA68242D5CC2DB3E31467D11E198E0556
216AD06F1F8BDBE8DA9308803670359679D1323BB7BE4D79DF14F60E77FA003A
C98CC9646D2C3E2B199180920D4C6E50> |
35 <001C60D8A8C9B718ECCD1C15DD45B151FFBC185ADCFADD09AA9D8F51725D
17C8414E9A09A710A0CEBECEBB4680C55EE2F3CA6257B44ECEFCEE98ADD1E14A
6A8DE83AF9AC8A974FDB5F1B95489CB34B14586E21B9C68A75549DFCB3D31742
F4513A0CC4785E2EB3AAD62DD23C17938C2FBB192F60A96E15C2077955425286
C78B67665CF25AA5C5D058023B864A69A988E4B7669AFBA99DC4D81785613C99
2CB7A5F6CB57A450673A0D9ADDBEABA0A45B8F6FADD72E5812000174859AF899
989F0B8D3A954611137EE13D4A06B0BD6BB933638EFD575DBDD1DCA57A027112
0587> |
25 <001C60D8A8C9B7E7C1A0811B8EAF7F4E65BFEF3E4D2F29CF1EFC92AD70CC
F5B90144B883571631FD95C437EEBFF3FB14E20DEE21F8C3F105B5CC828F0173
6FBB93A1F0D4313EEC3D96076FB402AE639EE8C3E4E197806773BB0867A34578
84CEFFCDCDDA0CADC4EB1891B6FEF666FF0E3F92C32B3C3B6F6BE310802949BA
D397984E7522DC0016E41CD9A35DFF0FA60797FEC4B3131FB0CA6228A9A2D681
925F6D6A44F5469F7C78B396052865A5D1C84CEBF8B6EC7CE32898FFC3FC867A
440F3FCABA184B379C2CAEE33130C138090EA0485E63A138476B7F66DE068020
B6600A30042FBB3AE2C60D0EAEB71AE1647EB61E701DD379215BF6B7A5E7D119
F40175651374C7FF67FDC945C910AD78C1763600EECB8A1697991C9C4BC9B2E6
16CB92A2F064C4F1960A700E277FAE8A6CF1DDEF6BDD5D8E89C127F4853FCDBF
73CC03416992> |
32 <001C60D8A8C9B7C63DF77B17E81A683C0DDBD363CAC61D7BCC5E562310A8
FBDE2CAE094849B0CE2A0033ABF42621EAD77C4FFE609264132A81508B489D50
F9BD8C171C48DA64AC20C6DB52B6E04D6BFA2A2ECD1586A0E9620DEE123AE93E
FD7A4592DC0965F0C3D7BCB467C33FC34AD21F2BFDA181FBB9E9444974DF63FC
8181EB509B20B1800BE18E0FE8DC439B197B372AD12888DF7CC63F6A8CC8036E
C2DCDD87EA26E3C2551ABE7D1F0C792437C8140019AD430CCCD57F7A80E5216D
8DA5EEB0857F0426BC434FE451EC391CD4CF94DFA47927F9C56D85> |
36 <001C60D8A8C9B779148720F8749D64AC6A376695DD6591B30859554CABB6
3D800BC679697C5D158156CA0E8AF1AD1C1A61F8DCB01D23187DDD78BC101D5C
4F3450280933B2314113457508A09D9C94B8696BC9F9E8599ABF98A9A20D0156
58FCDD6E85AC9C02D7E09917F35640CDC290DCD5B1AD5F7DE89227E8CD1EB58E
1FF80D94BA04E108B9CABE5CE821E61F1757017CB9A753801A44EAD2B93D19CE
C1E253E4A6159C945A3D505580D67981E587E35B413987D1A5166729389E4F30
420A480835993ED3DF8BAC121A4E30AE19F8350D5D3BCDE2FB9C3E8CD415F6F6
F759D7706C362BFD788F56A1F9F7E790C1F0CAD927B7207B1588C7CC2E873BA1
7C4B2C1DC85C66CE44D7A7073A679F1089600426> |
27 <001C60D8A8C9B713D4594F625847C6A5EC0348E78F1AD605689BB2A317D2
40A5B3F3F7A236E8FF95EE0D24F306D169DCA2FD4956400F59467A9D349577E8
F6A97C9C911FA6AD173471A814E349E469C7AB65B8837A2D3ACBFC6594622980
F60DFE071C303568BEF267E62D002B577FA2AACF7C1E146736CC89A6B3FD8CAE
0E1C64811B73845091C4F676F40C3FE48D63A3C520E26C86D8FFAB24EE9793B7
DEE45D52FC6E15A371ACFB54793C509A052800FD8D340D1754F101E54F51995C
E8B9D11FF0647876883B8BA0F3B2D5A1F90844C09DE4A602020EEAB65491134A
D889F006F3C31F42EEE8734288CAA8098AF132879A9DA213AAAC70E61979EA62
9924DEECA5C3552E14DF4639304B0D3EBAF1E7B4BC73FDBCB67CB2ECA0ACD77C
A411BC5778300744D035FF> |
37 <001C60D8A8C9B720584D813A0C503F7713EFB809858E0D16BC26F8332E45
D9F5A72FE38432A936A29EDE0D9546E3323519230A41E9EC15E633C696F6B0DB
16FD2214A2BD6FDA0E1D2D67FDFA82FE00D88612734B34A3E99B79FE04725055
ACE2A6019E9DEA61A966D4AC7651FCEEA19DF09893C035356ADBA8428A8B1846
4C2E0C2CDCDBE9579AD20CA35E8303E6AD073B9416CA28489B58108F0DB2FA0F
F80D4FD0B57B25CAB63C> |
29 <001C60D8A8C9B80E61BE63DA9DEDAEFB33AC81AA292065F98F73FDF6910C
A2F695998121B29AFDF22BDA2D06C0789B198F8831AE891C55D15AB59B8F9E6C
2A294023B48F8BD47830D0D35A7C921D0A6AE73CEE531D1BC6047FAB00AEB095
BE654B77D662471844289067C0D528C6E4846CC26415E55EF2733D5C4B81A2F6
F21AE39DB70A8AB39EE68FABA958E0CB756554784022DAFF6E6C976241> |
33 <001C60D8A8C9B7551C904A24B4368B91A56099040C5F6A7293094773A607
5E490CA75E3AFC69F4738372BACCF9B09991F3EC595A53406485372141DE8E3A
1863E0F603C72BA61C8A948D8DC59CCC11055FCCD0BE4683E16899824A6654F0
358C1EA1BAADBF8F5264BA2E155403E61E41B4C3CD61AF8BBA74C98496E2AC9A
3E93C56871C54268EE860F931AB7D709A7E905F9F95B898B640F32B1AC00E1C9
D74E14A2AC455DA930A31ED71D36E2F8CAF3D259930D477FF7BF> |
31 <001C60D8A8C9B68F310CCE17FD1B38F77494FA5000A95E45C67489CE7D44
A62D5E7DCA308453176A76CB95EB14D671AD34EFC447912221AC1101EA18F169
FF22B28E50C35348530AEC23D0AC87BF0E7076C4A1FD6232AFA640D098C0E359
1B970B0C5EF49585C52C0EBBAB6C006B600BF1BF7BD4783C657C77603737E1F0
BBC2A32DBAF271C03A1B441C00ECA089DBFD824833B9208BD78409C73E190654
C32682B8F41219DCBF14284F2755EE9327C30209B4DAD19AF01D8B37E124FB91
973E70FBEFF94DA8CB73DB83AF5E38B4B75FDB3529E8266A19869AC832AD2A83
DD26A6439B79CF5FFE30D52502F5C0CE2C80F6C6529833AA00FC64DA2CED793A
E05C1FBC8114D5559D4695117AC5090B24E7> |
34 <001C60D8A8C9B795A0AB3D27B8DA70673DCDB9051870E8EE7586725BCD96
80F5E666A86DF75E19C1B9BB630DD852315D9DD8CA0606FD366CE0101A2D4CDF
DFE942822477094A088DDEC849EA03E2D947AAA1E8D75C00A4954E52D9B3E5F7
3249639F337A17047CA386E1B2CF2056643D74753C282E51F2906C8A12FBC510
8E1E8866BC333674DB7D2FCF0C49CB5FBB37AFF12E5FC98503AD974BE7470228
834FC202EC0463F10746383B6BF0B7E424EB4A5B9494BBB3D2BA33F1B6CBCCEC
11C453FA> |
38 <001C60D8A8C9B7DDB689A31C5870D91AD86C78401D0AB41AE66A422C9FEC
E0BF6085F3DC135EA7C12B2A4FE748573DA9D2459E0849CE462B60F0D9CDC1FE
5BD223F111208A547B1C53E41DC10F59A78E7E88D2B3A75AB0FE8C57599829BF
55B5CE09A891E9D550A19F23B8DDE01F95568250DE0FC82E5C15034F5E7BC53C
74337FC4C202427BA9D9223DED91B264E3FD7DF940D24268C09B8139B978478D
70487FAA7631FBBA91B3C3E0C984D08CE087B604AA85C032D2C61934A43C65CA
9530> |
28 <001C60D8A8C9B78FDBC3FB13851EFAC7FEF3226E993B73C49079898B9308
6EC1BCFD47F076DF25F98737F913998EDC5A62F89EE3B265572355B0AED44C59
ABEE7F0F069E5BD430635D3A91AD76A2AE429EA8BB70CCA9D9DE49C1939056F7
AF3FFD33923B4BE04A86EC0656966DB2E0C552408D19F048B7C07825AC49F373
8B4074AFC7F55061E2B030E532C447C95FC97734064DAAEF6EFB8E245407BDA6
9636C4492D84AB79222501E4B0C7EF8A009BE17673F5A17BE1C12790741EB5FC
0A2F97048AC20E5A33D7B81882E1446FFB0FD717799087AF10F0A82A6FCFC5E0
2AC1346C29961F9FA185A2A81FB5B6847D2A02A79ADC5DFC29A53FA107BE98CD
8D0BB66C6FF4E03DE2A129964240601A39364FA0BD083836DCE6A8> |
17 <001C60D8A8C9B7C2FB34F1F420A4B01BD0877CC7732F8855550098860B80
512E33B1050A120483FF12407D8D71D0214569529B31354F4E586ABFED3F45E1
256C4200D81CB8CE64A504D478090FF6C30C47B5060EE86BA0A1CBBEC76E90A6
F2C9F2C6F0E8905222F497CB56313B38DB18B1D7BCA3E78271DC519446237718
5B06F124AF18C72054CC09032964FCB22C1370ACDB7782CAEC4D613587AB7AFB
B2FC95F81B313440DC3047A79B696EC3111B16D64B1D43B883EBFDEAD773102C
1D80E7E72711613396D0CF11A2A31CF9D7675A7219F125B7BFFFBB2FDEDCFE> |
39 <001C60D8A8C9B79676F3BCC526AE5BB6D3DDF553EDA5CF34B96DADD73613
4C379FF9F81B8D3148141048929797B181C847303C0ACB22EC41A7BBEC4C1CC0
6C487F93B9974A681DFCAA874E4669BC6111273DF2635CA08DCB263047A2D2A8
93A41C98C21BE1E8C20CB378DD8825627CC12C14A1E4668687D1C652483DE62F
ACF758945A4B77AC0D228B7BD4E76618BBAA418BC143B71C8DE630994BE56CB0
26044525ACA9CE41BCFA50CE8428A46FBAEF9002C0F8BE30808C> |
1 <001C60D8A8C9B86FAE16374D7C184D7DC1AEDC2E73812BD162D890477D8C9
5C85A4A3DA57CADEA86597EAE61A9B71A1335A0354D117706A868879DEBDEFCC
019C2FAA0EBC4D2570DFA14A966F57AD7E7242ACB3D18700D403CADE53DC07A8
53C> |
19 <001C60D8A8C9B6CE0456A971EDA38B1005CB7FD53B765E133DF1E93D0055
79D4EB1C75D9B5404BD2D2FC34171CCE38A6D6274CBF7D4EFB10C38BBCD2806C
F10A5840F82C19AC3140AE2FB565D2CA88EA19996020CF9A701BB371F77653AC
AA9E39645C4700242EE957A25C09691FCEAC63856917937DCEAA610BC357AD50
6258BFB96680226E3E8A5E5A36225858D596B60EE0FD106DCA2D627744438863
A1614D859B4EC4D1376A874A876AC850F8299DD21306D9E4E14B4150AA9EA171
1CFEAE8754C8A384624D5D73CD111E4F39B95CCF72B0E2C3FF> |
30 <001C60D8A8C9B81F2C3A9F2A768E09392BF31518A177E169363506586348
0851F36730FCBAC70BFF303BF9D38B1546BCD81618B4CDA64533BA9B53585498
C21125B0C891F20B27B68F3007DEFE44E99C1CC161D74579920578A1CCADE6CC
323767F5C29CED1C0601915ABB5BCDCCA732358B7C789AABB762CC15661A3750
648EC9C013FFBA7601984E8E89CE1496EC6A6C9A8475524E782454D9D8768689
809EB8E7> |
4 <001C60D8A8C9B869C1627F824AFCF672875351AEC01A000A35EE68E97755E
5D825A01FB2C8B832E1634B9CDBFAA9C83803B5A6A6E4DD8ACA20B6E4FBD1> |
7 <001C60D8A8C9B7AC3526ED6B9156B4EF242ED36A215EDF6688093498C9DAA
E6A5EBB3571564564DD94AEF3A1E846CADFB8E9055711736394F9748EBE168A1
B4FEA80562016751D6E293EE2497AB753F6EF0A86AA3B364C84840C084783B13
FD156DE44E453B8F4FDAE92E4CFD3148B9CA1BF74390F8383645A4BE773F48C0
4964543278638DE9604E0EF5B0DFF9808229186E8D6DA8949067712170B191A7
9C524AE1540AF87D889AD66A8D9D0326F234A3FB87F85D5FAEB666FD818A384F
F17FF> |
6 <001C60D8A8C9B7F6E9651339F51DCB0D00BD9C84E9998276E2EEC8B2BF7D3
F817F411BE9A50CB8FA3D724E1FA8051FA493CC8D022D3415EE769EA6BC34916
FA1294C7A6360E361BDD40A101E3B18DB982F9932407A2F16A14E0F211C5C6EA
798E0A2BFFB16263050CB20CF> |
2 <001C60D8A8C9B87A8F723A484720B1E4BB703C80E78AF0FB1185B428F489D
CA040F0EBC81DE4A14FF422F03D6746F7B5FAD453C78DD5F74F032CD2524A946
B98D8D16B98432DE15F9E29A5B7E66415B2C7E89CF213D8F458A5DA0656B956A
36D01B5C1D119D560645F9C350BC748C72EE23FDEF93177F7CE2138EFB837CA> |
16 <001C60D8A8C9B6ABDD86CFCEC36E644DB8A2DD3535511E826E1D9E3259EF
ADF6EADC69AD6FBD4FBA79505E5783EFB2EB8D181DB6AF19B63400F0BB1E204A
50F404AAB507B6E0BFA3A3CD2FEE6DDC72EAC1847A8AE83F74DB0E79AE0EE5F4
02DCB35A22ADEBF4DB349905CE59BEC12DBBC15D07A14E5BCDFFB71B02A48293
ABC299269B151C859655778F4D7B6A723B1BE094B70AD60805421920389C58E3
30F50758FD6134FA9C8B16C8D1E769F6A677CE6020A1F9BAF9AADFAD84DF47A9
03630EAD78EC8525C1EDA0037AEE> |
3 <001C60D8A8C9B87C134AFEF4A68AAA059A0763C2E01CC1C4D353A92D4F6B0
308B9A0DE7BFC1A7C3DE5BDB1E70176CE08E3BFB5AE1FB3E1F714C8D4B8FCE88
0D62B59F3557C5BB3F39FB3F5D1D91FEE2C762775AB0A8168548F> |
14 <001C60D8A8C9B65201B38EA405CB38D88E1D0A3D8BFB63C851C00C36B76C
1BCA951896A7E0F42B8D0A98CDB590B72E99C5BE6012ECCB904A720DCF2A36B6
69811BC293C76AF32AAF3A726552768C3A0319091BBCA46BFD38DB1AAA1E715C
BB814092ADC85688BFFD57EDD11B690F4605B1A9240F96FF5B19DA2A0C082D61
752BC8520915C8091798FF0BF369EDA16F0409592E19557427A9DF3CD1BB67B9
24DBAF2E6AFEB8D9AFE3C6FABEE37DBDDD943AB4AC8A2EDDD1DB70C3045D660E
A1499CA5790A0C37FC4772C2852AC4F4FBB2B6650767D115F01B372BBE64D780
3D272CC5484085CEDD> |
26 <001C60D8A8C9B79676C22A5C22C69BBB7AD891C806BCBFB423BF95D727DB
67A28B87DBE0E386B4F4155F2A7066B45FE440A20A24207672228C04D3ED17EA
7566237DAC32CAA7D4DE588A39CBDF6A7C3913CA016CA738C8B935EA0F43C597
50C104F09BF58BB6443409C73538E38E062C0C6B65AB726F2A999499D129A5AE
B15DA888CBDEA2303335CB0331BA8D6A6AAE051567EA12348394A3DAE9258E0F
D3D69EBD> |
8 <001C60D8A8C9B7AFA9C060D99E534CB34AD741FF4C737D49A25807C870075
333C96529D32F262FE724FAE797790039408020011E3542491B8CCCA2F422F47
B82EAD2AEFD90F914B01B76AC8DDB60400215CF124D5E6B04D6CE9387E2102FD
80E2BB1E0887D5A1B984460423FFADDDB84C84221C2428D1837CEC0F949E6141
E7C83F5> |
10 <001C60D8A8C9B795A0BE0578018AEF31B97E2C4D7D2E55FF7F9B5663D712
8ED7F8EEF533A110A10327D21C56ECBE88F09468FC8B4C0D0DF32F315EBB0380
BF063BB670BF2BF129A44DD3E6AC9A61F34E1F76A9F6BFF0E0E3515B944F59EC
670FF3E65E94412584EA6238397A58E2D0A831A0ECA430095E88FDE00A270D5A
8D08AC450C72B959A67DB62C4DC013E34235324A12FA255A89C46D32E01026A2
C8EF5CF1587E3C547D59F2123478B286B9EF55365F35930DC96C698D5E3C8FA2
77B3E315C55C05A8B2F5C8988999681C8B4DDEBDC7B17062301AC7460E478FED
C9558DDA41691B3367CEFBBC476057164BA6C29BDF3212E889C6BA> |
9 <001C60D8A8C9B7C2FB34A803CDA35D727977D512187250F04D5E91676E23D
C40622057A63BF141233CE9D21137B69C0972FACBE83DEEE9CA6A80129375207
E182CA3222FB97B126A1891ED2B1B098EDAA36FEC4DC73FC534E953CBADE4C7F
A9E1A4579F02C34F2482F37E53A43CC79A20EE6BFFE293081D3161D567D016BD
06614F7B4EC00A3135871250824656B6EAF5F08042ECAEE2ECE7E7074722AF36
30FDA5C41A55BC548> |
5 <001C60D8A8C9B87A8F720A88FC18ACF9A61C8CCA844ACDDE3F43F4D9B248D
16803C8BA308601B024BCC6042D8AEE10D6> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QAAAAA+*Cambria-9430-Identity-H /Identity-H 0 [/QAAAAA+*Cambria-9430] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMS+*Cambria-9430 /QAAAAA+*Cambria-9430-Identity-H findfont ct_VMDictPut
FZJXMS+*Cambria-9430 [7.5 0 0 -7.5 0 0 ]msf
188.89 126.35 mo
(\000\013\000\(\000\024\000\(\000\025\000\026\000\026\000\027\000\030\000\()
[1.44 14.1699 3.83994 -9.15528e-05 1.73251 2.14496 2.14496 2.29501 2.01004 0 ]xsh
FZJXMM+*Times#20New#20Roman-9423 [13 0 0 -13 0 0 ]msf
218.9 126.35 mo
(\000\001\000\002\000\004)sh
FZJXMH+*Times#20New#20Roman-Bold-9420 [8 0 0 -8 0 0 ]msf
330.96 11.6398 mo
(\000\004\000\012\000\014\000\007\000\015)
[5.33997 2.05994 6.59595 3.48401 0 ]xsh
334.8 19.7899 mo
(\000\004\000\001\000\015)
[5.29443 3.74243 0 ]xsh
FZJXMK+*Arial-9427 [8.5 0 0 -8.5 0 0 ]msf
348.24 -13.3301 mo
(\000\006\000\005\000$)sh
%ADOBeginSubsetFont: RAAAAA+*Times#20New#20Roman-9419-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (RAAAAA+*Times#20New#20Roman-9419)
%%Title: (RAAAAA+*Times#20New#20Roman-9419 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /RAAAAA+*Times#20New#20Roman-9419 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 20 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 20 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
11 <001C60D8A8C9B8856D651A956294E12E6E6660B060434821E8B005235076
5379A27243A20DEFBF69A022> |
12 <001C60D8A8C9B886222A0DB522A4D330B1530CC5EFF298F0C0125A0288F7
660722B3454E6A4A387382AB041C5DF5A6CF7D44FA25> |
13 <001C60D8A8C9B883CE48693D030E7B1AA77C2B7D7E5D3F17EFF315C544D4
7CF263EFDC10FFFB0E9C5E09B00CA65E290B1D52292E3C1D8F84D889EC005906
50DF3DE55A6DED1A2E> |
14 <001C60D8A8C9B88C086CC94E509A91CB792E0B1C03A1197C620480D4BF94
872CD99486E83AAB27C22CFC2C114C928DDAFA20973C6DFCE84D4C08A8C733A6
36C5F08E549535E16DAE63D52194FD01FDEFA6A4E5821ED22A4FAB8B93AE> |
15 <001C60D8A8C9B88622044C10E8CC474D48CF93BD6D5473A0E291CE753A26
4701CE41EEF34AFB55A6185D62739E00413BBD28E3FDAF7CCDB6> |
16 <001C60D8A8C9B8862207E2DC040AB9D58FD8EED4AD78DCEA346E23265B6C
89ABB8B1C722E9F4C231B9169DE0BF32C821EDBC57FB5529D7443B7A4E38> |
1 <001C60D8A8C9B8BF28B6BC0D04F09FF3E972E658CEC890A0EA7CBC533E9FC
A1EE71BE7972D6919583C613710688C4B5C98D6D13AC53AEA41729E0A61284C0
51793E6E0697A993A9614F15C55F0222190BAC30924006B190D5BF84FC8A4155
641AECAC3AA709BF81640C5CCD53F4725> |
17 <001C60D8A8C9B883CE6A360F989E4150DE85B9222CB9AD2C02C0500AA9CF
0569E92F3A2C3D8D78D95EBA8D4570EA6984AC610B2313E857EAB36B31B07A2A
C8819357CC342A8B58BFD2F59424F344318B2141DBB11FA73CDA> |
8 <001C60D8A8C9B664828BB3E2156A679429B2D5D8E26A2F6BF25B067BFCB4B
434B85F56330830D2615EB159FC44F1D2C24317ED3E1FFB1C09AF28F978A9304
5316D1A81A4B27A4336B7EAA96483CE115E9745685DC3AE9B60C1B6D7378EBB5
7BE15DCEBF82464914EE448E9495B2C3D38398F50FC645A67A09AADA37640ABF
CAF19AB2CDEF97AE187CAB3688E0EBC0F8E38523D5C3F6A12E2C5BC85CFD3524
50A2124F0AF28243EAA5A3BCAC388098DC367A608E161A511F4F7C3DA1284A5D
61F8C2BCD490173D4F201E67DA5998BBB21A7089123A6071F0334CCA6E4ABA14
E87EFB29F15ED97F0EA1DDBF8D741E67ADD550910E761C4D5BC61586DAC2D118
C57BD000F226E2068FF467DEFC88753F5EAE9A88ADF456D2286F2D84B7385060
69E8D4DA33CB0B8947850FCB50AF9ECFF2C340368B7> |
9 <001C60D8A8C9B88055A83A72E3C0B405D06453FABD5C28BD31C17209E72B6
8BFFE18C2E31AACCD70F6F5C1FA7341A1B4B9CE0D06D51B87F619B3CAD3B37BC
40C0B1FEE4658EE4D8C338460C9A08F2425792BF285A8FF1F302A4D73DD512B1
B35AF398D7E90EF30AB8C6F8B76CFE80B7D8C2FC93D3220258EB061FB3DA5A64
361E1DB34C5AA22FDF351DC715CB0D786428B1BB4A8D913D1C0D77AB751B6C1C
4D1ABC5F7B6BE57C771891A023BCAA2170197C2450ABF76424318A518A0E6901
0DE45B429BDA3D61EAD897B00F73AFC4EFF213D29CA933DA38EF7D1DCE328069
E72> |
7 <001C60D8A8C9B742B24DE88DA91BB26C481AA1957D4BD7E56DA79DA4695E0
40E93AB55A8EF37445ABD1A363A6D184BA87E5B1A565EE290D2067CDA557F8B8
30CDBA3F7B7332DE841A21131D5EC1BC465CA0E2C02736311DEE3F7AD4D66EB0
D96B18AF7DC6F00D2C89F10978174962254392D469CB7028EEFB87583EBD047D
B850A116124172B52A93438B07FFEFF0BE4703C4DE04D6BF965E5FCBE58FC1B1
AAB9705209C4D850A225A7C0DC12079786D737915E5E3BDFDC74A9C748D5EDA1
FB8BA91C4C3DDD5BFA2616C34384974802CDEE3D8DAB1EA303B5D06563058848
FDBB5E1032417BDF3DD8B91D3B57E82F831131D289631C1020347941BC6FADD7
836EFDD0AD3705B01AB78F1869BB54B00300AC821F194E71BEACB3068DDE3FE5
01CC8D1A1802F35B05E7FC207F8F8CF2C4BA1AD302ED805C44AA680240133BA3
7AB73814753491E2173A133CF2606D7DFCD96523DF2E4FD4AA7D5A2B2B4419EC
3C113853CE5A094FED7BD47CEFA59D5086C3C4FAB88FACD0BED657E8AC44B1E0
1D1E5C6219E5E8482D0FEDA5D3299A08A8763E5BF62F46CDA93B0D702883749F
CB68452A392ED7E20AC06D9725580B15BEF1EDCEC8249E6B740DC3B03CF79DF0
8F621A8202C10B566779DECA13FB63B4D6AC6454CFE1F72CAB3D4AE064E79C75
F74A28CC61B1655432CE6C018F3F5ED81B8E53EA982A4EF62929DFE7D76E3425
8EEA135629C2B05827F1E39EBABDD4B8B55B55960A37FE3FFEC29341E6CCEF2B
60A21EFBDE4AF0A31AF84B9B698349754C7BA79260DDC361D4A2BBA7378D79BC
CF029F09B8DC4A92F9B> |
10 <001C60D8A8C9B8849F83CF10269E3D61D75EB25F15B0CFFB74666E364A97
3000D8E44B6BDA10089028EA94E01A5FCE23B6986AE280941E9F5FF8DC6B2EF4
7C77795E7A243728D7A42430344373987DB2150F4BBEF90C093BF5B973025559
9C1F08819A338454393D725B6D0FC9FE58D0A8A648210CBB6A10B3D2D9719541
B1821271C071B786C0E304779BA73743C05ECCB489118F95310EFFF213B83F5E
CE040C3B2592B4077ABC5549C5A2ECDE7703F8D880EFDE35801237B51B2CE5D1
F3817DCB3909679D2357C6FAAF701840C9E4CC9820C845537040B35BE0B16E68
75CAA9DB000C2EF3B049D231DA47B9445DA3BB2DBE9BD2AF7FC618FDD054798F
0F54C4AD2BAF60B17FCBC51AA3D060476097D63D6DE2775A70D82DC4283C9B8D
96CCFE6723FD5FD28386211C485108863750ACE6B782232C8E5A035F78715AE0
B5DB265C2E062653437C29C0264C09F0387575705BBD6B016B6871515602C4DD
B1AB6F> |
18 <001C60D8A8C9B8E4F675DF0C306738D6A9D4F183EF777A9ADA7D2ECA1C01
BE1C00DD9B8E078A404D8E7706BBE7EEE509CF136FDD9A84CEA879F1D88EC8> |
2 <001C60D8A8C9B882F8F40AF1DD202D88C3F742B2A75E03990CB7A23CE40F9
4696A8BB0CB664D13EDB956BE90D4688D7FDD17B057> |
3 <001C60D8A8C9B88B3ACB8C7610A2C4296F2B0F69B9D5FABA210B382EEDBE7
998F8C820D9735DBA0B20180F56FD2F232E43C5> |
4 <001C60D8A8C9B888C1BF941C02D8037B6E914309D5CF8D1F5BA144D599474
E01E5DAA3521AB489326865448A2F9ABEDA5E1A7F1C7504124A83D893310E8D3
BE5657DBA496E27FACA30BCADA92D86C60F1279A9CC> |
5 <001C60D8A8C9B88997F5C5364F88145E26CA9E06AED651F1E1A45D33230D0
F3F8492A02749A015B55367D033B90B74012DA70E68BDDBE7B297330D5D17E96
A2629E52F28049D6509544AC1A3B1AFEB9FA232D1> |
6 <001C60D8A8C9B882F8F43508DDD272EBEB166A941F94F6A61476CDA6D8310
A842B6822D0FEFE54741648C16F4B5C6E498505B9FDC1859A05976991FE93831
404D0540CA0A6064D67> |
19 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /RAAAAA+*Times#20New#20Roman-9419-Identity-H /Identity-H 0 [/RAAAAA+*Times#20New#20Roman-9419] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMT+*Times#20New#20Roman-9419 /RAAAAA+*Times#20New#20Roman-9419-Identity-H findfont ct_VMDictPut
FZJXMT+*Times#20New#20Roman-9419 [10 0 0 -10 0 0 ]msf
11.95 128.58 mo

[2.30698 2.27692 2.32697 2.21695 2.21695 2.21695 2.21695 2.21695 2.21695 2.32697 2.21695 2.21695 
2.21695 2.21695 2.21695 2.21695 2.27692 2.27692 2.27692 2.30698 2.27692 2.27692 2.30698 2.27692 
2.27692 2.27692 2.27692 2.30698 2.27692 2.27692 2.27692 2.21695 2.21695 2.21695 2.21695 2.27692 
2.27692 2.27692 2.27692 2.27692 2.27692 2.27692 2.27692 2.27692 2.27692 2.30698 2.27692 2.27692 
2.32697 2.21695 2.21695 2.21695 2.21695 2.30698 2.27692 2.27692 2.27692 2.27692 2.27692 2.27692 
2.27692 2.30698 2.27692 2.27692 2.27692 2.21695 2.32697 2.21695 2.21695 2.27692 2.27692 2.27692 
2.27692 2.27692 2.30698 2.27692 2.27692 0 ]xsh
%ADOBeginSubsetFont: SAAAAA+*Times#20New#20Roman-9418-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (SAAAAA+*Times#20New#20Roman-9418)
%%Title: (SAAAAA+*Times#20New#20Roman-9418 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /SAAAAA+*Times#20New#20Roman-9418 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 3286 1679} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 10 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 10 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
5 <001C60D8A8C9B8B375185969E70FBAC01D47DA22B55680F47DDE8B761577D
C1232E8B8B97253877F0FBD29B0BC1A49B2D6EEAAA788CA913F46C87648D7170
351F5CB5579BA546B09191D5627DB8B5DC1730A1423E4C5BB5E962CCDF1A3435
C32D572740AFC3D88ED2302315069933D0FAEED76B1B90B9F1F98F95513A64BB
E272AD9C396F3EECCA941F15539A17B146938085296DCAD032C3D22E0B92BAC0
69209A3FE34EF3BEC776E24FFBA38871D480874A92BC0E35C8EE54590A1E2578
8B55CBD3BBF498FB54E9DCB5D9494D31F80C79D3D19FD385944965467514024C
255A5CAC33F8705479EA9F095410DDE9A25C7FA7EAAA6F995EC218610357704> |
8 <001C60D8A8C9B08A9512A536BDD2D0C5793CC333D659FE06C10389C744E27
C9FF367D6F355046B2AFB3C7718BB6594E694CEDF3776AAE024FEC734FC1E3C1
B4F8E1C9BEA0AAD422BC3F085CA7F4E722352F085D5A38C7182A000404725B40
B5077C277F1077AF1B19609A0F55792FB80D273EC6FD1C34F5F007907F86EA13
65C3604CB9299CF02AE58DA362C75EC9DB4C33D0FE53F18051231E48D685209F
04EAB8B1F96B804929D0DFA1A4DBE3F92A360F18D534B5029C5AE3B6CAD074AC
9FF11EA4E10E9E82249A1A61A6E2C5231FA761CE79E390BA198492622E54ABE9
F6B7E9617696CBA78A3AE9586D25ED79519BA7DC750A250A3F50FE59A36A4613
B46EB60249A0B2D3D0F09DEFEF92E4D6DE5635D0D01265BA011979A69604A5DA
28DAD38511C19D8FE594A74FFC4445023DB99486B6FA8933477588D6645A4A67
910AE855C9200A393D57E6773F6EEC26D6E87C6780C32660ADC207ADBD5636B9
C564B07D79DA249A1A29A5CAF53525C6FA04650B7> |
1 <001C60D8A8C9B5B101837521AB0EDFD131686942009DD98BE2DC89A546B72
F2B8203238BC58B0C2BEBDCDBBFFDCBAE123AC2291A9FEB22BF95F063108EE0A
F71F0B129B169660877D4D097A45B631E664E22F8C2C0053F2CB07268B14A821
F21C3AAE6B6B29EF5FA06B8F96F18AE187BB409DA8A0D0F23F3FABD8529AF136
894641F86DAA2770577FD2CA239F19E627A328FC2A2612170> |
6 <001C60D8A8C9B85EE386AA25203C195C753AA52D3D684BC168B7EB4BB2DD8
9E0EF94F7B8A30121011197CA2CDAF3ECFE070EB5C7CCA0E3FA9CEC77A1F850B
2FBD0E6D645ECA1F99D0A4FEE0F0925191B6FC4E557DC076FB7B48ED4F26A0A2
68B9C2ACE303E3D9FFE7190B15E1982C38235F9B01E02997F2758BF8F08B94A4
2518B41645D5BA89DC64385317CE038342BC8605286C2F45ECA735C93759CB4C
035B0F8F9FD506EEFB1F39ED227E255A18686CF5DDEA2C4> |
3 <001C60D8A8C9B780B319B1380D2E8A12D3438C4F9554FB2D9D5724B5A3C53
3BBFE149283BC36B37E33854CEC18F248B1DDEA06687A4CAE502ED5E50DDC571
365884C7B33A49E7EE2E03651F5BDD9E578E999C67C1DC4EAA478490AC7A47BE
4B8AFBA21526BC53CAD26B99089B74D0F2CA6373B19B036C3F788232BE11790E
92D55D18CDEFE1DF3DC85BECFB307CEC0283D225DD5F7A2DAE2566958BB50B42
8> |
2 <001C60D8A8C9B760FDBBAE4FDAE82EE5741204AFC0F7FB87DED0FFD0A5BCE
57FD5ACD1F0EF2FD922BD88AAE02F475F4B25A518EE32A121ED17F10E438791D
811922E237CFE63E15A5EF948DC233A56FFFB10E3826CAC8FCCA8A86F4631101
146D1574ACF> |
7 <001C60D8A8C9B7A22517C3BB5F41EB5FCB36F0DB2894B4A13D545939ABD2C
6889B444148F3DE62EB7CB988295049752D7948ACE7AAFFE3F3A31C539FEB128
05CF794F2558EBD9E719836E6F81B67B801D6D04102880C171652F98E2936FCB
59E064567602946ABF3A82F7B5B6088AED041E1988B583A25F9924A39FBA77D5
906A370BFFAA455EF661E90584B02235FCD1474941E86C84641E120B0DCD2B7B
C54AE085F5475666CF1BC7DC96AF1423B7EC17B6BA043B751807B564365D9FF9
AB4EAFE6836CAFB97C292> |
4 <001C60D8A8C9B801FDCBF1FD1F3D337DD2D3A40F33197FB06864FF9667F00
0AFB26A0006C95A67E493FA213ECEDB453F64CD28AC0604FBAA63CF79FDD3AA4
37413DD04BF60AE049C41E7CC0908EC0FAA71C9D704F76BF4A07A0E714B1BAE0
139B3135B4EC3> |
9 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /SAAAAA+*Times#20New#20Roman-9418-Identity-H /Identity-H 0 [/SAAAAA+*Times#20New#20Roman-9418] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMU+*Times#20New#20Roman-9418 /SAAAAA+*Times#20New#20Roman-9418-Identity-H findfont ct_VMDictPut
FZJXMU+*Times#20New#20Roman-9418 [6.5 0 0 -6.5 0 0 ]msf
189.13 139.8 mo
(\000\005)sh
FZJXMT+*Times#20New#20Roman-9419 [10 0 0 -10 0 0 ]msf
188.89 136.86 mo
(\000\001)sh
190.78 128.56 mo
(\000\015\000\016\000\021\000\016\000\016\000\013\000\014\000\014\000\017\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\016\000\016\000\016\000\015\000\016\000\016\000\016\000\016\000\015\000\014\000\014\000\016\000\014\000\013\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\016\000\015\000\016\000\015\000\016\000\016\000\015\000\016\000\015\000\016\000\015\000\014\000\014\000\014\000\013\000\014\000\013\000\014\000\013\000\015\000\014)
[2.32834 2.21832 2.32834 2.21832 2.21832 2.30835 2.27829 2.27829 2.27829 2.27829 2.27829 2.27829 
2.27829 2.27829 2.27829 2.27829 2.27829 2.27829 2.21832 2.21832 2.21832 2.32834 2.21832 2.21832 
2.21832 2.21832 2.32834 2.27829 2.27829 2.21832 2.27829 2.30835 2.27829 2.27829 2.27829 2.27829 
2.27829 2.27829 2.27829 2.27829 2.27829 2.21832 2.32834 2.21832 2.32834 2.21832 2.21832 2.32834 
2.21832 2.32834 2.21832 2.32834 2.27829 2.27829 2.27829 2.30835 2.27829 2.30835 2.27829 2.30835 
2.32834 0 ]xsh
331.64 134.63 mo
(\000\010\000\011\000\007)
[6.25061 2.34055 0 ]xsh
344.84 128.73 mo
(\000\013)sh
347.28 134.61 mo
(\000\012)sh
349.67 128.68 mo
(\000\015\000\013\000\022)
[2.23526 2.21527 0 ]xsh
FZJXMH+*Times#20New#20Roman-Bold-9420 [8 0 0 -8 0 0 ]msf
28.2401 141.9 mo
(\000\004\000\011\000\014\000\006\000\015)
[5.28113 2.07312 6.53711 3.7052 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
90.9601 144.34 mo
(\000\032\0003\000 \0000\000>)
[5.53429 3.04379 3.56233 2.55081 0 ]xsh
107.97 144.34 mo
(\000\026\0000\000,\000"\000.\000\033\000\)\000>)
[4.2317 2.46365 3.84067 3.88321 2.44666 3.69618 6.04219 0 ]xsh
FZJXMH+*Times#20New#20Roman-Bold-9420 [8 0 0 -8 0 0 ]msf
336 147.96 mo
(\000\004\000\003\000\015)
[5.32556 3.98157 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
243.12 144.49 mo
(\000\032\0003\000 \0000\000>)
[5.5343 3.04376 3.56235 2.55081 0 ]xsh
259.929 144.49 mo
(\000\026\0000\000,\000"\000/\000\033\000\)\000>)
[4.36258 2.59451 3.97153 4.01407 2.68805 3.82703 6.17307 0 ]xsh
FZJXMH+*Times#20New#20Roman-Bold-9420 [8 0 0 -8 0 0 ]msf
32.16 150.37 mo
(\000\004\000\002\000\015)
[5.37 3.98596 0 ]xsh
%ADOBeginSubsetFont: TAAAAA+*Times#20New#20Roman-9414-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (TAAAAA+*Times#20New#20Roman-9414)
%%Title: (TAAAAA+*Times#20New#20Roman-9414 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /TAAAAA+*Times#20New#20Roman-9414 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2995 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 18 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 18 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
6 <001C60D8A8C9B8524CA9AA8AA4A2849962CA51BF1FA92E3CE27BB723B9F4D
59DC8D2C8E7F45CE3933E61457731E1B0BF5C57921CB5C0CD89> |
7 <001C60D8A8C9B84C67720414D5678B028F4A172F5BFEE7C9F4C7C1B03C99F
B5E6D1CFF0DABA485E9269DC6750C7F17BA050512F21D1BDA5CF8400B424C> |
8 <001C60D8A8C9B8581A5C9FDD652B14C495B2FC6A6B364F65498C3E61C4FC9
519F5599FFB8C40FDD48848ACE3D828DE2AA781B294CB0CB5C9367168DB3451B
CE35A8954F557B0> |
9 <001C60D8A8C9B85EE3BC1704BD07427FC1128293DB422FC61857050A72EAD
92B8E5F619151264677E3109D6EC7253A5EBFEAF288093D420072E58F93BFDE6
85463F0645C> |
10 <001C60D8A8C9B84C67691457629FC22D3E30FC17759FB0697ABCA36D6F3F
81EF5FD1E7D5CA6098F036961DC0592638842D1C4AF622DD3E34DEB6B60AC3> |
11 <001C60D8A8C9B84FD8857A0BD20351036CED982B71957DAC6D008756E1F8
B57297E5FD89BB6C6EEA85EFD718D3F6A4D4F47B27A02E089650A14340F1217A
70ADB9A9FDBD4815DC119FD2CE10F31D380824B454B0B4> |
17 <001C60D8A8C9B8707C25> |
13 <001C60D8A8C9B86D0BCA7CB524594DBAF2EBD14EDC181C9B2AF1192C33AD
527E87BDD84669707A8DB00C8E03C9FB4F65E38C109EB7C7316038B1B619AA92
EC84494D4C2E976B864D6BD1F474017EC6A7F978F258DF7532D72ED36E4C72AA
01602FE67300C5015DA054BE76A6AA633C> |
14 <001C60D8A8C9B8707CDCC97AB6195AE86469903585AB500C2886BA2FAA78
43EC533BF4C90F7877E0EFD30992BDE84DA2F44EA538233D3659B8BA14853318
BDECD7446F> |
15 <001C60D8A8C9B83E2DA4D6AD13BB77FE61926767432E6A1B290E8AFBEC3C
ADD3237DA26C28FE70CF72E94F1CEFC1DA802CCE4E4AECB7B7> |
16 <001C60D8A8C9B8666CD6095345F9AA5489F20AC626F9F2E214FFFA4A60C9
9378BE817DF9FCF435CAAB9E8A268EEBD251CC4E2EFCBB5195FDB7E3B5B95DBE
1155AB11B75995BE80D20BA5> |
2 <001C60D8A8C9B8666CCB6DACBE806056B8EB690EDD686ABD92E81F83893DA
B97A460718B5E7D338F7F6B230D948439ACC2320F63ECEDBBAD5A71E6BFA4633
128408E5148F5F91176496CC5D4EC48865453542A438F10CFD318CD0BF0CAB55
2F4B25C0FF9664151> |
3 <001C60D8A8C9B87A8F7229F5807D0FB78FB331C0DB98D55CB636D9CDECF4F
A5AD135130F3AB9111DAD9A7554B26FE9FBC9A25BED08CB3DE258CB13FC798BB
F90D3E4C3D4F2044CB903C855FAA556B05BBA40A4A0DBE069973DAECBB78760B
40F831F3D5EA7FC935AFDDCA4C4BAE8CEABAD06FBE1A94C5617DA03E0539E15A
E3E50> |
12 <001C60D8A8C9B8E83903199DF93C8A846DEFAC1365902AFA127F002EC4DD
36BD9EC698541BB318C15FE48CBF502AEB8DB00AFC1C613387FA31614CDF69F2
526A3C3D85E2C581F99F03CB3681DF5EDE24BD88B483> |
1 <001C60D8A8C9B76356E8F9D06EAD3CB6CD230891FA783DF73BB1591CD901E
38F5204D39E9ECBF5103522C1D1A0D1E0E9F2FEAF0FB981A3F37D6F1B5AC41F4
ABA46A41713EAADACB41BB59D72575D5B62FD3595A31016F2F4DA3AD63734A89
5DE5A61E6A91B601AFC299D234C5B4E58EFDFD900FDFA4B1FF8FFEA3A86EA016
7DF65E2F90D051B0A3BFF5336D32CAE05B65B0A4587B49BE87D8A56BC96595F2
F680C0FD488E363B786F3E1418F62A0D6E2AF23182475CCFB99E0F4FFE124E78
F9ED4AE9BE21890FF9131C40CCB058C5524B0D064> |
4 <001C60D8A8C9B08A9511453AA73C1C8EDDC973E61DCA4EDD69EF03DA61200
95D79F2F4F7C17399ADF0EE81C616EDBB0B85834FBA396920EA0D0C6ED8E830C
B9071004B4309BCC29DB36AD06F7F577AF64E5462362172BFEEC37A9B0DE9B5E
C6B528C3433BABAB1C2531F1163A8915FD3181306536E6FC72B5387C331B34C7
F9F497616471ED7869A168D93FD4429B682378AFFA3BDBCC53B449C550598ACB
C19E8C3DA22E0D0EE3E54F4A122B68A808407D0E9B9A3BE0CDEBC15199D2D33D
7207BEB045580E0C7C35BEAD081428994DB7A3D615C5D72A39FD6B01B7FE9949
1DCA9709D48CF3C2ED900A03DCA3320B70748791DD24E6AA9C2A09DB231A81D2
304BFB96A32EA4722A453DF5C60A0D87AE7B8FA57463768FD41280DD8E1BFD2E
CF8FB72B7EDC169579E> |
5 <001C60D8A8C9B08A9516A4DB58A7FB1EEE11518526694FA1FF083D16483EB
24154E04A520CF5442CE776D059636CB624519D2E686497EA3DD205DD3D49FE8
7E852B19D5386F844A035106EEC07CCCEE5210BCE1FF29E722B1077D5A4AF1CF
038B0B5EC42E8DB8D0628009A3EFB2CED204065B95E23433962C055538CC9DB1
A4062A95EC091BDDC904132008CB35305DD0250256DE60EEADF9856019B69565
9C03243439BD016C92ED97EE523620F514156906002F70B1B500D680FFC688C0
1AE5AD26869401E51B8D697EF204791737BEF50628954592EFE0BE9C8297E2A2
A4D7329A77C69A25C9AD9004F2080B71996E97B89BA135412027886A04F01572
A643D1A22BE007F764367EF40A1699FC4BBB6A661F49A8E8E07BE15114E458B7
0013B264A4B916B23B48E676B3D087E614D03952660FC9465476B168AB81AABD
632D570B378882245FE07B79B8B9A9D2A5ED441A90FCDC06DA5320AFC9CEAB5E
2E5D56687DAF4D0D80C6041E708> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /TAAAAA+*Times#20New#20Roman-9414-Identity-H /Identity-H 0 [/TAAAAA+*Times#20New#20Roman-9414] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMV+*Times#20New#20Roman-9414 /TAAAAA+*Times#20New#20Roman-9414-Identity-H findfont ct_VMDictPut
FZJXMV+*Times#20New#20Roman-9414 [8 0 0 -8 0 0 ]msf
53.3801 150.62 mo
(\000\006\000\007\000\010\000\010\000\011\000\011\000\012\000\006\000\012\000\012\000\012\000\006\000\012\000\012\000\006\000\006\000\006\000\012\000\006\000\006\000\006\000\013\000\006\000\006\000\006\000\007\000\006\000\006\000\006\000\006\000\012\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\013\000\006\000\013\000\011\000\007\000\011\000\006)
[2.26379 2.31177 2.21582 2.21582 2.16785 2.16785 2.31177 2.26379 2.31177 2.31177 2.31177 2.26379 
2.31177 2.31177 2.26379 2.26379 2.26379 2.31177 2.26379 2.26379 2.26379 2.30383 2.26379 2.26379 
2.26379 2.31177 2.26379 2.26379 2.26379 2.26379 2.31177 2.26379 2.26379 2.26381 2.26379 2.26379 
2.26379 2.26379 2.26379 2.30383 2.26379 2.30383 2.16785 2.31177 2.16785 0 ]xsh
157.54 150.22 mo
(\000\006\000\006\000\012\000\006\000\006\000\012\000\006\000\012\000\006\000\010\000\021)
[2.26123 2.26123 2.3092 2.26123 2.26123 2.3092 2.26123 2.3092 2.26123 2.21326 0 ]xsh
180.25 150.22 mo
(\000\007\000\021)
[2.28796 0 ]xsh
FZJXMT+*Times#20New#20Roman-9419 [10 0 0 -10 0 0 ]msf
199.79 149.61 mo
(\000\002\000\002\000\003\000\002\000\002\000\003\000\002\000\003\000\003\000\003\000\004\000\002\000\003\000\003\000\004\000\004\000\004\000\003\000\005\000\002\000\002\000\002\000\003\000\003\000\002\000\003\000\002\000\002\000\003\000\002\000\003\000\003\000\003\000\004\000\004\000\005\000\004\000\006\000\005\000\005\000\003\000\002\000\002\000\002\000\002\000\002\000\003\000\002\000\003\000\003\000\003\000\002\000\003\000\002)
[2.32056 2.32056 2.25067 2.32056 2.32056 2.25067 2.32056 2.25067 2.25067 2.25067 2.26059 2.32056 
2.25067 2.25067 2.26059 2.26059 2.26059 2.25067 2.27066 2.32056 2.32056 2.32056 2.25067 2.25067 
2.32056 2.25067 2.32056 2.32056 2.25067 2.32056 2.25067 2.25067 2.25067 2.26059 2.26059 2.27066 
2.26059 2.32056 2.27066 2.27066 2.25067 2.32056 2.32056 2.32056 2.32056 2.32056 2.25067 2.32056 
2.25067 2.25067 2.25067 2.32056 2.25067 0 ]xsh
322.89 149.08 mo
(\000\014\000\015\000\023)
[2.29202 2.34207 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
8.40005 167.27 mo
(\000\032\0003\000 \0000\000\015\000\024\000 \0009\000 \000&\000>)
[5.55659 3.0661 3.58464 2.57312 2.99814 4.34117 3.58464 3.92471 3.58464 2.19919 0 ]xsh
14.16 175.19 mo
(\000\030\0006\000*\0005\000$\000\)\000 \000>)
[5.19719 4.31317 3.60773 2.17117 2.31566 6.14919 3.58218 0 ]xsh
16.3201 183.19 mo
(\000\031\000:\0003\0005\000 \000\)\000>)
[4.19826 4.01122 3.10164 2.20917 3.62018 6.18719 0 ]xsh
14.4001 213.89 mo
(\000\025\000-\000 \000.\000\033\0005\000$\000+\000"\000>)
[5.66776 3.72121 3.54274 2.51424 3.76375 2.13174 2.27625 3.88281 3.95078 0 ]xsh
18.4901 221.87 mo
(\000\031\000;\0003\0005\000 \000\)\000>)
[4.14612 3.9845 3.0495 2.15704 3.56802 6.13507 0 ]xsh
20.4001 229.74 mo
(\000\023\000 \0002\000 \000\(\000>)
[5.62961 3.59814 6.30963 3.59811 2.2551 0 ]xsh
11.7601 257.88 mo
(\000\026\0000\000,\000\035\000 \0003\0003\000,\0000\0003\000>)
[4.34857 2.58051 3.95753 3.5325 3.59203 3.0735 3.07349 3.95752 2.58051 3.0735 0 ]xsh
%ADOBeginSubsetFont: UAAAAA+*Arial-9429-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (UAAAAA+*Arial-9429)
%%Title: (UAAAAA+*Arial-9429 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /UAAAAA+*Arial-9429 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-664 -324 2000 1006} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 8 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 8 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B71B409F31BEDCE96C13A1EFBE153A4391CC60C0C5A02224D
0DC48308B087851B4A0C2C46F3F52A48279E0CB0C83FDDD5BBDE37A2A8FDB5D8
A57A60C1CD1A20BF1C24C3EE5126C7BE83895B987F6C6C834D3ED807ECBAC2A1
C5DA23E51834B3403B8D52FCEE126AC4DAFE224811A457C36B50ABF9ED5B0510
0A9C370C2> |
4 <001C60D8A8C9B6CD37DEA77BA11F9E16AC9EDF9DD1942AA36A5F3714F5058
A3836162E7C2D98E8D73C392F2A441DDBE3B170C6A14D069AE9FC346FE06850D
39AD54CD9AA83F5509C89782079BCF00C7FE37DD557CE6C74850D01881D02CB4
AD78656A35E0C25A22240D9F5013A1B29FCED549C7368CA50C017BED106F5831
96CAB0F9C0843F534C44AC50BED8C1D22623E9B690CA03B810316FAC8B0438B9
5A132B4D984EE4F58A26C9B0F601D1E38F857111F13A9E07C1D70CA48E8C1D1C
430E839E2646DC49E96A073979DF451B35CEAB0541DF65A162CD3F64308233F4
090D79DDCACC97F749F7F7E4AB34A904FB37B6EFD2903> |
3 <001C60D8A8C9B817A0741629E5B0D586445380FF53DC7A6D6762440C8565E
6D843CDCD55D6F6D66C6AC534B2B9E0CC38AF4FCBAB44996D86DCE67C257F9FE
8ACF4C97678E00E186EA6AE45820C5EAC1D1992883671C2345A3BB9B14D48149
CF066A0CDB315A7866F415C8A52E80004C7AA50031FAC17CFAB5793E178D9154
E2024AE5BEFDA3DC24A97> |
7 <001C60D8A8C9B8707C25> |
2 <001C60D8A8C9B813795036548420561A8D912B17615DA3AB8EA5E975C48FF
BEE2E078C449312AE505DF19AFA1E7C2311ACB3124CBB5EC8F4DCFB922BC85C7
00BC9A584774BFFF60F29D877A5C231DB98907CC6CC0587FB6FE6B708B57D526
B914BC72232DCC80AD1336F2324CCAAFD4F3EB8B7825281DE82A99C1A71C820A
910EDB0D1B5416DAA44B6B42A436A5F19D5850A32362D33> |
5 <001C60D8A8C9B63300115356A10EDB623CDA4B0B8A867BEF34117E9389750
933627A9DB351E13C3E6A76F96E76BA35199B854A589BA3399798141D39648A4
4111D544A14F056BAFA6270B9F6CA949E070705B40FAA79B02F827C9AE65664D
01A5F17A26E306F27D5BDB86040F1697D1DC2F9A19AFFDB16873567631F72653
14FCEF3998CCABA8183> |
6 <001C60D8A8C9B6CB9042595CD463E31E406CBCEC02601A17007E84683F997
C2D2F70A2E4A8DC9F7CF89F5DF8A9B2F00A17C87E01FF919C28C66B51F9F3ACB
A3577A6C3A9AD942FDF8908EC5BB7FE6A5E5E7F207DBA743C33FEFF33B99E230
2113F7715F3C867631BE9478B1F34F15CD1E588B4E5551000B213180A6FD9ECA
C83B720E8BC4D3535B644D268EFF3426970F884428422FBBDF44A52B568B7AD1
98B853067AF41FAFFEFFD1AA4D719ED85F03B0EF9218C34715CE5CDF312CFDD0
8CB643E9C48466BF27DAEB7DAD617CBC3F400> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /UAAAAA+*Arial-9429-Identity-H /Identity-H 0 [/UAAAAA+*Arial-9429] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMW+*Arial-9429 /UAAAAA+*Arial-9429-Identity-H findfont ct_VMDictPut
FZJXMW+*Arial-9429 [7.5 0 0 -7.5 0 0 ]msf
65.33 206.41 mo
(\000\001\000\004\000\003\000\007)
[3.14209 5.96214 2.57961 0 ]xsh
119.04 205.44 mo
(\000\002\000\005\000\003\000\007)
[2.66006 5.33752 2.63008 0 ]xsh
142.09 205.44 mo
(\000\002\000\006)
[2.65469 0 ]xsh
150.7 205.92 mo
(\000\003\000\007)
[2.55753 0 ]xsh
FZJXMJ+*Minion#20Pro-9433 [8.5 0 0 -8.5 0 0 ]msf
141.33 214.61 mo
(\000\021\000\002\0003\000>)
[6.18939 2.47479 3.09531 0 ]xsh
155.03 214.61 mo
(\0004\000#\000/\000 \000\033\000\037\000>)
[2.12085 3.9993 2.63925 3.55728 3.77829 3.95673 0 ]xsh
141.76 222.46 mo
(\000\033\000*\000\037\000>)
[3.97763 3.78217 4.1561 0 ]xsh
154.86 222.46 mo
(\000\022\000\003\0003\000>)
[5.75491 2.34641 3.01782 0 ]xsh
141.82 230.39 mo
(\0005\000#\0000\000 \000\033\000\037\000>)
[2.11319 3.96622 2.51266 3.52423 3.74518 3.92371 0 ]xsh
163.45 230.39 mo
(\000\036\000\033\000*\000>)
[3.47775 3.78375 3.58826 0 ]xsh
141.92 238.33 mo
(\000\035\000,\000*\0005\000$\000+\0007\000 \000>)
[3.50317 3.92822 3.58829 2.1517 2.2962 3.9028 3.86868 3.56271 0 ]xsh
FZJXMV+*Times#20New#20Roman-9414 [8 0 0 -8 0 0 ]msf
86.4 257.15 mo
(\000\015\000\016\000\017\000\020\000\002\000\003\000\014\000\001\000\004\000\005)sh
%ADOBeginSubsetFont: VAAAAA+*Times#20New#20Roman-9413-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (VAAAAA+*Times#20New#20Roman-9413)
%%Title: (VAAAAA+*Times#20New#20Roman-9413 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /VAAAAA+*Times#20New#20Roman-9413 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B82A0D8669D3553C6E299168B4F9A9716856534F907FBEB9B
C70365C4C86184986278DEB5B67CDB9DDDD312527CCDA5CD757CB9EC594C168F
A69CABE4FFA5FF7CA447FDAB23388A4BE8B08B623CB2ECE7A0967D54BD5824F6
145591B5A713BD67BC3B0A208F0CCB58FBBDBD3EF3F58F7C1D4329A2E3DA3B8E
5377EA79F09BB1EE1C28D56192991997772EB520F3FF991A3A39BC60870C2A94
34047AB8192E399F53A10EE4EC7DE4D64F8249492A1E2E796B6E951815B23CF3
6D5BCA5AE86966305A0645ED6740B75B45D97B1034A9168FE76775EC9FA712C3
AD37342EA9E4264B9DF5CD5D0E083765844F913C76082DAD5B77EF0E8851ED72
64276CF0918754264F3260F3760B5D18417F3397F324A48146D0A314400225ED
5E257E06A5BB3DF2196D8DA22373B10BFE2D818B85B28865E0EEFE65695E45A2
EB82F8C842E7B50D659801E1324622977A93372625C42A6172181AEE65101022
DC9AEE24F8C45C2C8D4E149A7CA7CDCB23040CF515B65A92F24F1074281E5760
D40846D2B9EA090AE42F3593598AA895E0DA51E259E0A216E75ECFDF9612EA55
E4A108D350B0DD96E6ED5F0D3655E9D7A568A5322710C9667AE21C3EBDAF3346
BA322E786FDAD40C28268517043356AF95366A5AC1785E7BA711306260F7DB10
88803E67C1481720DA83955E11A63E8D139F6AEEDA838B6D830ACBE38A0AB3E5
731E574EB4C2D12AA47FCF4DF9FCD9B7F243707EB654FBB1E7120C7D0EE3E03D
E599869AA4733616D55F7DBE7DAA0B459D0524A65CE09BB1C685E5A73BAA8CED
CB386B746DE398EB05F1F26455E3C4B6C66726BD39CBBD88197DB00D3C27203A
DB8BD155BB63C83584728C1945A3FAA0EC1EA5E48CB648124D02D9C854A76EAE
0B7E420B006470A0B3E560698E7694E40D997528F0A205E72ED95> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /VAAAAA+*Times#20New#20Roman-9413-Identity-H /Identity-H 0 [/VAAAAA+*Times#20New#20Roman-9413] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMX+*Times#20New#20Roman-9413 /VAAAAA+*Times#20New#20Roman-9413-Identity-H findfont ct_VMDictPut
FZJXMX+*Times#20New#20Roman-9413 [18 0 0 -18 0 0 ]msf
81.12 270.11 mo
(\000\001)sh
FZJXMK+*Arial-9427 [8.5 0 0 -8.5 0 0 ]msf
87.13 270.11 mo
(\000\001\000\002\000\003\000\004\000$)sh
95.5302 270.11 mo
(\000#\000$)
[56.882 0 ]xsh
%ADOBeginSubsetFont: WAAAAA+*Times#20New#20Roman-9417-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (WAAAAA+*Times#20New#20Roman-9417)
%%Title: (WAAAAA+*Times#20New#20Roman-9417 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /WAAAAA+*Times#20New#20Roman-9417 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -426 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 5 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B855A140FAA7CDB6071C2671C1494A7F770F425DE0B8E08E1
CBC52DF0AC4711FF071ADE2836675369EEF5607F664F1647FC400374FFC02583
DB8B441FEDDD4E576FC8620F4090E175F00906E70716363F52AF1F195C69CBC9
14BE5534B92822BC79F7D778092A3009C1EF58887CB251B24139F32282A805EB
D16097D45DB222C885AB94A5D0681C8E6B69E21F6A7A8C65DE598EAE285C4D33
8C6BF186C34B4DF3571E0AD94018E1E56921B9403D23C60EE3EE729901EBF64B
ECC25AF740E2D3DDBDFB4CE81118CC12AF2078208C768A4F8AF5B48D1D431833
105CB2D1E346EB94A0D20D4C7953EFA44FC65B18471747229C3F5D82A0D33713
7AC7BE369E2A5C1CF0AC2BC28999C5E73D0AD93488F0F60111A55078DC4D7572
83F4BEC8252E2199853964D09FD64657201F54C8260455437FE54D81B41DE118
BB5AA715E70E371B134AEF5728B43F144B1A54674A246ADF89B757E13FFD009D
BD4530A02C7A46EC9465279EC9C3C80C44E132730853FFBC53430DAE32F2521D
9AB55763BD2F4FA5BFE31B0CEB58097FD4B25D0A15B038DF3F855C9B4BFEEB94
FFFE905946B56A9F08BDB18F9E814B0B2DF7417A92009910DEE09A6AE87BB58E
59DC7DF2F9F629F0CC005A5381FA38AE8E7DF3C782702C5C2D7586A6D5CDA314
6105902758E671EAF90A73FD9BF0FE1CD930607EC01538A5CA01D8383E609F9A
9843E1BF55541A0E1FCB3A10479BA8773FA9716B37DF2B6297E5DA4B3B9FC45D
59C1F743873F0A5018FC55A97C722139E8B3F678480F16C5F21E0DAC6BC7A864
EB6401C14549668A103E649D20695A3436A93141769A4028E3E9D78577ADEA5F
7482BF260795A0D29E4485F0D184B53C3B965404E4E4DFDD470057BB1FB> |
3 <001C60D8A8C99C67FA4BC3A9CDFC0A529B5A5CA6B27A130F5574FE907E0CA
0B04ECB4D689943EBCF21F849C0028F3534CC6605B6AC263D03B99CB7C1336AB
D3132949A32EF5F9C8538> |
4 <001C60D8A8C9B8707C25> |
2 <001C60D8A8C9B863FB4CBACBCE30246084EC14960ED51294E89DA739F32C3
E3CD8CB4FBFD23CE54974BAC05CAFC1FD881BBE7F34F6C37E1313694A3D07375
0D0093A51C5702E80D3A1C904DB91B85C93B1A9AB9D22322FE3175FA6F760E2D
377EBEF7D6E82C86FDF75D722A80F41D50A7D457179FEBD3E01531D63470D116
9AB161452202EB1094DD219E138A49674F5871EDCC2BB56B3B4E411DE13D2470
71149DA53C9DD58C8AAA17D569807D2B0D5B1DF8B1980F77F2323937DB20B7F6
3148EB90346A4CB8032FCB4EB91485ABC1B3F7D3D00B1E3FB2282A4BEDEB0AAE
C219351AFF13B83E036C6CD8D67CF03A6DDEBA4F84E6084F2E69CEA119E03798
8607723254395449B72940D7B9E27667BD71887BF74FFCE77D361252A5620FA0
262DC9A2B14C20591EC489930A9C19D82F9D1DC4BB83E85BC5FCCE01B61AE8CB
F98D8390EE481AC2A9222ED8F28F445EC354275722715C666585F0536E17C31B
8C8DCA1EF765E77B33F34F01378CAA75124A45B220B70DA65B7FD7B41AD86AFE
C7CC973A3BB0F430C8A4348A329D800C99F881B0ABE6DE2D5C6176830F8A5D4F
891F79591FAC6CB4DAEF1D9132ECD5304CF0B61D4E66D1955AE8B576766F3916
C695FD511397A78D0710D8CFBBBDC5E52E138EADD53F08D80CA3285156B01624
E18E66C0E51817DBBA5879106A4156D7AAFE2036B0D3F5F89DBDB410A75E5A68
0033258978C472108BFF82F61047A9477B7215951121E86BED9CF81CF9B289D0
1B9E7520CA03B2B43B8D2D49DE6B3D5BF2358F349D4C61D5967701CFC9C531D4
F3A20EE6C29773595A10B5BAD9577EF624F3E9F0540AE2E45C3BE0FA511EB947
1EF4033BE8230BC3F0A563993F1E30C07861EDEB5FD306D636F7B9C0FBA3F2A5
79935E794780A2AFF7E11F7BC125B4E66296B12C2761B58935C6EBFAB98205C3
5> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /WAAAAA+*Times#20New#20Roman-9417-Identity-H /Identity-H 0 [/WAAAAA+*Times#20New#20Roman-9417] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMY+*Times#20New#20Roman-9417 /WAAAAA+*Times#20New#20Roman-9417-Identity-H findfont ct_VMDictPut
FZJXMY+*Times#20New#20Roman-9417 [33.5 0 0 -33.5 0 0 ]msf
239.29 181.79 mo
(\000\001\000\003\000\004)
[9.34674 2.4122 0 ]xsh
%ADOBeginSubsetFont: XAAAAA+*Times#20New#20Roman-9415-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (XAAAAA+*Times#20New#20Roman-9415)
%%Title: (XAAAAA+*Times#20New#20Roman-9415 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /XAAAAA+*Times#20New#20Roman-9415 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1 <001C60D8A8C9B7DCE042B39645ADE615DF4F8415E37FB1EA30B889EFB3D78
104DFAEB158B411D636368C6F14934C36764C6933E5F89F07DBCFA6276B946E3
3E74B8AF24BE0ECD4C047C921A864624C86A5DA2B1C40A659F042CBC5CF366CA
356E787A3144D5B6B152DF691B2806A958551A04C18956F930FCC38536D14AD8
0FE2846E663B6884067AEC6E2FA3964E7B3FFCB1193303490BD392D2D0982010
9CC17E4D526E659CCE7A7E9F57C3B74EBE0A160BDE85625244BD92732B0BCE59
F4F6A2F213F34D061C1051FBF6E5058DA6DB1305E645B0509DF97506F2A3F85A
10526CE> |
2 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /XAAAAA+*Times#20New#20Roman-9415-Identity-H /Identity-H 0 [/XAAAAA+*Times#20New#20Roman-9415] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXMZ+*Times#20New#20Roman-9415 /XAAAAA+*Times#20New#20Roman-9415-Identity-H findfont ct_VMDictPut
FZJXMZ+*Times#20New#20Roman-9415 [17 0 0 -17 0 0 ]msf
239.29 194.27 mo
(\000\001\000\002)
[10.3189 0 ]xsh
FZJXMW+*Arial-9429 [7.5 0 0 -7.5 0 0 ]msf
246.92 207.12 mo
(\000\002\000\005\000\003\000\007)sh
%ADOBeginSubsetFont: YAAAAA+*Cambria-9432-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (YAAAAA+*Cambria-9432)
%%Title: (YAAAAA+*Cambria-9432 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /YAAAAA+*Cambria-9432 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1109 -298 1373 1047} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 27 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 27 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
9 <001C60D8A8C9B633001E777F52D8DCC9133B961C033FE916711ABD40A1489
7AD23DF3A4B9EA0048D77F0FE6DF9046BD8544820973158E442DD122D8FAA3D7
1C3DBABDD9E99154E44034182E7DE7EBCFB4A3A7DF3BD0BA85A77D1E08E4F778
F384A2F7799A74C6584CE1744032BFC66DAC8B44CAC4271E4FD330AA0A475CFF
A96BDD02A646186296AD8487064A37AC3C43E5F7F314D99819166A7A31115A7D
31A4963CC7A155B106765BEEB8B9261D877CDA00104299D1B9461F4AC3D1BC9F
8A4098B2F3B53D4D84D9A9ED12C70D018EFC79B144FF2E66B> |
14 <001C60D8A8C9B835D351C0861D07CBEBF91EFCE79BCD663624966721E2B0
5B65C089582E1D0EA9542330E8A6F2483981760CA5D2748C9BAD1A56E45093B7
56C6BD19CEFFF9C973BE61C4A94FD0DC4D44C407DF497629FA4DFC0D8DD5410E
36757668E0F7333565652CBD74B8627C7357FCAE914F093CBF8D364421275C> |
13 <001C60D8A8C9B7DB133A3A29E3F110A37350D0D0687D4A9FF3C15BBA8F97
4CB1568CBF5F86D3993FF12A30348E032F8D3BB628ADC5DE6B1932DAF1336135
03E7EF744D968EE90782FFB7E9BB66FE9A09D5B9A2278A706C8872AA6478DF01
238490A2E38E008FB7349593A6405682C62498A4A49163AC0D0ACC740E79890B
CD8B8D85B47178D9A37C6638141B3097803163765CDD49F56EF5E20732896F27
7527D5E7EBA00DA5736EC9161A01EB47CBFC3B2709E78D407DE44A99FC455E27
21547E4E446FB3843BB753975ADA6D507F62C815562A55BB9D069578DCB81AEA
2799417B0637181E0B241C95AF0D2B75F9EBCB6ED3FBE2ADA7D62C445B32502C
6A7F2C2573150305F4F77FD1507C504B449EEE1BA809D7E25FF5176669D5D0D5
C86F1C> |
1 <001C60D8A8C9B8998C3B16F5D752EE94CD51EE2C5AC0F992BA93F6187FBD5
0562A78C54D582F763A025C04977B175A1F3D2E39C8C29929AFE08320A330275
96BC0F804635FD5EB> |
26 <001C60D8A8C9B8707C25> |
6 <001C60D8A8C9B7BDE39ADC1C827E0FD509227AF56DA360F7444226C4DA2A5
00E449D76A72EA118310891B2D0B1B138FCB479753115D34466FBBFD72616812
705589B517EFEC92E29DAC8F9B93D76C0C7A44EE939AED686FCC37AF0A8B9D05
9651E6065BEF580B3E1850CD0AEA4D510E669F6866258E4144AE223299C41FC7
F1E5A3F83E53069B3CAF5017A623F012E0F96AA0ABE4CBB7D83950AE0DFE91F3
FE00A68631748837401BC9CAFCBEDF06CF901CF8C34> |
2 <001C60D8A8C9B87A8F7235525B91848977AE23880852BC3A1A204FF851DC5
C9D4F04D65F32260348A5F01316085AF76D72637CC15FC77F> |
8 <001C60D8A8C9B627523C2753EFE67573ABBE428952F0B36467154BCF5A701
6D4A2AEB282C3C7235C73E149856F0AA0327456A19D9E86A4F0C54C4FFF42A08
F2E0554E2366EFC39E2881B7E8B0649F4525C85991B228603BF779A9D8C46F3D
F15C4BD7C05CADA26BDFDB41D87FBBC82FB15FF0A77CBC161397BAFE719C25DD
74705038701D6816E78278E580C7E7DBE8EF2E8527D56680EB6C3DB36A79FEB3
90F5D4EF01732985DC6883F3D64D4780D85F30665D018FCB8D8E0AA962FE060B
E53713AD96C47EEF2278BA40ED6163ABD07962D871FECAECBF6751BBF0C6BDC7
A2B2EAD2C110DF1442CE0EAB0A806D434114438C030986B204E52A250F6B055A
0075D6E7A0C9AF2D3D0> |
25 <001C60D8A8C9B7CDD8CD651F7D631DDA068183E88369AC19061CE3591AA7
6B0DBE4B093B4BB66D50C003B91E61864FC4BD3A83D78F17B56DCB05CBB37891
C5ADFBA0B8148E35B7BE017E26180C87966C4396CD9E78F92C39492A614DCF56
6DFB1B1AF479D8324CB109FCA1499C6263ECEB948C1A8889B20EFD7F2E873F1E
8C3F78CFD2269401FD154E2EBCFCF0580DF9C3939D648CACA704E7E553A3FBF9
8CC8A6DAA49BE0A081B1646696536ED691EB83BB95F73E166EEF14B9B04844EC
6CA362821EC6932F2CF92E3EF03D30627C3D3407FEAB5A1B2A3385396FD2C397
781B9C0E14FF577F9FC1E4> |
10 <001C60D8A8C9B78B91DE40238A9216CD0A98EB474010E61E07CE92BCCC32
0B08E368312FAEB92CBA826BCACA534D3DFA03DD9794A422222A07AD84DCADCD
3C0302F8852BBF0177981F34A16AFD5D03CDDC0D4CF998B81156DB44E5FFB81A
E5154FC86B1737D4B3C72A87BCA546150788BCC655031720917FF52FEF5DDA5E
13BEF010FDFA868CC671FED4FE690EDDFB163BF24C8D0DC509EA022CD0212277
FA0EDDE970C1F95FDBEA4908F6B9A33A0E732CF50B7F3B89FEBCA095F499358D
F74DCA44CD7CBB337A5DEF0E76B019A69914D61CF54DBC8A298B6BFBB2176673
02D3BE80FF407754FA8D93CB3B005624B1FC23254F5718D552481E9822930848
91A151B8319BF5AD12DAAC4E9E7ABB79DA4D3DF5AB98155DD74F71C600E60F6C
73EF00368DF02E9B16B1B550CE1EF6186D85AB83ACCB7DD8DD09D9CAA2EA7220
1C40EC3BD262452311626EC08ADCE09F3DE2490C834B1793E97E9E3B896E0ABB
FF08BBB109A0A678CA03FADE1AE6CF946DCAEC5083851A51EB60AAC16093932E
8CCCB7478325A4D5F47B51F8> |
16 <001C60D8A8C9B6900750F5D596E3BEF3B2202572FADAFC1A8C85B2E4D722
6D832FE9CCEEF5FEA08F0A0C3B7B1EDAE9EDD7FE108F89106613D5B939DB80F6
38B0170BB86554A3AB2F65CAA982D08D09CB8E1A7D58D26031F90BA545B8A6A4
17F8B8FFE1873F12DFC5E27368DD75F6E5649B0612C5F8D229727F5CB011AFB8
B48BF74646C5CB1F4AD7A785F77D27914E8D123E8523A55B71EC2C5F4A08DD2B
259E9807A49C750AD45D973471B990C16FA952806F14675E1EA99739512F1AFB
BF9E08C9FC9120CCC18BE19D0BB5C4523822821C67712F2532647180FD5F454C
4121701CCE5FABE1C53341EA210349A9A1363A02F8CC29C92BF5205E78130A2A
AFBAB6B500FCAE62F6726E> |
19 <001C60D8A8C9B7F88C2B85429E92DC6E6121AB4ADB8CA6678FD7692BD94A
E76D10447AF8FB18ACEE8A10F9C02F1A396F70CCBC4D95108A0D0499435169AC
05DA67606ADDA673B151ACAD47CDDB76D3F8EF87D3EDD2FCAA03873CC476F4D7
69FDA1911E85EEA477660F44E0A2B477DBA5C6454D168588BA333FEADD8E36B4
75AAE6F465EEF17B84D8646A9E95A748CF3A144A3AA38DE7A2E9223CF6E92AF7
8E8984CAB79E32F27EF05E208A227434EE4054A4C588C898B1D5682302CA4BB9
B79BA2DF308A28BB3DE8D78379417C314B8E9730E58091F40671E8478C69FA81
C7B7FB63F3ED148CDA091BD937B476EDE43D> |
15 <001C60D8A8C9B81A1498AFC8BA98085D55A0D31A4499C70C123D2C967A73
43D54AF29FADA88F3B61D6FF1DB000006BC7BE755108943CAD2DA5354833BFD3
18272ECE7E4C0EE03B5E5C982FCAA9E59A70C0B5ABEF0FF89686F82BDD9CE397
52F9220FD26FB4CEC575D67DB3325B775AB9131BD4A0B42BEBF2FFC77DF9C6A1
9BECFB64C14BEACC62C53ED1A9D5F9F474EC0316C837DC59FA65AC15413BDCEA
AC21211242515F66970B> |
12 <001C60D8A8C9B758703FD633865161DD8179BDBBABC895AC66594B7A877F
7907F5504DAB1EDCCC284376D7CD7ECF930B2EC788F9DD474AC50031BED47A3B
C0D038B79A05149F30EE9567D439DD50011E85158118636EEE2AA22C9DD741D4
C01F9561A725B934A7702D106500C20E8FC8DD8976DAAA53213E01F90898D134
D0382E88028E8FA3BF2EC6D52E9268FE282DCFB5AFFA27E37DF216B8268BCDE7
A4E7561AD7736B6117EE14EAA54FBD8A776E38F7F00D63B6526D903E0D88B3C5
F4C51FAE1C10D6DDEC874415B0F7BCDB7C3DDEC9FC9110F03B6131920657B040
BC025B0BA7BF16F4D9DD79BDA0B157BB2DC4FB62DD538425F603C8ABF7040F0E
ED497CFA9F6017683FB7C2> |
7 <001C60D8A8C9B87F87E29FA3F2E9B311192DE86CD1AC64C2EEC297401A95C
5524F5B028CB27D719748DC8C5D5778E348E75D2A649BBD61B8A0FFA48ECD8A4
AFC458E04BF0B8BE82DA69C1004D61F9720089C13A2AC9895CAF1451633BBDB8
6A27515AA3F705C4EF4CD250EB5E67FE4CE976D81D94F36C8D81530B1DAA9D2D
5318A26> |
5 <001C60D8A8C9B71131D0C830A2FAECD7F83751C15608B4E72AEBBBE3A627F
FAB9A101EB270CD989C290716B567A09C057B209E8EC0CD2150FA018CC1762B6
FAFE2B0AC211CE66CA10C30826DD71861EE0C34C8E20D24CC1453334F8A3218A
34072E016B4FA1CB0635B9565> |
3 <001C60D8A8C9B7A0861483F13A752A95C981A0A9E7A9A44879992069BA30E
37FF7B14A6E88B8F14EA2EE3E151C71B3E96C3A9C26A22AA28AF97D06BD466BD
E> |
4 <001C60D8A8C9B61E1369604541DCD994661F45803CE3E3A167739DA85B460
A2329A1F971989DE1B58253B277FBC217E6F8C6E54F64AE9B9840873F2BF5958
9E4446C39CAC5A33D802E935FDF7B351A7DE790495039BA55340950630B9B848
3EE8515C2DFBA2F8E0D9152568A3BA75B59B5C9181BDF46B9344380A6FE2EF05
67E5ED342B98C6B4F9D3EB6EE63AECA60> |
21 <001C60D8A8C9B7791488F348EE5DE6BFD09F411028A09011A16B59D4F5EE
FC0D4F33840CD87232A2731FABC0F6B871B9033B85042DA3FFDE72F6DE7EDC5D
880A379510EE47D284F7795D794AB4944D9C6F924D6F1526B3B6EC7CEF3A551E
7C8335CBFC7C3520179BE6FC068363BD4FF36536F3C0EDD24285E02FA12491BE
CE41D070AA79BAF2A12E89AF330DCEAC2B62F1D58338089666F55EA8D5> |
20 <001C60D8A8C9B7C56CB404D0E2D57F570D117829DCA4C8A255577181CC22
BCF6EB70DB00200012D34EF18A17060A4772A3F428466EB68F5E614E24A1797B
3531C28370785490F6C5EDE1B0A6FC09CCBBF6349C2D3578747F6121E3EE7503
F56E89A03FAED2AA77C2AF58A44367A4D68FE499DB1ECE4FEC8535F66C6DA0C9
CC9C57C28A603D09A42E4B38A828962B0B3F5530F07A74B2B63B83DE6EA7EDA3
83CE0391485FBDBDAE0AD8802B26822EDCBA02DC6D483B3B928005E470796AC5
B0830C1B4E8D879E2E6DE33EBD74B1000007FA7524FDC1C1D938414399AF7488
56AA9BB594403792E4CA89> |
24 <001C60D8A8C9B7C63DF8388C468954562CCD94D357194428A7E115F1E843
CF0902E8CA849E23718F692E167C60D67973E4876B8F396E973CDD80499C6E15
538ACEAF2E5DADE604661E4429861A50D30FADB047032E4C07E9B6989C931C3F
9D34B9BD3C9484EBFBCC845F3CF359E04D938B539E9BB6F74A4997A8FC2C0E50
625B4E3009AC5B23CA971D07ACA075E8EFC836706DE152D632> |
22 <001C60D8A8C9B77FE2CE56CB284D9A43A39C553E3AAE198BDA2377F1C840
732B0F2FD4177AC2A512A7523638DC01F3446D0DFCC3FD3E3B5C61E2D02C40E0
19899D4590B9B663AABB6B82C76886BD5A065D18186A930C144C69F109F796E1
2DDC334EA896064ABDC2D40ADC0C6B830DF22B2F3351E59C172868258D19C336
D619B42F02EBDC7236A8815FA3F200E20614C844DBF88C81F6A55BA05DA81D1C
D2FC3DFF8DD8D5AFD4FE892470739517BA6D3BED46DC93DB5E2683D0987BDDA0
0DE4D87F3176A29048D67B5EFAAE103304A28E600296A756A10116B12F98956A
4A62FF4A22038D4B8DD8AB0606C30FE6BDFE889FEC82B4272E2B55F9CD302C9A
0376C95BE66752273CBD7FC88A2FC517677F531C264A52481CC547CB962D1675
96DDDFC5FAE0CB8C774FB497F5C9F20035A10F49D1951DC40CE234C28719DDDB
346BE718BB143E3C4DF5D37A56CDF43284F852FB99A049728D0E21B8D91ABFE1
CFDA2AD2DC7DC1B9710B9F2150537EFD9D66C40A65430116B4E2BFDB> |
23 <001C60D8A8C9B70B6BA6654AED812B386A9246B12BC3128875BC41672D83
B7473EE6FAA411CECAEDD2CC994C45BD7C5028DEEE45E974E9D8FAC3884F1F04
F5E52CB0195D596E3EAB30061287E1EF7DA27C4697D6839B85458EBFDB4C16AF
D4D9FD1E5073B2AF159C167A4BCA52D58B7A1A4278B8F8D99F6DDF04730BCF65
810281B3AC8BDDED81620C1348> |
11 <001C60D8A8C9B704CCBB57B04E1D26426C856A2B2A160EA9B30998E477E0
CA0163AA3855ADE9E0B1A2EE70003D4A4166FEA796DB170C6801431C9DEFEAA5
41D4B43D7FB82CF01F5FA7989BD3D4AFD69D46456CAC95A39F0560BAA3300D12
4154C1058F3319837B792784B69D4F61CE5C708C4842062D1EC704BD2AA0E400
D00334F358F3E34F713CFD4CB515AB4F40F1066195AF72C54D3731166877AC4A
BAE7D2AF7192D068612B9D68E548989743950E8170E581D15423BD6B9DC90189
8D6560D5D85D8B7E62A44740C84ECCBC38AC7EE8300405CE7FDBBC7B4EFB0777
9599675D1CC1262EA226FE0DD14B97446C8CFE3D1001CA8B7A6B19EE258B26FD
777D009E6AA0B8427350> |
18 <001C60D8A8C9B7BEB101C4B10399853027211BF2F5CBD65D690EF9F8B67C
40F618F0075104AAAE8312885F05A762D31AA5A496F78FAF79D5526991CEC75E
7C4BE5FB59FB0F97C7CFB1A68DBC51A87999E20D9E8EF25B66DB9249C7835664
8CC749AA237674F36387FD9C771C1DD1D79C6E7F2166B66F29722B6995221E84
5DFF9ABA2123F8C015E5CDED3592E801413A9119A2BCCF4D67703CB6223DF6F9
94CF5563253446AF98B4D88EAFCD44B6BE22761EE438868D918D0F3E162934D5
A612B0272ACCF1CAC452E184C9C8DFFFE5CA1BD8626551464BA97C38C2223059
6A1F36B64041D23315DCA435D785123774B0183A847A03E8D7EE6EF145FF8B48
8B53B76C950DFA5B4F9984D6791D798DDC2B6ED357774B2B2C6F10BF21BC6A73
8CE43B0B41AECC7C87202ACCF61117A7DB> |
17 <001C60D8A8C9B6761E7C84EDCF6A6DE6B56EDB33ED93ECFA02F68BE57FA5
4BFC108643F277E5D30723FD45A63451A3E9DE5E4F274BEDBBCD276634C10437
F13A55E22F1B66E02F73F9D81969A7F206314853B7F6D1C01569BC6ECB3003D0
CF55760701664081C57277C22BF4AC1AAD3742D27F3CF39B871471D013C28480
664E23FD79F1CD51BDFCD961923D9969FEB30AE6F36C96D87998F7CC993DFEF3
B8A3208F5426C4CE730700173C4DD273> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /YAAAAA+*Cambria-9432-Identity-H /Identity-H 0 [/YAAAAA+*Cambria-9432] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXNA+*Cambria-9432 /YAAAAA+*Cambria-9432-Identity-H findfont ct_VMDictPut
FZJXNA+*Cambria-9432 [8 0 0 -8 0 0 ]msf
100.56 285.96 mo
(\000\011\000\016\000\015\000\001\000\032)
[5.61243 2.4845 4.86047 1.68445 0 ]xsh
118.56 285.96 mo
(\000\006\000\002\000\032)sh
133.21 285.96 mo
(\000\010\000\031\000\012\000\020\000\023\000\017\000\014\000\007\000\032)
[5.53857 4.73853 4.24255 6.90649 4.65051 2.70654 3.88257 1.91455 0 ]xsh
170.17 285.96 mo
(\000\005\000\003\000\004\000\032)sh
185.78 285.96 mo
(\000\025\000\014\000\024\000\030\000\014\000\026\000\027\000\003\000\013\000\022\000\020\000\023\000\017\000\014\000\027\000\016\000\022\000\021\000\001\000\032)
[3.60046 3.8645 4.78455 4.77649 3.8645 3.55249 3.20044 4.05652 3.25647 4.07251 6.88843 4.63245 
2.68848 3.8645 3.20044 2.48853 4.07251 5.14453 1.68848 0 ]xsh
FZJXMY+*Times#20New#20Roman-9417 [33.5 0 0 -33.5 0 0 ]msf
275.29 166.91 mo
(\000\002)sh
FZJXMU+*Times#20New#20Roman-9418 [6.5 0 0 -6.5 0 0 ]msf
284.66 166.91 mo
(\000\010\000\001\000\006\000\003\000\002\000\007\000\004\000\011)
[24.2438 5.92029 1.74084 3.50232 2.87827 3.28134 2.35834 0 ]xsh
FZJXMK+*Arial-9427 [8.5 0 0 -8.5 0 0 ]msf
276 194.27 mo
(\000"\000$)
[11.0415 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+*Times#20New#20Roman-9416-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ZAAAAA+*Times#20New#20Roman-9416)
%%Title: (ZAAAAA+*Times#20New#20Roman-9416 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ZAAAAA+*Times#20New#20Roman-9416 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-567 -307 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 5 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
3 <001C60D8A8C987760FB1F76EC57E7BC0A7A590127C53605CFFC2970856155
A591BB2C2209DF8754BCBD22D2180CCB6E324A14ECA42> |
1 <001C60D8A8C9B81947033571B6966490104D16765869A7231F552FE28AB1C
1B85E6F9080EC9FC6A19ED1C654B904E1D8178F3DD738A33D367E5198D37EC56
92E7204A59B037B71E32D1BAC904F23C8B17022F7A7917DA162C926CA801B993
FB50DAB6A7CAC63CDA44AEBE775A91245B2AC8D88F6E6A921134E819FF903391
D858BDE0AAF9A33B8BB1EC824752ACC0B1BA8925301F923507E5E6CFEA0833C6
BFC8EBEE92F9762BDFCF539ACDCDBF8F4253FBD2B5BCF9F7EE8BCFC5C4FA19D8
8809BFE0F09351216031652C336110126DEAEF73CE2A8B171B646ADC5CF0CBD0
85BC50901E63CED951B6B4A10E7192E98772EABC3E3BF1AC28874121B3DEDBB5
CBDE7EAE705396B72FD123830A0DEB7AEDCBED6FE869424420198E1CE5A3E335
E12825683FA11CA434593CB638452F8FF822B3E0829D97E50BFDCDE65F2DDACB
921790D171C4EA1E2255C2EAB9668EE0081D214FAA163C7E9AE7DCCF9974EFDA
BD3AAD7AA2362D60699C8FB6A7621277DEA7EE2575F2581610A12DC97D4CDEB8
8F26865B051AEBCD904AB2C2D7A084560907A4386C92CDE24F88D45C5BBA72C2
9C3AABFB9802591579FF641A34683DDFCE5A7549DD7D12BF90462A5D5E8414EC
EF4BD0FA1811CD777059283B17872F6A99C4207BED063BFDA4ECDC1EB60B4A7E
D292960F2BC97B84C2042122FF5A4C748308261CE4641AD7D79B7284D9892> |
2 <001C60D8A8C9B839150724BC090D839DCEFBDFBB896E6CB44F19DF37E2BD9
FFABE558945B2E7E76300DB280437E48594577B9516B71391481743B86E8D3ED
E595C292B7615E8960DA6BDE578381A124368AE17BD191C12198A5C5C410424A
5DE5D8F8CFEA04EC627CD9002F6928CC8C3F66FE3817E1D1CD88F9F0D4971B3A
3D4E4B4D4AC6653FC58B0E2D7EA40E64735A1D1988194EEEB65780E5D66B8868
B30A9A1CA7DCDAE84BE67EE5FA1CD2DD99FF406D30B58FF009FA21203ABDC013
99A1F9FD28C6D1B1FEFA9B38AAA51611169A332580C9BCB33C9842AC5235DED7
271C235370BA8FE2D92679CE49D658EC43216C6DB14B5B84848A551133C81E7E
D8132F36E2EE9B6E9> |
4 <001C60D8A8C9B8707C25> |
0 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ZAAAAA+*Times#20New#20Roman-9416-Identity-H /Identity-H 0 [/ZAAAAA+*Times#20New#20Roman-9416] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FZJXNB+*Times#20New#20Roman-9416 /ZAAAAA+*Times#20New#20Roman-9416-Identity-H findfont ct_VMDictPut
FZJXNB+*Times#20New#20Roman-9416 [25.5 0 0 -25.5 0 0 ]msf
301.45 194.27 mo
(\000\003\000\001\000\002\000\002\000\004)
[1.53226 8.62128 7.80533 7.80533 0 ]xsh
FZJXMP+*Arial-9428 [7 0 0 -7 0 0 ]msf
283.93 207.31 mo
(\000\001\000\005\000\003\000\006)
[2.64154 5.85455 2.53656 0 ]xsh
FZJXML+*Cambria-9431 [10.5 0 0 -10.5 0 0 ]msf
2.72006 309.24 mo
(\000.\000"\0007\0003\000"\0000\000F)
[6.11182 4.93581 4.45293 6.09082 4.93581 3.31889 0 ]xsh
36.1701 309.24 mo
(\000;\000\035\000.\000"\000:\000F)
[3.88704 5.48311 6.1235 4.94751 4.41206 0 ]xsh
64.7401 309.24 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
83.44 309.24 mo
(\0005\0007\0004\000 \000"\000:\000:\0004\0007\000F)
[5.51212 4.4832 4.95569 4.4622 4.96609 4.43065 4.43065 4.95567 4.48322 0 ]xsh
129.79 309.24 mo
(\000;\000+\000\035\000;\000F)
[3.86252 6.03604 5.45859 3.86252 0 ]xsh
153.04 309.24 mo
(\000+\000\035\000!\000F)
[6.05011 5.47272 5.47272 0 ]xsh
173.55 309.24 mo
(\000\037\000"\000"\0003\000F)
[5.89185 5.02023 5.02023 6.17526 0 ]xsh
199.15 309.24 mo
(\0007\000<\0003\0003\000,\0003\000*\000F)
[4.45438 6.03986 6.09225 6.09225 3.30978 6.09225 5.45187 0 ]xsh
240.44 309.24 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.90576 6.07928 4.48337 4.96628 5.50183 5.50189 0 ]xsh
274.53 309.24 mo
(\000\020\000F)
[5.47046 0 ]xsh
283.83 309.24 mo
(\000\035\0003\000!\000F)
[5.46967 6.08905 5.46967 0 ]xsh
304.51 309.24 mo
(\0005\000"\0007\000\)\0007\0002\000:\000F)
[5.50458 4.95859 4.47565 8.26611 4.47565 8.87509 4.42313 0 ]xsh
349.12 309.24 mo
(\000\035\0003\000F)
[5.51581 6.13519 0 ]xsh
2.94006 321.13 mo
(\000<\0005\000 \000\035\0000\0000\000F)
[6.0647 5.50812 4.45821 5.4977 3.34518 3.34517 0 ]xsh
35.2301 321.13 mo
(\000,\0003\000F)
[3.27708 6.05959 0 ]xsh
48.8901 321.13 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
68.1401 321.13 mo
(\000 \0004\0003\000;\000"\000?\000;\000F)
[4.47871 4.97218 6.1376 3.92212 4.9826 5.47623 3.92212 0 ]xsh
106.24 321.13 mo
(\0004\000$\000F)
[5.14137 3.54529 0 ]xsh
118.93 321.13 mo
(\000\035\000F)
[5.48103 0 ]xsh
128.85 321.13 mo
(\000%\0009\000"\000:\000+\000F)
[3.09602 4.70255 4.98596 4.45053 6.099 0 ]xsh
156.61 321.13 mo
(\000:\000 \000+\000"\000!\000<\0000\000"\0007\000F)
[4.44058 4.47214 6.08908 4.97601 5.51163 6.07864 3.35913 4.97601 4.49313 0 ]xsh
205.08 321.13 mo
(\000\035\000 \000;\000,\000=\000\035\000;\000,\0004\0003\000\012\000F)
[5.51581 4.47632 3.91971 3.35269 5.56821 5.51578 3.91974 3.35269 4.96979 6.13519 2.47073 0 
]xsh
259.25 321.13 mo
(\000\033\000+\000"\000F)
[6.63605 6.01648 4.90344 0 ]xsh
281.39 321.13 mo
(\000<\000:\000"\0007\000\007\0000\000"\000=\000"\0000\000F)
[6.06488 4.42679 4.96225 4.47937 2.67337 3.34534 4.96225 5.55023 4.96228 3.34534 0 ]xsh
330.46 321.13 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.90576 6.07928 4.48337 4.96628 5.50183 5.50189 0 ]xsh
2.73007 333.14 mo
(\000:\000 \000+\000"\000!\000<\0000\000"\0007\000F)
[4.41061 4.4422 6.05908 4.94608 5.48167 6.04869 3.32915 4.94606 4.46318 0 ]xsh
50.1301 333.14 mo
(\000 \000\035\0003\000F)
[4.34862 5.38811 6.00751 0 ]xsh
69.0501 333.14 mo
(\000;\000+\000"\0003\000F)
[3.93974 6.11325 5.00021 6.15524 0 ]xsh
93.1901 333.14 mo
(\000<\000:\000"\000F)
[6.16147 4.52342 5.05885 0 ]xsh
112.02 333.14 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89929 0 ]xsh
130 333.14 mo
(\0005\0007\0004\000 \000"\000:\000:\0004\0007\000F)
[5.54208 4.51315 4.98566 4.49216 4.99606 4.4606 4.4606 4.98566 4.51315 0 ]xsh
175.63 333.14 mo
(\000;\0004\000F)
[4.05783 5.10788 0 ]xsh
187.87 333.14 mo
(\000;\000\035\000.\000"\000F)
[3.84619 5.44226 6.08264 4.90665 0 ]xsh
211.57 333.14 mo
(\000\035\0003\0004\000;\000+\000"\0007\000F)
[5.4953 6.11469 4.94928 3.8992 6.07272 4.95969 4.47678 0 ]xsh
250.52 333.14 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.90576 6.07928 4.48337 4.96628 5.50183 5.50189 0 ]xsh
284.1 333.14 mo
(\0004\000\(\000F)
[4.91946 7.64941 0 ]xsh
298.77 333.14 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
316.77 333.14 mo
(\0007\000"\000\035\000!\000@\000F)
[4.5199 5.00278 5.53839 5.53839 5.55939 0 ]xsh
345.87 333.14 mo
(\0000\000,\000:\000;\000F)
[3.31009 3.29953 4.39154 3.86652 0 ]xsh
2.9801 345.35 mo
(\000\035\0003\000!\000F)
[5.46967 6.08905 5.46967 0 ]xsh
23.3701 345.35 mo
(\000:\000;\000\035\0007\000;\000F)
[4.3712 3.84619 5.44226 4.42375 3.84618 0 ]xsh
48.8801 345.35 mo
(\0007\000<\0003\0003\000,\0003\000*\000F)
[4.41431 5.99982 6.05222 6.0522 3.26971 6.0522 5.41183 0 ]xsh
89.7201 345.35 mo
(\000,\000;\000\013\000F)
[3.34549 3.91251 2.4321 0 ]xsh
12.7201 357.16 mo
(\000\026\000;\000F)
[7.84167 3.90417 0 ]xsh
27.2901 357.16 mo
(\000;\000,\0002\000"\000F)
[3.89569 3.32867 8.87267 4.95616 0 ]xsh
51.1301 357.16 mo
(\000\033\000\022\000\005\000F)
[6.71278 5.43184 2.53384 0 ]xsh
68.8201 357.16 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
86.7101 357.16 mo
(\000\031\000\016\000\032\000F)
[3.90161 5.16156 7.54512 0 ]xsh
106.31 357.16 mo
(\000 \0004\0002\0005\0000\000"\000;\000"\000:\000\013\000F)
[4.45869 4.95215 8.87909 5.50858 3.34567 4.96255 3.9021 4.96255 4.42712 2.42169 0 ]xsh
157.71 357.16 mo
(\000\026\000*\000\035\000,\0003\000\005\000F)
[7.8779 5.51547 5.53647 3.37335 6.15588 2.5545 0 ]xsh
191.72 357.16 mo
(\000;\000+\000"\000F)
[3.9588 6.13232 5.01929 0 ]xsh
209.64 357.16 mo
(\000.\000"\0007\0003\000"\0000\000F)
[6.11182 4.93579 4.45294 6.09082 4.93579 3.31891 0 ]xsh
242.45 357.16 mo
(\0002\000<\000:\000;\000F)
[8.79962 5.98572 4.34766 3.82263 0 ]xsh
268.36 357.16 mo
(\0003\0004\000;\000,\000$\000@\000F)
[6.13504 4.9696 3.91956 3.35257 3.37354 5.53662 0 ]xsh
298.307 357.16 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
316.21 357.16 mo
(\000<\000:\000"\0007\000\007\0000\000"\000=\000"\0000\000F)
[6.06488 4.42679 4.96225 4.47937 2.67337 3.34534 4.96225 5.55023 4.96228 3.34534 0 ]xsh
2.81015 369.05 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.90578 6.07928 4.48335 4.96626 5.50186 5.50186 0 ]xsh
37.7802 369.05 mo
(\000:\000@\000:\000;\000"\0002\000F)
[4.42007 5.51212 4.42007 3.89505 4.95551 8.87204 0 ]xsh
74.3102 369.05 mo
(\0004\000$\000F)
[5.14137 3.54529 0 ]xsh
87.3002 369.05 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89929 0 ]xsh
107 369.05 mo
(\000"\000=\000"\0003\000;\000\005\000F)
[4.94446 5.53247 4.94446 6.09949 3.88397 2.49811 0 ]xsh
139.47 369.05 mo
(\000\037\000<\000;\000F)
[5.8476 6.07867 3.91553 0 ]xsh
159.8 369.05 mo
(\000;\000+\000,\000:\000F)
[3.96008 6.13361 3.3931 4.48511 0 ]xsh
182.18 369.05 mo
(\0003\0004\000;\000,\000%\000-\000 \000\035\000;\000,\0004\0003\000F)
[6.12704 4.96161 3.91153 3.34454 3.08209 3.5546 4.46814 5.50763 3.91153 3.34454 4.96161 6.12701 
0 ]xsh
239.96 369.05 mo
(\0007\000"\0006\000<\000,\0007\000"\000:\000F)
[4.43817 4.92108 5.62457 6.02371 3.29358 4.43817 4.92108 4.38562 0 ]xsh
282.63 369.05 mo
(\000\035\000F)
[5.48102 0 ]xsh
292.75 369.05 mo
(\0005\0007\0004\000 \000"\000:\000:\0004\0007\000\014\000F)
[5.49753 4.46863 4.9411 4.44763 4.95151 4.41608 4.41608 4.9411 4.46863 2.46301 0 ]xsh
343.26 369.05 mo
(\000\033\000+\000"\000F)
[6.63605 6.01648 4.90344 0 ]xsh
2.96014 380.79 mo
(\000.\000"\0007\0003\000"\0000\000F)
[6.15988 4.98387 4.50099 6.13889 4.98387 3.36696 0 ]xsh
36.1501 380.79 mo
(\0005\0007\000"\000"\0002\0005\000;\000:\000F)
[5.47847 4.44955 4.93245 4.93245 8.84895 5.47849 3.87196 4.397 0 ]xsh
81.9901 380.79 mo
(\0004\0003\000"\000F)
[4.83728 6.0027 4.8477 0 ]xsh
101.44 380.79 mo
(\0004\000$\000F)
[5.14137 3.54529 0 ]xsh
113.23 380.79 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
131.8 380.79 mo
(\0005\0007\0004\000 \000"\000:\000:\0004\0007\000:\000F)
[5.44946 4.42056 4.89304 4.39957 4.90344 4.36801 4.36801 4.89304 4.42056 4.36798 0 ]xsh
182.12 380.79 mo
(\0007\000<\0003\0003\000,\0003\000*\000F)
[4.45438 6.03986 6.09225 6.09225 3.30978 6.09225 5.45187 0 ]xsh
223.2 380.79 mo
(\000,\0003\000F)
[3.2771 6.05957 0 ]xsh
235.9 380.79 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
254.37 380.79 mo
(\000\035\000!\000!\0007\000"\000:\000:\000F)
[5.43906 5.43906 5.43906 4.42056 4.90344 4.36801 4.36798 0 ]xsh
292.48 380.79 mo
(\000:\0005\000\035\000 \000"\000F)
[4.39685 5.4783 5.4679 4.42841 4.93228 0 ]xsh
320.58 380.79 mo
(\000\035\0003\000!\000F)
[5.58966 6.20908 5.58966 0 ]xsh
341.18 380.79 mo
(\000<\000:\000"\000:\000F)
[6.08521 4.44714 4.9826 4.44714 0 ]xsh
3.07019 392.39 mo
(\000,\000;\000F)
[3.3407 3.90768 0 ]xsh
14.0902 392.39 mo
(\000;\0004\000F)
[3.81783 4.86787 0 ]xsh
26.7902 392.39 mo
(\000!\0004\000F)
[5.51099 4.96498 0 ]xsh
40.9802 392.39 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
59.8402 392.39 mo
(\000<\0005\000 \000\035\0000\0000\000\012\000F)
[6.02577 5.46918 4.41928 5.45876 3.30624 3.30624 2.41368 0 ]xsh
95.3102 392.39 mo
(\000\003\000\031\000$\000F)
[3.13289 3.82599 3.35335 0 ]xsh
109.4 392.39 mo
(\000;\000+\000"\0007\000"\000F)
[3.90977 6.0833 4.97026 4.48737 4.97028 0 ]xsh
137.66 392.39 mo
(\000\035\0007\000"\000F)
[5.46597 4.44748 4.93036 0 ]xsh
156.5 392.39 mo
(\0003\0004\000F)
[6.15683 4.99142 0 ]xsh
171.54 392.39 mo
(\0005\0007\0004\000 \000"\000:\000:\0004\0007\000:\000F)
[5.50009 4.47119 4.94366 4.4502 4.95407 4.41864 4.41864 4.94366 4.47116 4.41864 0 ]xsh
222.39 392.39 mo
(\000\035\000:\000:\000,\000*\0003\000"\000!\000F)
[5.51547 4.44443 4.44443 3.35239 5.49451 6.13489 4.97986 5.51547 0 ]xsh
266.14 392.39 mo
(\000;\0004\000F)
[3.81781 4.86789 0 ]xsh
278.87 392.39 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
297.53 392.39 mo
(\000\035\000!\000!\0007\000"\000:\000:\000F)
[5.49451 5.49448 5.49448 4.47601 4.95886 4.42346 4.42343 0 ]xsh
336.16 392.39 mo
(\000:\0005\000\035\000 \000"\000F)
[4.39685 5.4783 5.4679 4.42841 4.93228 0 ]xsh
2.9902 404.22 mo
(\000>\000+\000"\0003\000F)
[7.76141 6.02881 4.91579 6.07079 0 ]xsh
30.8902 404.22 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
48.7802 404.22 mo
(\000\031\000\016\000\032\000F)
[3.7816 5.04156 7.42511 0 ]xsh
68.1402 404.22 mo
(\000 \0004\0002\0005\0000\000"\000;\000"\000:\000\005\000F)
[4.4747 4.96819 8.8951 5.52463 3.36166 4.97861 3.91811 4.97859 4.44315 2.53223 0 ]xsh
119.46 404.22 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
137.36 404.22 mo
(\000<\0005\000 \000\035\0000\0000\000F)
[6.11261 5.556 4.50613 5.54559 3.3931 3.39307 0 ]xsh
168.75 404.22 mo
(\0002\000<\000:\000;\000F)
[8.87958 6.06564 4.42761 3.90256 0 ]xsh
195.03 404.22 mo
(\000>\000\035\000,\000;\000F)
[7.79987 5.48984 3.32675 3.89377 0 ]xsh
218.74 404.22 mo
(\000<\0003\000;\000,\0000\000F)
[6.05011 6.10254 3.88702 3.32001 3.33063 0 ]xsh
244.29 404.22 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
262.21 404.22 mo
(\000.\000"\0007\0003\000"\0000\000F)
[6.11182 4.93582 4.45291 6.09082 4.93582 3.31888 0 ]xsh
295.12 404.22 mo
(\000\035\0000\0000\0004\000 \000\035\000;\000"\000:\000F)
[5.48599 3.3335 3.33347 4.94 4.4465 5.48599 3.88992 4.95038 4.41495 0 ]xsh
338.36 404.22 mo
(\0004\0003\000"\000\004\000\014\000F)
[4.93326 6.09866 4.94366 3.2742 2.45517 0 ]xsh
3.12018 416.26 mo
(\000\033\000+\000,\000:\000F)
[6.67609 6.05655 3.31601 4.40805 0 ]xsh
27.1802 416.26 mo
(\000<\0005\000 \000\035\0000\0000\000F)
[6.0647 5.50812 4.45821 5.4977 3.34518 3.34517 0 ]xsh
58.7902 416.26 mo
(\0003\0004\000;\000,\000%\000-\000"\000:\000F)
[6.13216 4.96674 3.91667 3.34966 3.08723 3.55971 4.97714 4.44171 0 ]xsh
96.6602 416.26 mo
(\000;\000+\000"\000F)
[3.95882 6.13231 5.01929 0 ]xsh
115.52 416.26 mo
(\000<\000:\000"\0007\000F)
[6.0676 4.42952 4.96498 4.48209 0 ]xsh
138.95 416.26 mo
(\0000\000"\000=\000"\0000\000F)
[3.37866 4.99557 5.58356 4.99561 3.37866 0 ]xsh
164.81 416.26 mo
(\0004\000$\000F)
[5.14136 3.54529 0 ]xsh
176.84 416.26 mo
(\000;\000>\0004\000F)
[3.91733 7.82339 4.96738 0 ]xsh
197 416.26 mo
(\000;\000+\000,\0003\000*\000:\000\024\000F)
[3.90274 6.07623 3.33572 6.11823 5.47781 4.42776 2.20172 0 ]xsh
232.77 416.26 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
251.38 416.26 mo
(\000\031\000\016\000\017\000F)
[3.8284 5.08835 7.37735 0 ]xsh
271.7 416.26 mo
(\000 \0004\0002\0005\0000\000"\000;\000,\0004\0003\000F)
[4.43323 4.92667 8.85361 5.48312 3.32016 4.9371 3.87662 3.30963 4.92667 6.0921 0 ]xsh
325.36 416.26 mo
(\000\035\0003\000!\000F)
[5.58966 6.20908 5.58966 0 ]xsh
346.07 416.26 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
3.0202 428.27 mo
(\0005\0007\000"\000"\0002\0005\000;\000,\0004\0003\000\014\000F)
[5.4852 4.45628 4.93918 4.93918 8.8557 5.4852 3.87869 3.31169 4.92876 6.09419 2.45068 0 
]xsh
62.1702 428.27 mo
(\000\033\000+\000"\000F)
[6.63605 6.01648 4.90344 0 ]xsh
83.3502 428.27 mo
(\000<\0005\000 \000\035\0000\0000\000F)
[6.0647 5.50812 4.45821 5.4977 3.34518 3.34517 0 ]xsh
115.2 428.27 mo
(\000,\0003\000=\0004\000.\000"\000:\000F)
[3.27179 6.05429 5.48727 4.88889 6.07529 4.89929 4.36383 0 ]xsh
153.83 428.27 mo
(\000 \0004\000!\000"\000F)
[4.52039 5.01382 5.55984 5.02426 0 ]xsh
177.58 428.27 mo
(\000,\0003\000F)
[3.2771 6.05957 0 ]xsh
190.28 428.27 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
208.66 428.27 mo
(\000<\000:\000"\0007\000\010\0000\000"\000=\000"\0000\000F)
[6.05078 4.41269 4.94815 4.46527 2.78522 3.33124 4.94812 5.53616 4.94815 3.33124 0 ]xsh
257.06 428.27 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.83881 6.0123 4.41641 4.89926 5.43491 5.43491 0 ]xsh
290.78 428.27 mo
(\000:\000@\000:\000;\000"\0002\000F)
[4.42007 5.51212 4.42007 3.89505 4.95551 8.87204 0 ]xsh
326.14 428.27 mo
(\000;\000+\000\035\000;\000F)
[3.86252 6.03604 5.45859 3.86252 0 ]xsh
349.26 428.27 mo
(\000\003\000\020\000\004\000F)
[3.08371 5.4357 3.24118 0 ]xsh
3.0202 440.29 mo
(\0005\000<\000;\000:\000F)
[5.5762 6.1328 3.96971 4.49472 0 ]xsh
27.7702 440.29 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
47.6902 440.29 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.85786 6.03139 4.43546 4.91835 5.45395 5.45396 0 ]xsh
82.9702 440.29 mo
(\000;\000+\000\035\000;\000F)
[3.86252 6.03603 5.4586 3.86252 0 ]xsh
107.19 440.29 mo
(\000+\000\035\000!\000F)
[6.17012 5.59271 5.59271 0 ]xsh
129.14 440.29 mo
(\000\037\000"\000"\0003\000F)
[5.81189 4.94031 4.94028 6.09531 0 ]xsh
155.54 440.29 mo
(\000\037\0000\0004\000 \000.\000"\000!\000F)
[5.82935 3.34085 4.94736 4.45389 6.13373 4.95776 5.49338 0 ]xsh
195.76 440.29 mo
(\0004\0003\000F)
[5.00583 6.17123 0 ]xsh
211.63 440.29 mo
(\000;\000+\000"\000F)
[3.9588 6.13232 5.01929 0 ]xsh
231.55 440.29 mo
(\0007\000"\000\035\000!\000@\000F)
[4.5199 5.00278 5.53839 5.53839 5.55939 0 ]xsh
262.57 440.29 mo
(\0000\000,\000:\000;\000F)
[3.31009 3.29953 4.39154 3.86652 0 ]xsh
282.39 440.29 mo
(\000\035\0003\000!\000F)
[5.46967 6.08905 5.46967 0 ]xsh
304.62 440.29 mo
(\000\003\000\021\000\004\000F)
[3.07104 5.44403 3.22855 0 ]xsh
321.56 440.29 mo
(\0005\000<\000;\000:\000F)
[5.49625 6.05286 3.88977 4.41476 0 ]xsh
346.31 440.29 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
3.29022 452.26 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.90578 6.07928 4.48335 4.96626 5.50186 5.50186 0 ]xsh
36.8902 452.26 mo
(\000;\000+\000\035\000;\000F)
[3.86252 6.03603 5.4586 3.86252 0 ]xsh
59.4002 452.26 mo
(\000>\000\035\000:\000F)
[7.80418 5.49417 4.42313 0 ]xsh
80.7102 452.26 mo
(\0005\0007\000"\000"\0002\0005\000;\000"\000!\000F)
[5.4453 4.4164 4.89928 4.89929 8.8158 5.44531 3.83881 4.89928 5.43489 0 ]xsh
132.64 452.26 mo
(\0004\0003\000F)
[5.00583 6.17126 0 ]xsh
147.07 452.26 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
165.39 452.26 mo
(\0008\000"\000\035\000!\000@\000F)
[4.47391 4.98837 5.52396 5.52399 5.54495 0 ]xsh
194.88 452.26 mo
(\0000\000,\000:\000;\000\013\000F)
[3.32275 3.31216 4.40421 3.87918 2.39877 0 ]xsh
216.28 452.26 mo
(\000\026\000;\000F)
[7.84167 3.90417 0 ]xsh
231.33 452.26 mo
(\000;\000+\000,\000:\000F)
[3.88013 6.05365 3.31314 4.40518 0 ]xsh
252.43 452.26 mo
(\0005\0004\000,\0003\000;\000\005\000F)
[5.50009 4.94366 3.3266 6.10907 3.89362 2.50772 0 ]xsh
282.39 452.26 mo
(\000:\000 \000+\000"\000!\000<\0000\000"\0007\000F)
[4.41061 4.4422 6.05908 4.94608 5.48169 6.04868 3.32913 4.94608 4.46317 0 ]xsh
329.89 452.26 mo
(\000\035\000 \000;\000,\000=\000\035\000A)
[5.43488 4.39542 3.83881 3.27179 5.48727 5.43491 0 ]xsh
3.29019 464.14 mo
(\000;\000,\0004\0003\000:\000F)
[3.89873 3.33171 4.94879 6.11423 4.42375 0 ]xsh
28.8102 464.14 mo
(\000\026\000F)
[7.82245 0 ]xsh
39.5502 464.14 mo
(\000\036\0003\000!\000F)
[5.38138 6.10588 5.48648 0 ]xsh
59.3002 464.14 mo
(\000\027\000F)
[6.83551 0 ]xsh
69.5902 464.14 mo
(\000 \000\036\0003\000F)
[4.52133 5.45572 6.18022 0 ]xsh
88.3502 464.14 mo
(\000\037\000"\000F)
[5.69348 4.8219 0 ]xsh
102.35 464.14 mo
(\000!\000,\000:\000 \000\035\0007\000!\000#\000!\000\012\000F\000\030\000,\0003\000\035\0000\0000\000@\000\005\000F)
[5.43489 3.2718 4.36383 4.3954 5.43489 4.41638 5.43491 4.9624 5.43488 2.38983 4.34155 6.65286 
3.27179 6.05429 5.43491 3.28238 3.28235 5.45587 2.45294 0 ]xsh
191.73 464.14 mo
(\000\036\000;\000F)
[5.26794 3.77695 0 ]xsh
203.97 464.14 mo
(\000;\000,\0002\000"\000F)
[3.81573 3.24872 8.79272 4.87622 0 ]xsh
227.81 464.14 mo
(\000\033\000\023\000\006\000F)
[6.67145 5.51645 2.45035 0 ]xsh
245.74 464.14 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
263.64 464.14 mo
(\000<\0005\000 \000\036\0000\0000\000F)
[6.08569 5.52908 4.47922 5.41357 3.36618 3.36615 0 ]xsh
294.71 464.14 mo
(\000;\000\035\000/\000#\000:\000F)
[3.87357 5.46967 6.11005 4.99719 4.39859 0 ]xsh
322.56 464.14 mo
(\000\036\000F)
[5.37592 0 ]xsh
331.15 464.14 mo
(\000;\000+\0007\000#\000\036\000!\000F)
[3.83881 6.0123 4.41641 4.9624 5.3298 5.43488 0 ]xsh
3.26016 475.97 mo
(\0004\000%\000&\000F)
[4.97107 3.09155 4.56154 0 ]xsh
18.1702 475.97 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
36.4102 475.97 mo
(\0007\000"\000\035\000!\000@\000F)
[4.51988 5.00279 5.53839 5.53839 5.55937 0 ]xsh
65.7502 475.97 mo
(\0000\000,\000:\000;\000F)
[3.31009 3.29951 4.39156 3.86653 0 ]xsh
83.8902 475.97 mo
(\000\035\0003\000!\000F)
[5.58966 6.20906 5.58966 0 ]xsh
104.52 475.97 mo
(\000:\000;\000\035\0007\000;\000:\000F)
[4.42776 3.90274 5.49881 4.48032 3.90274 4.42776 0 ]xsh
134.59 475.97 mo
(\0007\000<\0003\0003\000,\0003\000*\000F)
[4.45438 6.03986 6.09225 6.09225 3.30978 6.09225 5.45187 0 ]xsh
175.67 475.97 mo
(\000,\000;\000\014\000F)
[3.3197 3.88672 2.45868 0 ]xsh
13.2102 487.89 mo
(\000\034\000+\000"\0003\000F)
[10.0562 6.0136 4.90056 6.05557 0 ]xsh
43.5502 487.89 mo
(\000\035\000F)
[5.48103 0 ]xsh
52.3902 487.89 mo
(\000<\000:\000"\0007\000F)
[6.06758 4.42953 4.96497 4.48209 0 ]xsh
75.5901 487.89 mo
(\0000\000"\000=\000"\0000\000F)
[3.37866 4.99557 5.58357 4.99557 3.37866 0 ]xsh
100.99 487.89 mo
(\000;\000+\0007\000"\000\035\000!\000F)
[3.90578 6.07928 4.48335 4.96626 5.50186 5.50185 0 ]xsh
134.43 487.89 mo
(\000\037\0000\0004\000 \000/\000:\000F)
[5.82712 3.33859 4.9451 4.45166 6.1315 4.42007 0 ]xsh
167.02 487.89 mo
(\000,\0003\000F)
[3.2771 6.05957 0 ]xsh
179.72 487.89 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
197.9 487.89 mo
(\000/\000"\0007\0003\000"\0000\000F)
[6.15555 4.97955 4.49667 6.13455 4.97955 3.36264 0 ]xsh
231.06 487.89 mo
(\0004\0007\000F)
[5.06094 4.58847 0 ]xsh
243.83 487.89 mo
(\000,\000:\000F)
[3.38507 4.47711 0 ]xsh
254.83 487.89 mo
(\0005\0007\000"\000"\0002\0005\000;\000"\000!\000\005\000F)
[5.51468 4.48575 4.96869 4.96863 8.88519 5.51468 3.90817 4.96866 5.50427 2.52231 0 ]xsh
309.66 487.89 mo
(\0002\0004\000:\000;\000F)
[8.77029 4.84335 4.31836 3.7933 0 ]xsh
335 487.89 mo
(\0004\000$\000F)
[4.90137 3.30527 0 ]xsh
346.55 487.89 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
3.45013 499.58 mo
(\000:\000;\000\035\000;\000"\000F)
[4.39861 3.87358 5.46965 3.87358 4.93405 0 ]xsh
29.7501 499.58 mo
(\0003\000"\000"\000!\000"\000!\000F)
[6.12688 4.97186 4.97186 5.50746 4.97186 5.50746 0 ]xsh
65.4601 499.58 mo
(\000;\0004\000F)
[3.81781 4.86789 0 ]xsh
77.9401 499.58 mo
(\0007\000"\000:\000<\0002\000"\000F)
[4.48224 4.96513 4.42969 6.06775 8.88165 4.96512 0 ]xsh
115.65 499.58 mo
(\000,\000;\000F)
[3.10068 3.66769 0 ]xsh
126.46 499.58 mo
(\000,\000:\000F)
[3.38507 4.47711 0 ]xsh
138.45 499.58 mo
(\000\035\0001\0007\000"\000\035\000!\000@\000F)
[5.43488 3.28238 4.41641 4.89926 5.43491 5.43488 5.45587 0 ]xsh
176.78 499.58 mo
(\000\035\000;\000F)
[5.57941 3.98334 0 ]xsh
189.81 499.58 mo
(\000;\000+\000"\000F)
[3.9588 6.13232 5.01929 0 ]xsh
208.67 499.58 mo
(\000<\000:\000"\0007\000F)
[6.0676 4.42953 4.96497 4.48206 0 ]xsh
232.62 499.58 mo
(\0000\000"\000=\000"\0000\000\011\0003\000\035\0002\000"\0000\000@\000\005\000F\000;\000+\000"\000F\000;\000+\0007\000"\000\035\000!\000\001\000:\000F)
[3.28238 4.89926 5.4873 4.89929 3.28235 10.0653 6.05429 5.43488 8.8158 4.89929 3.28238 5.45587 
2.45294 4.33914 3.83881 6.01233 4.89929 4.14963 3.83881 6.0123 4.41638 4.89929 5.43491 5.43488 
2.77835 4.36383 0 ]xsh
3.45018 511.32 mo
(\000:\000;\000\035\000 \000.\000F)
[4.41447 3.88943 5.4855 4.44604 6.1259 0 ]xsh
32.5102 511.32 mo
(\000\035\0003\000!\000F)
[5.46965 6.08907 5.46965 0 ]xsh
54.4602 511.32 mo
(\000 \0004\0003\000;\0007\0004\0000\000F)
[4.45148 4.94495 6.11037 3.89488 4.47247 4.94495 3.33844 0 ]xsh
91.2202 511.32 mo
(\000\037\0000\0004\000 \000/\000\013\000F)
[5.83287 3.34438 4.95088 4.4574 6.13728 2.42039 0 ]xsh
123.87 511.32 mo
(\000\033\000+\000"\000F)
[6.75604 6.13647 5.02347 0 ]xsh
146.6 511.32 mo
(\000;\000+\0007\000"\000\035\000!\000\002\000:\000F)
[3.90768 6.08124 4.48526 4.96817 5.50378 5.50378 2.95233 4.43274 0 ]xsh
189.61 511.32 mo
(\0007\000"\000*\000,\000:\000;\000"\0007\000F)
[4.41638 4.89929 5.41391 3.27179 4.36383 3.83881 4.89929 4.41638 0 ]xsh
230.3 511.32 mo
(\000:\000;\000\035\000;\000"\000\005\000F)
[4.41238 3.88736 5.48343 3.88736 4.94781 2.5015 0 ]xsh
260.59 511.32 mo
(\000+\0004\000>\000"\000=\000"\0007\000\005\000F)
[6.05508 4.93167 7.78766 4.94208 5.53006 4.94205 4.45917 2.49573 0 ]xsh
306.97 511.32 mo
(\000,\000:\000F)
[3.38507 4.47711 0 ]xsh
319.6 511.32 mo
(\000:\000\035\000=\000"\000!\000F)
[4.43097 5.50201 5.55441 4.96643 5.50201 0 ]xsh
350.24 511.32 mo
(\000\037\000@\000F)
[5.87933 5.56433 0 ]xsh
3.31024 523.34 mo
(\0000\0004\000>\000\007\0000\000"\000=\000"\0000\000F)
[3.39084 4.99734 7.85336 2.71889 3.39084 5.00775 5.59575 5.00775 3.39084 0 ]xsh
47.8503 523.34 mo
(\000.\000"\0007\0003\000"\0000\000F)
[6.11182 4.93581 4.45293 6.09082 4.93581 3.31889 0 ]xsh
81.3002 523.34 mo
(\0007\0004\000<\000;\000,\0003\000"\000:\000\005\000F)
[4.46974 4.94223 6.05524 3.89217 3.32515 6.10764 4.95264 4.41721 2.50627 0 ]xsh
125.64 523.34 mo
(\000:\000<\000 \000+\000F)
[4.50243 6.14047 4.534 6.15091 0 ]xsh
150.38 523.34 mo
(\000\035\000:\000F)
[5.62378 4.55273 0 ]xsh
163.89 523.34 mo
(\000;\000+\000"\000F)
[3.9588 6.13232 5.01929 0 ]xsh
182.11 523.34 mo
(\000,\0003\000;\000"\0007\0007\000<\0005\000;\000F)
[3.38028 6.16275 3.94727 5.00775 4.52487 4.52484 6.11035 5.55377 3.9473 0 ]xsh
228.64 523.34 mo
(\000\035\0003\000!\000F)
[5.46967 6.08905 5.46967 0 ]xsh
249.32 523.34 mo
(\0005\000\035\000*\000"\000F)
[5.46582 5.45538 5.43442 4.9198 0 ]xsh
274.15 523.34 mo
(\000'\000<\0000\000;\000F)
[9.08401 6.01807 3.29855 3.85498 0 ]xsh
299.97 523.34 mo
(\000+\000\035\0003\000!\0000\000"\0007\000:\000\025\000F)
[6.05991 5.48248 6.10187 5.48248 3.32996 4.94684 4.46399 4.41144 2.54248 0 ]xsh
346.56 523.34 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
3.44025 535.04 mo
(\000.\000"\0007\0003\000"\0000\000F)
[6.15988 4.98387 4.50099 6.13889 4.98387 3.36696 0 ]xsh
37.3702 535.04 mo
(\0005\000\035\000:\000:\000"\000:\000F)
[5.44531 5.43488 4.36385 4.36385 4.89928 4.36385 0 ]xsh
70.2602 535.04 mo
(\000;\000+\000,\000:\000F)
[3.9601 6.13359 3.39308 4.48512 0 ]xsh
92.0302 535.04 mo
(\000:\000;\000\035\000;\000"\000F)
[4.39861 3.87358 5.46965 3.87358 4.93405 0 ]xsh
118.51 535.04 mo
(\000;\0004\000F)
[4.05782 5.10789 0 ]xsh
131.47 535.04 mo
(\000;\000+\000"\000F)
[3.83881 6.0123 4.89929 0 ]xsh
150.57 535.04 mo
(\000<\000:\000"\0007\000F)
[6.0676 4.42953 4.96497 4.48206 0 ]xsh
174.24 535.04 mo
(\0000\000"\000=\000"\0000\000F)
[3.37866 4.99557 5.58356 4.99561 3.37866 0 ]xsh
200.3 535.04 mo
(\000\035\000:\000F)
[5.62378 4.55273 0 ]xsh
214.26 535.04 mo
(\0005\000\035\0007\000;\000F)
[5.47543 5.465 4.44653 3.8689 0 ]xsh
237.54 535.04 mo
(\0004\000$\000F)
[4.90137 3.30527 0 ]xsh
249.81 535.04 mo
(\000;\000+\000"\000F)
[3.83881 6.01233 4.89926 0 ]xsh
268.67 535.04 mo
(\000<\0005\000 \000\035\0000\0000\000F)
[6.0647 5.50812 4.45819 5.49771 3.34518 3.34515 0 ]xsh
300.76 535.04 mo
(\0003\0004\000;\000,\000$\000@\000,\0003\000*\000F)
[6.11118 4.94574 3.89569 3.32867 3.34967 5.51276 3.32867 6.11115 5.47079 0 ]xsh
346.55 535.04 mo
(\000;\000+\000"\000F)
[3.9588 6.13232 5.01929 0 ]xsh
3.46024 546.5 mo
(\000\035\000!\000!\0007\000"\000:\000:\000F)
[5.53439 5.53438 5.53438 4.5159 4.99878 4.46332 4.46335 0 ]xsh
41.6102 546.5 mo
(\000:\0005\000\035\000 \000"\000F)
[4.39685 5.4783 5.4679 4.42841 4.93228 0 ]xsh
69.7402 546.5 mo
(\0004\000$\000F)
[5.14137 3.54529 0 ]xsh
81.5302 546.5 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89929 0 ]xsh
99.7502 546.5 mo
(\0005\0007\000"\000"\0002\0005\000;\000,\0004\0003\000F)
[5.51292 4.48399 4.9669 4.96689 8.88341 5.51292 3.9064 3.33942 4.95648 6.12192 0 ]xsh
155.64 546.5 mo
(\000\035\0003\000!\000\016\0004\0007\000F)
[5.54993 6.16934 5.54993 5.14038 5.00391 4.53143 0 ]xsh
190.87 546.5 mo
(\000\031\000\016\000\032\000F)
[3.78162 5.04156 7.42511 0 ]xsh
210.71 546.5 mo
(\000 \0004\0002\0005\0000\000"\000;\000,\0004\0003\000\015\000F)
[4.45132 4.94476 8.87173 5.50122 3.33829 4.9552 3.89471 3.3277 4.94479 6.1102 2.51929 0 
]xsh
13.4402 558.01 mo
(\000\034\000"\000F)
[10.0123 4.85667 0 ]xsh
33.4202 558.01 mo
(\000<\000:\000"\000F)
[6.04147 4.40341 4.93886 0 ]xsh
53.7002 558.01 mo
(\000"\000?\000\035\000 \000;\0000\000@\000F)
[4.95023 5.44388 5.48584 4.44635 3.88974 3.33333 5.50682 0 ]xsh
91.6102 558.01 mo
(\000;\000+\000"\000F)
[3.83881 6.01231 4.89928 0 ]xsh
111.46 558.01 mo
(\000:\000\035\0002\000"\000F)
[4.42792 5.49899 8.87988 4.96338 0 ]xsh
140.18 558.01 mo
(\0002\000"\000 \000+\000\035\0003\000,\000:\0002\000F)
[8.89975 4.98325 4.47934 6.09628 5.51883 6.13824 3.35574 4.44781 8.89975 0 ]xsh
197.71 558.01 mo
(\000;\0004\000F)
[4.05783 5.10788 0 ]xsh
211.39 558.01 mo
(\0007\000"\000\035\0000\0000\0004\000 \000\035\000;\000"\000F)
[4.46848 4.95135 5.48694 3.33444 3.33444 4.94095 4.44748 5.48694 3.8909 4.95135 0 ]xsh
261.5 558.01 mo
(\000\035\000F)
[5.48102 0 ]xsh
272.1 558.01 mo
(\0005\0007\0004\000 \000"\000:\000:\0004\0007\000F)
[5.48199 4.45309 4.92554 4.4321 4.93597 4.40054 4.40051 4.92557 4.45306 0 ]xsh
319.42 558.01 mo
(\000%\0009\0004\0002\000F)
[3.01865 4.62515 4.89816 8.8251 0 ]xsh
345.79 558.01 mo
(\0004\0003\000"\000F)
[4.83728 6.00272 4.84769 0 ]xsh
FZJXMS+*Cambria-9430 [7.5 0 0 -7.5 0 0 ]msf
109.92 574.43 mo
(\000\014\000\015\000\017\000\()
[6.00186 5.40927 7.07428 0 ]xsh
130.33 574.43 mo
(\000\022\000#\000\031\000 \000$\000\031\000\033\000%\000\035\000!\000 \000$\000\()
[5.24518 3.17517 4.26257 4.5101 3.40759 4.2626 3.21259 2.87509 2.64267 3.67755 4.51013 3.40759 
0 ]xsh
177.36 574.43 mo
(\000!\000 \000\()
[3.72174 4.55429 0 ]xsh
187.7 574.43 mo
(\000\015\000!\000\037\000"\000&\000%\000\034\000#\000\()
[5.45459 3.69211 6.48215 4.17218 4.59216 2.88965 3.97717 3.1897 0 ]xsh
224.53 574.43 mo
(\000\021\000'\000$\000%\000\034\000\037\000$\000\001\000\()
[4.40964 4.01962 3.27713 2.74463 3.83218 6.33716 3.27713 1.79971 0 ]xsh
256.59 574.43 mo
(\000\023\000!\000\036\000\004\000\()
[5.99933 3.68179 2.5343 1.97937 0 ]xsh
273.87 574.43 mo
(\000\007\000\006\000\002\000\()
[3.69565 4.34064 1.7832 0 ]xsh
285.88 574.43 mo
(\000\020\000!\000\004\000\()
[6.16562 3.64551 1.94312 0 ]xsh
300.77 574.43 mo
(\000\007\000\003\000\()
[3.7341 1.80667 0 ]xsh
308.85 574.43 mo
(\000\016\000\034\000\032\000#\000&\000\031\000#\000'\000\(\000\010\000\012\000\012\000\011\000\005\000\()
[4.93469 3.83215 4.01965 3.04468 4.44717 4.13211 3.04471 4.01962 3.12436 3.59219 4.02716 4.02719 
4.40964 1.70218 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/FZJXNB+*Times#20New#20Roman-9416-Identity-H uf
/FZJXNB+*Times#20New#20Roman-9416 /CIDFont ur
/FZJXMY+*Times#20New#20Roman-9417-Identity-H uf
/FZJXMY+*Times#20New#20Roman-9417 /CIDFont ur
/FZJXMQ+*Times#20New#20Roman-Italic-9421-Identity-H uf
/FZJXMQ+*Times#20New#20Roman-Italic-9421 /CIDFont ur
/FZJXMP+*Arial-9428-Identity-H uf
/FZJXMP+*Arial-9428 /CIDFont ur
/FZJXMR+*Times#20New#20Roman-Italic-9424-Identity-H uf
/FZJXMR+*Times#20New#20Roman-Italic-9424 /CIDFont ur
/FZJXMX+*Times#20New#20Roman-9413-Identity-H uf
/FZJXMX+*Times#20New#20Roman-9413 /CIDFont ur
/FZJXMS+*Cambria-9430-Identity-H uf
/FZJXMS+*Cambria-9430 /CIDFont ur
/FZJXNA+*Cambria-9432-Identity-H uf
/FZJXNA+*Cambria-9432 /CIDFont ur
/FZJXMV+*Times#20New#20Roman-9414-Identity-H uf
/FZJXMV+*Times#20New#20Roman-9414 /CIDFont ur
/FZJXMW+*Arial-9429-Identity-H uf
/FZJXMW+*Arial-9429 /CIDFont ur
/FZJXMU+*Times#20New#20Roman-9418-Identity-H uf
/FZJXMU+*Times#20New#20Roman-9418 /CIDFont ur
/FZJXMZ+*Times#20New#20Roman-9415-Identity-H uf
/FZJXMZ+*Times#20New#20Roman-9415 /CIDFont ur
/FZJXMT+*Times#20New#20Roman-9419-Identity-H uf
/FZJXMT+*Times#20New#20Roman-9419 /CIDFont ur
/FZJXML+*Cambria-9431-Identity-H uf
/FZJXML+*Cambria-9431 /CIDFont ur
/FZJXMN+*Times#20New#20Roman-9425-Identity-H uf
/FZJXMN+*Times#20New#20Roman-9425 /CIDFont ur
/FZJXMM+*Times#20New#20Roman-9423-Identity-H uf
/FZJXMM+*Times#20New#20Roman-9423 /CIDFont ur
/FZJXMJ+*Minion#20Pro-9433-Identity-H uf
/FZJXMJ+*Minion#20Pro-9433 /CIDFont ur
/FZJXMI+*Times#20New#20Roman-9426-Identity-H uf
/FZJXMI+*Times#20New#20Roman-9426 /CIDFont ur
/FZJXMH+*Times#20New#20Roman-Bold-9420-Identity-H uf
/FZJXMH+*Times#20New#20Roman-Bold-9420 /CIDFont ur
/FZJXMO+*Times#20New#20Roman-9422-Identity-H uf
/FZJXMO+*Times#20New#20Roman-9422 /CIDFont ur
/FZJXMK+*Arial-9427-Identity-H uf
/FZJXMK+*Arial-9427 /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
